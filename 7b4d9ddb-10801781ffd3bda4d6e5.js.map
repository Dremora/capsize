{"version":3,"sources":["webpack:///../node_modules/fontkit/index.js"],"names":["_interopDefault","ex","r","_Object$getOwnPropertyDescriptor","_getIterator","_Object$freeze","_typeof","_Object$keys","_Object$defineProperty","_classCallCheck","_createClass","_Map","_possibleConstructorReturn","_inherits","restructure_src_utils","_Object$defineProperties","isEqual","_Object$assign","_String$fromCodePoint","_Array$from","_Set","unicode","UnicodeTrie","StateMachine","_Number$EPSILON","cloneDeep","_Promise","inflate","brotli","fs","fontkit","formats","cache","target","key","descriptor","get","value","call","this","fn","memoized","_len","arguments","length","args","Array","_key","has","result","apply","set","registerFormat","format","push","openSync","filename","postscriptName","buffer","readFileSync","create","open","callback","readFile","err","font","e","i","probe","DecodeStream","getFont","Error","defaultLanguage","setDefaultLanguage","lang","undefined","SubHeader","Struct","firstCode","uint16","entryCount","idDelta","int16","idRangeOffset","CmapGroup","startCharCode","uint32","endCharCode","glyphID","UnicodeValueRange","startUnicodeValue","uint24","additionalCount","uint8","UVSMapping","unicodeValue","DefaultUVS","NonDefaultUVS","VarSelectorRecord","varSelector","defaultUVS","Pointer","type","nonDefaultUVS","CmapSubtable","VersionedStruct","0","language","codeMap","LazyArray","2","subHeaderKeys","subHeaderCount","t","Math","max","subHeaders","glyphIndexArray","4","segCountX2","segCount","searchRange","entrySelector","rangeShift","endCode","reservedPad","Reserved","startCode","_currentOffset","6","glyphIndices","8","reserved","is32","nGroups","groups","10","12","13","14","numRecords","varSelectors","CmapEntry","platformID","encodingID","table","lazy","cmap","version","numSubtables","tables","head","int32","revision","checkSumAdjustment","magicNumber","flags","unitsPerEm","created","modified","xMin","yMin","xMax","yMax","macStyle","Bitfield","lowestRecPPEM","fontDirectionHint","indexToLocFormat","glyphDataFormat","hhea","ascent","descent","lineGap","advanceWidthMax","minLeftSideBearing","minRightSideBearing","xMaxExtent","caretSlopeRise","caretSlopeRun","caretOffset","metricDataFormat","numberOfMetrics","HmtxEntry","advance","bearing","hmtx","metrics","parent","bearings","maxp","numGlyphs","maxPoints","maxContours","maxComponentPoints","maxComponentContours","maxZones","maxTwilightPoints","maxStorage","maxFunctionDefs","maxInstructionDefs","maxStackElements","maxSizeOfInstructions","maxComponentElements","maxComponentDepth","getEncoding","languageID","MAC_LANGUAGE_ENCODINGS","ENCODINGS","15","17","18","24","25","26","27","28","30","37","38","39","40","143","146","LANGUAGES","60","90","1","31","61","91","32","62","92","3","33","63","93","34","64","94","5","35","65","128","36","66","129","7","67","130","68","131","9","69","132","70","133","11","41","71","134","42","72","135","43","73","136","44","74","137","45","75","138","16","46","76","139","47","77","140","48","78","141","19","49","79","142","20","50","80","21","51","81","144","22","52","82","145","23","53","83","54","84","147","55","85","148","56","86","149","57","87","150","58","88","151","29","59","89","NameRecord","nameID","string","String","relativeTo","allowNull","LangTagRecord","tag","NameTable","count","stringOffset","records","langTagCount","langTags","NAMES","process","stream","_iterator","_isArray","isArray","_i","_ref","next","done","record","obj","preEncode","val","indexOf","Buffer","byteLength","en","size","OS2","header","xAvgCharWidth","usWeightClass","usWidthClass","fsType","ySubscriptXSize","ySubscriptYSize","ySubscriptXOffset","ySubscriptYOffset","ySuperscriptXSize","ySuperscriptYSize","ySuperscriptXOffset","ySuperscriptYOffset","yStrikeoutSize","yStrikeoutPosition","sFamilyClass","panose","ulCharRange","vendorID","fsSelection","usFirstCharIndex","usLastCharIndex","typoAscender","typoDescender","typoLineGap","winAscent","winDescent","codePageRange","xHeight","capHeight","defaultChar","breakChar","maxContent","usLowerOpticalPointSize","usUpperOpticalPointSize","versions","post","fixed32","italicAngle","underlinePosition","underlineThickness","isFixedPitch","minMemType42","maxMemType42","minMemType1","maxMemType1","numberOfGlyphs","glyphNameIndex","names","2.5","offsets","map","cvt","controlValues","fpgm","instructions","loca","prep","controlValueProgram","glyf","CFFIndex","prototype","getCFFVersion","ctx","hdrSize","decode","readUInt32BE","readUInt16BE","offSize","readUInt8","offsetType","pos","ret","startPos","start","end","offset","arr","item","encode","writeUInt16BE","sizes","s","writeUInt8","_iterator2","_isArray2","_i2","_ref2","_iterator3","_isArray3","_i3","_ref3","_item","FLOAT_LOOKUP","FLOAT_ENCODE_LOOKUP","CFFOperand","readInt16BE","readInt32BE","str","b","n1","n2","parseFloat","forceLarge","ceil","Number","writeInt32BE","writeInt16BE","c1","c2","FLOAT_EOF","CFFDict","ops","fields","field","decodeOperands","operands","_this","op","encodeOperands","_this2","_startOffset","_field","PropertyDescriptor","dict","includePointers","pointerSize","startOffset","len","k","pointers","pointerOffset","_iterator4","_isArray4","_i4","_ref4","_iterator5","_isArray5","_i5","_ref5","_op","ptr","CFFPointer","_r$Pointer","options","Ptr","valueOf","CFFPrivateDict","CFFBlendOp","numBlends","pop","standardStrings","StandardEncoding","ISOAdobeCharset","LangSysTable","reqFeatureIndex","featureCount","featureIndexes","LangSysRecord","langSys","Script","defaultLangSys","langSysRecords","ScriptRecord","script","ScriptList","Feature","featureParams","lookupCount","lookupListIndexes","FeatureRecord","feature","FeatureList","LookupFlags","markAttachmentType","LookupList","SubTable","Lookup","lookupType","subTableCount","subTables","markFilteringSet","Optional","useMarkFilteringSet","_","RangeRecord","startCoverageIndex","Coverage","glyphCount","glyphs","rangeCount","rangeRecords","ClassRangeRecord","class","ClassDef","startGlyph","classValueArray","classRangeCount","classRangeRecord","Device","a","deltaFormat","LookupRecord","sequenceIndex","lookupListIndex","Rule","input","lookupRecords","RuleSet","ClassRule","classes","ClassSet","Context","coverage","ruleSetCount","ruleSets","classDef","classSetCnt","classSet","coverages","ChainRule","backtrackGlyphCount","backtrack","inputGlyphCount","lookaheadGlyphCount","lookahead","ChainRuleSet","ChainingContext","chainCount","chainRuleSets","backtrackClassDef","inputClassDef","lookaheadClassDef","chainClassSet","backtrackCoverage","inputCoverage","lookaheadCoverage","F2DOT14","Fixed","RegionAxisCoordinates","startCoord","peakCoord","endCoord","VariationRegionList","axisCount","regionCount","variationRegions","DeltaSet","shortDeltas","shortDeltaCount","regionDeltas","int8","regionIndexCount","deltas","concat","ItemVariationData","itemCount","regionIndexes","deltaSets","ItemVariationStore","variationRegionList","variationDataCount","itemVariationData","ConditionTable","axisIndex","filterRangeMinValue","filterRangeMaxValue","ConditionSet","conditionCount","conditionTable","FeatureTableSubstitutionRecord","featureIndex","alternateFeatureTable","FeatureTableSubstitution","substitutionCount","substitutions","FeatureVariationRecord","conditionSet","featureTableSubstitution","FeatureVariations","majorVersion","minorVersion","featureVariationRecordCount","featureVariationRecords","PredefinedOp","predefinedOps","index","CFFEncodingVersion","_r$Number","Range1","first","nLeft","Range2","CFFEncoding","nCodes","codes","nRanges","ranges","RangeArray","_r$Array","resolveLength","res","range","CFFCharset","CharStrings","FDRange3","fd","FDRange4","FDSelect","fds","sentinel","CFFPrivateOp","FontDict","CFFTopDict","VariationStore","itemVariationStore","CFF2TopDict","CFFTop","fixed16","nameIndex","topDictIndex","stringIndex","globalSubrIndex","topDict","CFFFont","top","isCIDFont","ROS","sid","getCharString","glyph","readBuffer","getGlyphName","gid","charset","fdForGlyph","low","high","mid","privateDictForGlyph","FDArray","Private","FullName","FamilyName","VerticalOrigin","glyphIndex","vertOriginY","VORG","defaultVertOriginY","numVertOriginYMetrics","BigMetrics","height","width","horiBearingX","horiBearingY","horiAdvance","vertBearingX","vertBearingY","vertAdvance","SmallMetrics","bearingX","bearingY","EBDTComponent","xOffset","yOffset","ByteAligned","BitAligned","SBitLineMetrics","data","pad","numComponents","components","dataLen","ascender","descender","widthMax","caretSlopeNumerator","caretSlopeDenominator","minOriginSB","minAdvanceSB","maxBeforeBL","minAfterBL","CodeOffsetPair","glyphCode","IndexSubtable","imageFormat","imageDataOffset","offsetArray","lastGlyphIndex","firstGlyphIndex","imageSize","bigMetrics","glyphArray","glyphCodeArray","IndexSubtableArray","subtable","BitmapSizeTable","indexSubTableArray","indexTablesSize","numberOfIndexSubTables","colorRef","hori","vert","startGlyphIndex","endGlyphIndex","ppemX","ppemY","bitDepth","EBLC","numSizes","ImageTable","ppem","resolution","imageOffsets","sbix","numImgTables","imageTables","LayerRecord","paletteIndex","BaseGlyphRecord","firstLayerIndex","numLayers","COLR","numBaseGlyphRecords","baseGlyphRecord","layerRecords","numLayerRecords","ColorRecord","blue","green","red","alpha","CPAL","numPaletteEntries","numPalettes","numColorRecords","colorRecords","colorRecordIndices","offsetPaletteTypeArray","offsetPaletteLabelArray","offsetPaletteEntryLabelArray","BaseCoord","coordinate","referenceGlyph","baseCoordPoint","deviceTable","BaseValues","defaultIndex","baseCoordCount","baseCoords","FeatMinMaxRecord","minCoord","maxCoord","MinMax","featMinMaxCount","featMinMaxRecords","BaseLangSysRecord","minMax","BaseScript","baseValues","defaultMinMax","baseLangSysCount","baseLangSysRecords","BaseScriptRecord","BaseScriptList","BaseTagList","Axis","baseTagList","baseScriptList","BASE","horizAxis","vertAxis","AttachPoint","AttachList","attachPoints","CaretValue","caretValuePoint","LigGlyph","LigCaretList","ligGlyphCount","ligGlyphs","MarkGlyphSetsDef","markSetTableFormat","markSetCount","GDEF","glyphClassDef","attachList","ligCaretList","markAttachClassDef","markGlyphSetsDef","ValueFormat","types","xPlacement","yPlacement","xAdvance","yAdvance","xPlaDevice","yPlaDevice","xAdvDevice","yAdvDevice","ValueRecord","buildStruct","struct","rel","PairValueRecord","secondGlyph","value1","value2","PairSet","Class2Record","Anchor","xCoordinate","yCoordinate","anchorPoint","xDeviceTable","yDeviceTable","EntryExitRecord","entryAnchor","exitAnchor","MarkRecord","markAnchor","MarkArray","BaseRecord","classCount","BaseArray","ComponentRecord","LigatureAttach","LigatureArray","GPOSLookup","valueFormat","valueCount","values","valueFormat1","valueFormat2","pairSetCount","pairSets","classDef1","classDef2","class1Count","class2Count","classRecords","entryExitCount","entryExitRecords","markCoverage","baseCoverage","markArray","baseArray","ligatureCoverage","ligatureArray","mark1Coverage","mark2Coverage","mark1Array","mark2Array","posFormat","extension","GPOS","scriptList","featureList","lookupList","featureVariations","Sequence","AlternateSet","Ligature","compCount","LigatureSet","GSUBLookup","deltaGlyphID","substitute","substFormat","sequences","alternateSet","ligatureSets","substitutes","GSUB","JstfGSUBModList","JstfPriority","shrinkageEnableGSUB","shrinkageDisableGSUB","shrinkageEnableGPOS","shrinkageDisableGPOS","shrinkageJstfMax","extensionEnableGSUB","extensionDisableGSUB","extensionEnableGPOS","extensionDisableGPOS","extensionJstfMax","JstfLangSys","JstfLangSysRecord","jstfLangSys","JstfScript","extenderGlyphs","langSysCount","JstfScriptRecord","JSTF","scriptCount","VariableSizeNumber","_size","readUInt24BE","MapDataEntry","entry","entryFormat","outerIndex","innerIndex","DeltaSetIndexMap","mapCount","mapData","HVAR","advanceWidthMapping","LSBMapping","RSBMapping","Signature","SignatureBlock","cbSignature","signature","DSIG","ulVersion","usNumSigs","usFlag","signatures","signatureBlocks","GaspRange","rangeMaxPPEM","rangeGaspBehavior","gasp","numRanges","gaspRanges","DeviceRecord","pixelSize","maximumWidth","widths","hdmx","sizeDeviceRecord","KernPair","left","right","ClassTable","firstGlyph","nGlyphs","Kern2Array","off","leftTable","rowWidth","KernSubtable","nPairs","pairs","rightTable","array","kernValueCount","leftClassCount","rightClassCount","kernValue","leftClass","rightClass","kernIndex","KernTable","subVersion","padding","tupleIndex","kern","nTables","LTSH","yPels","PCLT","fontNumber","pitch","style","typeFamily","symbolSet","typeface","characterComplement","fileName","strokeWeight","widthType","serifStyle","Ratio","bCharSet","xRatio","yStartRatio","yEndRatio","vTable","yPelHeight","VdmxGroup","recs","startsz","endsz","entries","VDMX","numRecs","numRatios","ratioRanges","vhea","advanceHeightMax","minTopSideBearing","minBottomSideBearing","yMaxExtent","VmtxEntry","vmtx","shortFrac","Correspondence","fromCoord","toCoord","Segment","pairCount","correspondence","avar","segment","UnboundedArrayAccessor","base","_items","getItem","inspect","constructor","name","UnboundedArray","LookupTable","ValueType","Shadow","BinarySearchHeader","unitSize","nUnits","LookupSegmentSingle","lastGlyph","LookupSegmentArray","LookupSingle","binarySearchHeader","segments","StateTable","entryData","newState","Entry","StateArray","nClasses","StateHeader","classTable","stateArray","entryTable","BslnSubtable","mappingData","standardGlyph","controlPoints","bsln","defaultBaseline","Setting","setting","fontFeatures","FeatureName","nSettings","settingTable","featureFlags","defaultSetting","feat","featureNameCount","reserved1","reserved2","featureNames","Axis$1","axisTag","minValue","defaultValue","maxValue","Instance","coord","postscriptNameID","instanceSize","fvar","offsetToData","countSizePairs","axisSize","instanceCount","axis","instance","shortFrac$1","Offset","gvar","globalCoordCount","globalCoords","ClassTable$1","subFeatureFlags","stateTable","ClassLookupTable","newStateOffset","StateHeader1","WidthDeltaRecord","justClass","beforeGrowLimit","beforeShrinkLimit","afterGrowLimit","afterShrinkLimit","growFlags","shrinkFlags","WidthDeltaCluster","ActionData","lowerLimit","upperLimit","order","addGlyph","substThreshold","substGlyph","variationAxis","minimumLimit","noStretchValue","maximumLimit","Action","actionClass","actionType","actionLength","actionData","PostcompensationAction","PostCompensationTable","lookupTable","JustificationTable","wdcOffset","postCompensationTable","widthDeltaClusters","just","horizontal","vertical","LigatureData","action","ContextualData","markIndex","currentIndex","InsertionData","currentInsertIndex","markedInsertIndex","SubstitutionTable","items","SubtableData","substitutionTable","ligatureActions","ligatureList","insertionActions","Subtable","FeatureEntry","featureType","featureSetting","enableFlags","disableFlags","MorxChain","defaultFlags","chainLength","nFeatureEntries","nSubtables","features","subtables","morx","unused","nChains","chains","OpticalBounds","bottom","opbd","CBLC","_class$1","TableEntry","checkSum","Directory","numTables","binarySearch","cmp","min","_applyDecoratedDescriptor$1","property","decorators","context","desc","Object","forEach","enumerable","configurable","initializer","writable","slice","reverse","reduce","decorator","tables$$","VoidPointer","maxExponentFor2","floor","log","LN2","maxPowerOf2","pow","iconv","CmapProcessor","cmapTable","encoding","findSubtable","encodingExists","uvs","lookup","codepoint","variationSelector","buf","getVariationSelector","rangeOffset","_gid","_min","_max","_mid","group","selectors","toArray","x","sel","getCharacterSet","endCodes","tail","_res","codePointsForGlyph","_res2","delta","c","g","_res3","_i6","_ref6","_res4","_iterator6","_isArray6","_i7","_ref7","_group","KernProcessor","positions","id","getKerning","crossStream","variation","pairIdx","pair","leftOffset","rightOffset","override","UnicodeLayoutEngine","positionGlyphs","clusterStart","clusterEnd","isMark","positionCluster","baseBox","cbox","copy","codePoints","minX","yGap","mark","markBox","position","combiningClass","getCombiningClass","maxX","minY","maxY","codePoint","BBox","Infinity","addPoint","y","abs","UNICODE_SCRIPTS","Caucasian_Albanian","Arabic","Imperial_Aramaic","Armenian","Avestan","Balinese","Bamum","Bassa_Vah","Batak","Bengali","Bopomofo","Brahmi","Braille","Buginese","Buhid","Chakma","Canadian_Aboriginal","Carian","Cham","Cherokee","Coptic","Cypriot","Cyrillic","Devanagari","Deseret","Duployan","Egyptian_Hieroglyphs","Elbasan","Ethiopic","Georgian","Glagolitic","Gothic","Grantha","Greek","Gujarati","Gurmukhi","Hangul","Han","Hanunoo","Hebrew","Hiragana","Pahawh_Hmong","Katakana_Or_Hiragana","Old_Italic","Javanese","Kayah_Li","Katakana","Kharoshthi","Khmer","Khojki","Kannada","Kaithi","Tai_Tham","Lao","Latin","Lepcha","Limbu","Linear_A","Linear_B","Lisu","Lycian","Lydian","Mahajani","Mandaic","Manichaean","Mende_Kikakui","Meroitic_Cursive","Meroitic_Hieroglyphs","Malayalam","Modi","Mongolian","Mro","Meetei_Mayek","Myanmar","Old_North_Arabian","Nabataean","Nko","Ogham","Ol_Chiki","Old_Turkic","Oriya","Osmanya","Palmyrene","Pau_Cin_Hau","Old_Permic","Phags_Pa","Inscriptional_Pahlavi","Psalter_Pahlavi","Phoenician","Miao","Inscriptional_Parthian","Rejang","Runic","Samaritan","Old_South_Arabian","Saurashtra","Shavian","Sharada","Siddham","Khudawadi","Sinhala","Sora_Sompeng","Sundanese","Syloti_Nagri","Syriac","Tagbanwa","Takri","Tai_Le","New_Tai_Lue","Tamil","Tai_Viet","Telugu","Tifinagh","Tagalog","Thaana","Thai","Tibetan","Tirhuta","Ugaritic","Vai","Warang_Citi","Old_Persian","Cuneiform","Yi","Inherited","Common","Unknown","OPENTYPE_SCRIPTS","RTL","arab","hebr","syrc","thaa","cprt","khar","phnx","lydi","avst","armi","phli","prti","sarb","orkh","samr","mand","merc","mero","mani","mend","nbat","narb","palm","phlp","direction","GlyphRun","direction$$","bbox","p","GlyphPosition","allTypographicFeatures","code","exclusive","allTypeFeatures","ligatures","requiredLigatures","commonLigatures","rareLigatures","rebusPictures","diphthongLigatures","squaredLigatures","abbrevSquaredLigatures","symbolLigatures","contextualLigatures","historicalLigatures","cursiveConnection","unconnected","partiallyConnected","cursive","letterCase","verticalSubstitution","substituteVerticalForms","linguisticRearrangement","numberSpacing","monospacedNumbers","proportionalNumbers","thirdWidthNumbers","quarterWidthNumbers","smartSwash","wordInitialSwashes","wordFinalSwashes","nonFinalSwashes","diacritics","showDiacritics","hideDiacritics","decomposeDiacritics","verticalPosition","normalPosition","superiors","inferiors","ordinals","scientificInferiors","fractions","noFractions","verticalFractions","diagonalFractions","overlappingCharacters","preventOverlap","typographicExtras","slashedZero","mathematicalExtras","mathematicalGreek","ornamentSets","noOrnaments","dingbats","piCharacters","fleurons","decorativeBorders","internationalSymbols","mathSymbols","characterAlternatives","noAlternates","designComplexity","designLevel1","designLevel2","designLevel3","designLevel4","designLevel5","styleOptions","noStyleOptions","displayText","engravedText","illuminatedCaps","titlingCaps","tallCaps","characterShape","traditionalCharacters","simplifiedCharacters","JIS1978Characters","JIS1983Characters","JIS1990Characters","traditionalAltOne","traditionalAltTwo","traditionalAltThree","traditionalAltFour","traditionalAltFive","expertCharacters","JIS2004Characters","hojoCharacters","NLCCharacters","traditionalNamesCharacters","numberCase","lowerCaseNumbers","upperCaseNumbers","textSpacing","proportionalText","monospacedText","halfWidthText","thirdWidthText","quarterWidthText","altProportionalText","altHalfWidthText","transliteration","noTransliteration","annotation","noAnnotation","boxAnnotation","roundedBoxAnnotation","circleAnnotation","invertedCircleAnnotation","parenthesisAnnotation","periodAnnotation","romanNumeralAnnotation","diamondAnnotation","invertedBoxAnnotation","invertedRoundedBoxAnnotation","kanaSpacing","fullWidthKana","proportionalKana","ideographicSpacing","fullWidthIdeographs","proportionalIdeographs","halfWidthIdeographs","unicodeDecomposition","canonicalComposition","compatibilityComposition","transcodingComposition","rubyKana","CJKSymbolAlternatives","noCJKSymbolAlternatives","CJKSymbolAltOne","CJKSymbolAltTwo","CJKSymbolAltThree","CJKSymbolAltFour","CJKSymbolAltFive","ideographicAlternatives","noIdeographicAlternatives","ideographicAltOne","ideographicAltTwo","ideographicAltThree","ideographicAltFour","ideographicAltFive","CJKVerticalRomanPlacement","CJKVerticalRomanCentered","CJKVerticalRomanHBaseline","italicCJKRoman","CJKItalicRoman","caseSensitiveLayout","caseSensitiveSpacing","alternateKana","alternateHorizKana","alternateVertKana","stylisticAlternatives","noStylisticAlternates","stylisticAltOne","stylisticAltTwo","stylisticAltThree","stylisticAltFour","stylisticAltFive","stylisticAltSix","stylisticAltSeven","stylisticAltEight","stylisticAltNine","stylisticAltTen","stylisticAltEleven","stylisticAltTwelve","stylisticAltThirteen","stylisticAltFourteen","stylisticAltFifteen","stylisticAltSixteen","stylisticAltSeventeen","stylisticAltEighteen","stylisticAltNineteen","stylisticAltTwenty","contextualAlternates","swashAlternates","contextualSwashAlternates","lowerCase","defaultLowerCase","lowerCaseSmallCaps","lowerCasePetiteCaps","upperCase","defaultUpperCase","upperCaseSmallCaps","upperCasePetiteCaps","languageTag","CJKRomanSpacing","halfWidthCJKRoman","proportionalCJKRoman","defaultCJKRoman","fullWidthCJKRoman","selector","OTMapping","rlig","clig","dlig","hlig","liga","hist","smcp","pcap","frac","dnom","numr","afrc","case","ccmp","cpct","valt","swsh","cswh","curs","c2pc","c2sc","init","fin2","medi","med2","fin3","fina","pkna","half","halt","hkna","vkna","ital","lnum","onum","mgrk","calt","vrt2","tnum","pnum","sups","subs","ordn","pwid","hwid","qwid","twid","fwid","palt","trad","smpl","jp78","jp83","jp90","jp04","expt","hojo","nlck","tnam","ruby","titl","zero","ss01","ss02","ss03","ss04","ss05","ss06","ss07","ss08","ss09","ss10","ss11","ss12","ss13","ss14","ss15","ss16","ss17","ss18","ss19","ss20","_class$3","AATMapping","ot","aat","mapFeatureStrings","f","isNaN","typeCode","settingCode","_class$2","AATLookupTable","seg","glyphsForValue","classValue","_segment","AATStateMachine","processEntry","currentState","dir","classCode","shouldAdvance","entryIndex","traverse","opts","state","visited","add","_stateTable","row","enter","exit","AATMorxProcessor","_applyDecoratedDescriptor$2","processIndicRearragement","bind","processContextualSubstitution","processLigature","processNoncontextualSubstitutions","processGlyphInsertion","inputCache","chain","processSubtable","splice","ligatureStack","markedGlyph","markedIndex","stateMachine","getStateMachine","getProcessor","verb","swap","reorderGlyphs","subsitutions","getGlyph","_lookup","_lookupTable","_ligatureStack","actions","actionIndex","last","ligatureIndex","ligatureGlyphs","_codePoints","componentGlyph","unshift","store","ligatureEntry","_insertGlyphs","insertionActionIndex","isBefore","_glyphs","insertions","_count","_isBefore","getSupportedFeatures","generateInputs","generateInputCache","_iterator7","_isArray7","generateInputsForSubtable","stack","found","_cache","_stack$pop","rangeA","rangeB","reverseA","reverseB","_class$4","_temp","AATLayoutEngine","morxProcessor","fallbackPosition","glyphRun","mapOTToAAT","getAvailableFeatures","_feature","_r","_f","mapAATToOT","stringsForGlyph","glyphStrings","_addStrings","strings","_cmapProcessor","ShapingPlan","stages","globalFeatures","allFeatures","_addFeatures","global","stageIndex","stage","arg","local","addStage","setFeatureOverrides","assignGlobalFeatures","processor","applyFeatures","VARIATION_FEATURES","COMMON_FEATURES","FRACTIONAL_FEATURES","HORIZONTAL_FEATURES","DIRECTIONAL_FEATURES","ltr","rtl","DefaultShaper","plan","_plan","planPreprocessing","planFeatures","planPostprocessing","assignFeatures","userFeatures","isDigit","zeroMarkWidths","trie","FEATURES","ShapingClasses","ISOL","FINA","STATE_TABLE","ArabicShaper","_DefaultShaper","prev","curAction","prevAction","getShapingClass","_STATE_TABLE$state$ty","category","getCategory","_class$5","_temp$1","GlyphIterator","reset","shouldIgnore","ignoreMarks","ignoreBaseGlyphs","isBase","ignoreLigatures","isLigature","move","peek","idx","increment","peekIndex","DEFAULT_SCRIPTS","OTProcessor","scriptTag","lookups","variationsIndex","_variationProcessor","findVariationsIndex","normalizedCoords","selectScript","ligatureID","currentFeature","findScript","changed","repeat","substituteFeature","substituteFeatureForVariations","lookupsForFeatures","exclude","lookupIndex","sort","substitution","coords","variations","conditions","variationConditionsMatch","every","condition","advances","applyLookups","glyphIterator","_iterator8","_isArray8","_i8","_ref8","_ref9","cur","_iterator9","_isArray9","_i9","_ref10","applyLookup","applyLookupList","_iterator10","_isArray10","_i10","_ref11","lookupRecord","_iterator11","_isArray11","_i11","_ref12","coverageIndex","_iterator12","_isArray12","_i12","_ref13","match","sequence","matched","sequenceMatches","component","sequenceMatchIndices","coverageSequenceMatches","getClassID","_iterator13","_isArray13","_i13","_ref14","classSequenceMatches","_this3","classID","applyContext","_iterator14","_isArray14","_i14","_ref15","rule","_iterator15","_isArray15","_i15","_ref16","_rule","applyChainingContext","_iterator16","_isArray16","_i16","_ref17","rules","_iterator17","_isArray17","_i17","_ref18","_rule2","GlyphInfo","_font","ligatureComponent","isLigated","cursiveAttachment","markAttachment","shaperInfo","substituted","isMultiplied","_id","HangulShaper","getType","STATE_TABLE$1","DECOMPOSE","hasGlyphForCodePoint","decompose","COMPOSE","compose","TONE_MARK","reorderToneMark","INVALID","insertDottedCircle","isL","isV","isT","HANGUL_END","isLV","isLVT","isTone","glyphForCodePoint","l","v","ljmo","vjmo","insert","tjmo","prevType","lv","L_BASE","isCombiningL","V_BASE","isCombiningV","T_BASE","isCombiningT","del","advanceWidth","getLength","dottedCircle","_class$6","_temp$2","indicMachine","accepting","tags","useData","categories","decompositions","CATEGORIES","POSITIONS","Start","Ra_To_Become_Reph","Pre_M","Pre_C","Base_C","After_Main","Above_C","Before_Sub","Below_C","After_Sub","Before_Post","Post_C","After_Post","Final_C","SMVD","End","CONSONANT_FLAGS","JOINER_FLAGS","HALANT_OR_COENG_FLAGS","INDIC_CONFIGS","Default","hasOldSpec","virama","basePos","rephPos","rephMode","blwfMode","INDIC_DECOMPOSITIONS","trie$1","IndicShaper","setupSyllables","initialReordering","finalReordering","unicodeScript","fromOpenType","indicConfig","isOldSpec","_loop","d","decomposed","indicCategory","indicPosition","_class$7","_temp$3","IndicInfo","syllableType","syllable","isConsonant","isJoiner","isHalantOrCoeng","wouldSubstitute","_glyph$features","_layoutEngine","engine","GSUBProcessor","consonantPosition","consonant","info","nextSyllable","_glyphs$start$shaperI","limit","hasReph","rphf","_g","seenBelow","_info","_info2","j","disallowDoubleHalants","_j","lastPos","_info3","_j2","_j3","blwf","abvf","pstf","pref","_i18","_j4","cfar","_i19","nonJoiner","_j5","tryPref","BASE_C","_i20","newPos","_i21","oldPos","tmp","newRephPos","_i22","reph","_i23","_newPos","_oldPos2","_oldPos","_tmp","test","categories$1","decompositions$2","trie$2","stateMachine$1","UniversalShaper","setupSyllables$1","clearSubstitutionFlags","recordRphf","recordPref","reorder","useCategory","USEInfo","nextSyllable$1","isHalant","SHAPERS","mong","phag","hang","bng2","beng","dev2","deva","gjr2","gujr","guru","gur2","knda","knd2","mlm2","mlym","ory2","orya","taml","tml2","telu","tel2","khmr","bali","batk","brah","bugi","buhd","cakm","cham","dupl","egyp","gran","hano","java","kthi","kali","khoj","sind","lepc","limb","mahj","mtei","modi","hmng","rjng","saur","shrd","sidd","sinh","sund","sylo","tglg","tagb","tale","lana","tavt","takr","tibt","tfng","tirh","latn","DFLT","_OTProcessor","_index","curGlyph","replacement","_index2","_index3","ligature","_curGlyph","characters","_index4","ligatureGlyph","isMarkLigature","lastLigID","lastNumComps","curComps","matchIndex","GPOSProcessor","applyPositionValue","variationProcessor","variationStore","getDelta","nextGlyph","_pair","class1","class2","nextIndex","_nextGlyph","curRecord","nextRecord","getAnchor","rightToLeft","baseGlyphIndex","baseIndex","markRecord","baseAnchor","applyAnchor","_markIndex","_baseGlyphIndex","ligIndex","ligAttach","markGlyph","ligGlyph","compIndex","_markRecord","_baseAnchor","mark1Index","prevIndex","_cur","good","mark2Index","_markRecord2","_baseAnchor2","markCoords","markPos","anchor","fixCursiveAttachment","fixMarkAttachment","_k","OTLayoutEngine","glyphInfos","setup","shaper","choose","glyphInfo","zeroMarkAdvances","cleanup","LayoutEngine","unicodeLayoutEngine","kernProcessor","layout","charCodeAt","_script","getScript","forString","glyphsForString","_script2","forCodePoints","hideDefaultIgnorables","positioned","space","isDefaultIgnorable","ch","plane","SVG_COMMANDS","moveTo","lineTo","quadraticCurveTo","bezierCurveTo","closePath","Path","commands","_bbox","_cbox","toFunction","command","toSVG","round","join","mapPoints","path","_fn","transform","m0","m1","m2","m3","m4","m5","translate","rotate","angle","cos","sin","scale","scaleX","scaleY","cx","cy","p0","p1","p2","p3","_c$args","_c$args2","qp1x","qp1y","cp1x","cp1y","cp2x","p3x","cp2y","p3y","_c$args3","b2ac","t1","sqrt","t2","_arr","_class$8","StandardNames","_applyDecoratedDescriptor$4","_class","Glyph","_getPath","_getCBox","_getBBox","_getTableMetrics","metric","_getMetrics","_metrics","_getTableMetrics2","leftBearing","_getTableMetrics3","advanceHeight","topBearing","os2","getAdvanceAdjustment","getScaledPath","_getName","fromCharCode","render","save","fill","restore","GlyfHeader","numberOfContours","Point","onCurve","endContour","Component","dx","dy","scale01","scale10","TTFGlyph","_Glyph","internal","_getTableStream","_parseGlyphCoord","short","same","_decode","glyfPos","_decodeSimple","_decodeComposite","points","endPtsOfContours","numCoords","flag","point","px","py","_getPhantomPoints","transformPoints","phantomPoints","haveInstructions","gPos","readInt8","_getContours","_contours","contour","_point","directory","contours","firstPt","lastPt","curvePt","pt","prevPt","midX","midY","CFFGlyph","CFF2","bias","cff","trans","nStems","usedGsubrs","usedSubrs","_usedGsubrs","_usedSubrs","gsubrs","gsubrsBias","privateDict","subrs","Subrs","subrsBias","vstore","vsindex","checkWidth","shift","nominalWidthX","parseStems","parse","phase","c1x","c1y","c2x","c2y","subr","blendVector","getBlendVector","numOperands","sum","s1","s2","v1","v2","random","n","c3x","c3y","c4x","c4y","c5x","c5y","c6x","c6y","pts","startx","starty","b1","SBIXImage","originX","originY","buflen","SBIXGlyph","_TTFGlyph","getImageForSize","img","image","renderOutlines","COLRLayer","color","COLRGlyph","layers","fillColor","cpal","colr","rec","baseLayer","_getBaseGlyph","GlyphVariationProcessor","normalizeCoords","blendVectors","normalized","glyphPoints","tupleCount","here","sharedPoints","decodePoints","origPoints","tupleDataSize","tupleCoords","startCoords","_a","endCoords","_a2","factor","tupleFactor","nPoints","xDeltas","decodeDeltas","yDeltas","outPoints","hasDelta","interpolateMissingDeltas","deltaX","deltaY","Uint16Array","run","runCount","readUInt16","Int16Array","inPoints","firstPoint","endPoint","firstDelta","curDelta","deltaInterpolate","deltaShift","ref1","ref2","iterable","in1","in2","out1","out2","_p","out","ref","_table$advanceWidthMa","itemStore","varData","deltaSet","netAdjustment","master","scalar","regionIndex","axes","resolved","resolve","Subset","mapping","includeGlyph","encodeStream","EncodeStream","then","Point$1","Glyf","xPoints","yPoints","TTFGlyphEncoder","encodeSimple","lastX","lastY","lastFlag","pointCount","_encodePoint","shortFlag","sameFlag","diff","TTFSubset","_Subset","glyphEncoder","_addGlyph","curOffset","nextOffset","CFFSubset","subsetCharstrings","charstrings","subsetSubrs","used","subsetFontdict","used_fds","used_subrs","FontName","createCIDFontdict","addString","Encoding","CIDCount","_applyDecoratedDescriptor","TTFFont","variationCoords","_directoryPos","_tables","_decodeDirectory","_getTable","toString","_decodeTable","logErrors","console","error","getName","nextState","createSubset","getVariation","settings","namedVariations","trim","default","WOFFDirectoryEntry","compLength","origChecksum","WOFFDirectory","flavor","totalSfntSize","metaOffset","metaLength","metaOrigLength","privOffset","privLength","WOFFFont","_TTFFont","outBuffer","WOFF2Glyph","_transformedGlyphs","Base128","knownTags","WOFF2DirectoryEntry","customTag","transformVersion","transformed","transformLength","WOFF2Directory","totalCompressedSize","WOFF2Font","_dataPos","_decompress","_decompressed","decompressedSize","decompressed","_transformGlyfTable","GlyfTable","nContours","totalPoints","read255UInt16","decodeTriplet","composites","Substream","_buf","indexFormat","nContourStreamSize","nPointsStreamSize","flagStreamSize","glyphStreamSize","compositeStreamSize","bboxStreamSize","instructionStreamSize","bboxes","LOWEST_U_CODE","withSign","baseval","b0","b2","TTCHeader","numFonts","dsigTag","dsigLength","dsigOffset","TrueTypeCollection","readString","fonts","DFontName","Ref","nameOffset","attr","dataOffset","handle","Type","maxTypeIndex","refList","TypeList","DFontMap","typeList","nameListOffset","DFontHeader","dataLength","mapLength","DFont","sfnt","module","exports"],"mappings":"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AAI,CAAC,sBAAuB,CAAC,sBAAuB,CAAC,sBAAuB,CAAC,sBAAuB,CAAC,sBAAuB,CAAC,sBAAuB,CAAC,sBAAuB,CAAC,kBAAmB,CAAC,kBAAmB,GAAI,CAAC,kBAAmB,CAAC,kBAAmB,CAAC,kBAAmB,CAAC,kBAAmB,CAAC,kBAAmB,CAAC,kBAAmB,CAAC,kBAAmB,CAAC,kBAAmB,CAAC,kBAAmB,CAAC,kBAAmB,CAAC,kBAAmB,GAAI,CAAC,kBAAmB,GAAI,CAAC,kBAAmB,CAAC,kBAAmB,GAAI,GAAI,CAAC,kBAAmB,CAAC,kBAAmB,CAAC,kBAAmB,CAAC,kBAAmB,CAAC,sBAAuB,CAAC,sBAAuB,GAAI,GAAI,CAAC,sBAAuB,CAAC,sBAAuB,CAAC,sBAAuB,CAAC,sBAAuB,CAAC,sBAAuB,CAAC,sBAAuB,CAAC,kBAAmB,CAAC,kBAAmB,CAAC,qBAAsB,kBAAmB,CAAC,kBAAmB,GAAI,CAAC,kBAAmB,CAAC,kBAAmB,GAAI,CAAC,kBAAmB,CAAC,kBAAmB,CAAC,sBAAuB,GAAI,CAAC,sBAAuB,CAAC,sBAAuB,CAAC,sBAAuB,GAAI,CAAC,sBAAuB,GAAI,CAAC,sBAAuB,CAAC,sBAAuB,GAAI,GAAI,CAAC,sBAAuB,CAAC,sBAAuB,CAAC,sBAAuB,CAAC,sBAAuB,CAAC,sBAAuB,CAAC,sBAAuB,CAAC,sBAAuB,GAAI,CAAC,sBAAuB,CAAC,kBAAmB,GAAI,CAAC,kBAAmB,CAAC,kBAAmB,CAAC,kBAAmB,GAAI,CAAC,kBAAmB,GAAI,CAAC,kBAAmB,CAAC,kBAAmB,GAAI,GAAI,CAAC,kBAAmB,CAAC,kBAAmB,CAAC,kBAAmB,CAAC,kBAAmB,CAAC,kBAAmB,CAAC,kBAAmB,CAAC,kBAAmB,GAAI,CAAC,kBAAmB,CAAC,kBAAmB,CAAC,kBAAmB,GAAI,CAAC,kBAAmB,CAAC,kBAAmB,CAAC,kBAAmB,GAAI,CAAC,kBAAmB,GAAI,CAAC,kBAAmB,CAAC,kBAAmB,GAAI,GAAI,GAAI,CAAC,kBAAmB,CAAC,kBAAmB,GAAI,GAAI,CAAC,kBAAmB,CAAC,kBAAmB,CAAC,sBAAuB,CAAC,sBAAuB,CAAC,sBAAuB,CAAC,sBAAuB,GAAI,CAAC,sBAAuB,GAAI,CAAC,sBAAuB,CAAC,sBAAuB,GAAI,GAAI,CAAC,sBAAuB,CAAC,sBAAuB,CAAC,sBAAuB,CAAC,sBAAuB,CAAC,sBAAuB,CAAC,sBAAuB,CAAC,sBAAuB,GAAI,CAAC,sBAAuB,CAAC,kBAAmB,GAAI,CAAC,kBAAmB,CAAC,kBAAmB,CAAC,sBAAuB,CAAC,sBAAuB,CAAC,qBAAsB,kBAAmB,CAAC,qBAAsB,kBAAmB,CAAC,kBAAmB,CAAC,kBAAmB,CAAC,kBAAmB,CAAC,kBAAmB,CAAC,kBAAmB,CAAC,kBAAmB,CAAC,sBAAuB,CAAC,sBAAuB,GAAI,CAAC,sBAAuB,CAAC,sBAAuB,CAAC,sBAAuB,GAAI,CAAC,sBAAuB,GAAI,CAAC,sBAAuB,CAAC,sBAAuB,GAAI,GAAI,GAAI,CAAC,sBAAuB,CAAC,sBAAuB,GAAI,GAAI,CAAC,sBAAuB,CAAC,sBAAuB,CAAC,sBAAuB,GAAI,CAAC,sBAAuB,CAAC,sBAAuB,CAAC,sBAAuB,CAAC,sBAAuB,CAAC,kBAAmB,CAAC,kBAAmB,GAAI,CAAC,kBAAmB,CAAC,kBAAmB,CAAC,kBAAmB,GAAI,CAAC,kBAAmB,GAAI,CAAC,kBAAmB,CAAC,kBAAmB,GAAI,GAAI,GAAI,CAAC,kBAAmB,CAAC,kBAAmB,GAAI,GAAI,CAAC,kBAAmB,CAAC,kBAAmB,CAAC,kBAAmB,GAAI,CAAC,kBAAmB,CAAC,kBAAmB,CAAC,kBAAmB,CAAC,kBAAmB,CAAC,kBAAmB,GAAI,CAAC,kBAAmB,CAAC,kBAAmB,CAAC,kBAAmB,CAAC,kBAAmB,CAAC,kBAAmB,GAAI,CAAC,kBAAmB,CAAC,kBAAmB,GAAI,GAAI,GAAI,GAAI,CAAC,kBAAmB,CAAC,kBAAmB,GAAI,GAAI,CAAC,kBAAmB,CAAC,sBAAuB,CAAC,sBAAuB,GAAI,CAAC,sBAAuB,CAAC,sBAAuB,CAAC,sBAAuB,GAAI,CAAC,sBAAuB,GAAI,CAAC,sBAAuB,CAAC,sBAAuB,GAAI,GAAI,GAAI,CAAC,sBAAuB,CAAC,sBAAuB,GAAI,GAAI,CAAC,sBAAuB,CAAC,sBAAuB,CAAC,sBAAuB,GAAI,CAAC,sBAAuB,CAAC,sBAAuB,CAAC,sBAAuB,CAAC,sBAAuB,GAAI,CAAC,kBAAmB,GAAI,CAAC,qBAAsB,kBAAmB,CAAC,qBAAsB,kBAAmB,CAAC,qBAAsB,kBAAmB,CAAC,qBAAsB,kBAAmB,CAAC,qBAAsB,kBAAmB,CAAC,qBAAsB,kBAAmB,CAAC,kBAAmB,CAAC,kBAAmB,CAAC,sBAAuB,GAAI,CAAC,sBAAuB,CAAC,sBAAuB,CAAC,sBAAuB,CAAC,sBAAuB,CAAC,sBAAuB,GAAI,CAAC,sBAAuB,CAAC,sBAAuB,GAAI,GAAI,GAAI,GAAI,CAAC,sBAAuB,CAAC,sBAAuB,GAAI,GAAI,CAAC,sBAAuB,CAAC,sBAAuB,CAAC,kBAAmB,GAAI,CAAC,kBAAmB,CAAC,kBAAmB,CAAC,kBAAmB,CAAC,kBAAmB,CAAC,kBAAmB,GAAI,CAAC,kBAAmB,CAAC,kBAAmB,GAAI,GAAI,GAAI,GAAI,CAAC,kBAAmB,CAAC,kBAAmB,GAAI,GAAI,CAAC,kBAAmB,CAAC,kBAAmB,CAAC,kBAAmB,CAAC,kBAAmB,GAAI,CAAC,kBAAmB,CAAC,kBAAmB,CAAC,kBAAmB,CAAC,kBAAmB,CAAC,kBAAmB,CAAC,kBAAmB,GAAI,CAAC,kBAAmB,CAAC,kBAAmB,GAAI,GAAI,GAAI,GAAI,CAAC,kBAAmB,GAAI,CAAC,sBAAuB,GAAI,CAAC,sBAAuB,CAAC,sBAAuB,CAAC,sBAAuB,CAAC,sBAAuB,CAAC,sBAAuB,GAAI,CAAC,sBAAuB,CAAC,sBAAuB,GAAI,GAAI,GAAI,GAAI,CAAC,sBAAuB,CAAC,sBAAuB,GAAI,GAAI,CAAC,sBAAuB,CAAC,sBAAuB,CAAC,qBAAsB,kBAAmB,GAAI,CAAC,qBAAsB,kBAAmB,CAAC,qBAAsB,kBAAmB,GAAI,GAAI,CAAC,qBAAsB,kBAAmB,GAAI,CAAC,qBAAsB,kBAAmB,CAAC,qBAAsB,kBAAmB,GAAI,CAAC,qBAAsB,kBAAmB,CAAC,qBAAsB,kBAAmB,GAAI,CAAC,sBAAuB,CAAC,sBAAuB,GAAI,CAAC,sBAAuB,CAAC,sBAAuB,CAAC,sBAAuB,CAAC,sBAAuB,CAAC,sBAAuB,CAAC,sBAAuB,GAAI,CAAC,sBAAuB,CAAC,sBAAuB,GAAI,GAAI,GAAI,GAAI,CAAC,sBAAuB,GAAI,CAAC,kBAAmB,CAAC,kBAAmB,GAAI,CAAC,kBAAmB,CAAC,kBAAmB,CAAC,kBAAmB,CAAC,kBAAmB,CAAC,kBAAmB,CAAC,kBAAmB,GAAI,CAAC,kBAAmB,CAAC,kBAAmB,GAAI,GAAI,GAAI,GAAI,CAAC,kBAAmB,GAAI,CAAC,kBAAmB,GAAI,CAAC,kBAAmB,CAAC,kBAAmB,CAAC,kBAAmB,CAAC,kBAAmB,GAAI,GAAI,GAAI,CAAC,sBAAuB,CAAC,sBAAuB,GAAI,CAAC,sBAAuB,CAAC,sBAAuB,CAAC,sBAAuB,CAAC,sBAAuB,CAAC,sBAAuB,CAAC,sBAAuB,GAAI,CAAC,sBAAuB,CAAC,sBAAuB,GAAI,GAAI,GAAI,GAAI,CAAC,sBAAuB,GAAI,CAAC,qBAAsB,kBAAmB,GAAI,CAAC,qBAAsB,kBAAmB,CAAC,qBAAsB,kBAAmB,GAAI,GAAI,CAAC,qBAAsB,kBAAmB,CAAC,qBAAsB,kBAAmB,GAAI,GAAI,CAAC,qBAAsB,kBAAmB,CAAC,qBAAsB,kBAAmB,CAAC,qBAAsB,kBAAmB,GAAI,CAAC,sBAAuB,GAAI,CAAC,sBAAuB,CAAC,sBAAuB,CAAC,sBAAuB,CAAC,sBAAuB,GAAI,GAAI,GAAI,CAAC,kBAAmB,GAAI,CAAC,kBAAmB,CAAC,kBAAmB,CAAC,kBAAmB,CAAC,kBAAmB,GAAI,GAAI,GAAI,CAAC,kBAAmB,CAAC,kBAAmB,GAAI,CAAC,kBAAmB,CAAC,kBAAmB,CAAC,kBAAmB,CAAC,kBAAmB,CAAC,kBAAmB,CAAC,kBAAmB,GAAI,CAAC,kBAAmB,CAAC,kBAAmB,GAAI,CAAC,sBAAuB,GAAI,CAAC,sBAAuB,CAAC,sBAAuB,CAAC,sBAAuB,CAAC,sBAAuB,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,CAAC,qBAAsB,kBAAmB,CAAC,qBAAsB,kBAAmB,GAAI,GAAI,CAAC,qBAAsB,kBAAmB,CAAC,qBAAsB,kBAAmB,GAAI,CAAC,qBAAsB,kBAAmB,CAAC,qBAAsB,kBAAmB,CAAC,sBAAuB,CAAC,sBAAuB,GAAI,CAAC,sBAAuB,CAAC,sBAAuB,CAAC,sBAAuB,CAAC,sBAAuB,CAAC,sBAAuB,CAAC,sBAAuB,GAAI,CAAC,sBAAuB,CAAC,sBAAuB,GAAI,CAAC,kBAAmB,CAAC,kBAAmB,GAAI,CAAC,kBAAmB,CAAC,kBAAmB,CAAC,kBAAmB,CAAC,kBAAmB,CAAC,kBAAmB,CAAC,kBAAmB,GAAI,CAAC,kBAAmB,CAAC,kBAAmB,GAAI,CAAC,kBAAmB,GAAI,CAAC,kBAAmB,CAAC,kBAAmB,CAAC,kBAAmB,CAAC,kBAAmB,CAAC,sBAAuB,CAAC,sBAAuB,GAAI,CAAC,sBAAuB,CAAC,sBAAuB,CAAC,sBAAuB,CAAC,sBAAuB,CAAC,sBAAuB,CAAC,sBAAuB,GAAI,CAAC,sBAAuB,CAAC,sBAAuB,GAAI,GAAI,GAAI,GAAI,GAAI,CAAC,qBAAsB,kBAAmB,CAAC,qBAAsB,kBAAmB,GAAI,CAAC,sBAAuB,GAAI,CAAC,sBAAuB,CAAC,sBAAuB,CAAC,sBAAuB,CAAC,sBAAuB,CAAC,kBAAmB,GAAI,CAAC,kBAAmB,CAAC,kBAAmB,CAAC,kBAAmB,CAAC,kBAAmB,CAAC,kBAAmB,GAAI,CAAC,kBAAmB,CAAC,kBAAmB,CAAC,kBAAmB,CAAC,kBAAmB,CAAC,kBAAmB,GAAI,CAAC,kBAAmB,CAAC,kBAAmB,CAAC,sBAAuB,GAAI,CAAC,sBAAuB,CAAC,sBAAuB,CAAC,sBAAuB,CAAC,sBAAuB,GAAI,GAAI,GAAI,CAAC,sBAAuB,GAAI,CAAC,sBAAuB,CAAC,sBAAuB,CAAC,sBAAuB,CAAC,sBAAuB,CAAC,sBAAuB,GAAI,CAAC,sBAAuB,CAAC,sBAAuB,CAAC,kBAAmB,GAAI,CAAC,kBAAmB,CAAC,kBAAmB,CAAC,kBAAmB,CAAC,kBAAmB,CAAC,kBAAmB,GAAI,CAAC,kBAAmB,CAAC,kBAAmB,CAAC,kBAAmB,CAAC,sBAAuB,GAAI,CAAC,sBAAuB,CAAC,sBAAuB,CAAC,sBAAuB,CAAC,sBAAuB,CAAC,sBAAuB,GAAI,CAAC,sBAAuB,CAAC,sBAAu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","file":"7b4d9ddb-10801781ffd3bda4d6e5.js","sourcesContent":["'use strict';\n\nfunction _interopDefault(ex) {\n  return ex && typeof ex === 'object' && 'default' in ex ? ex['default'] : ex;\n}\n\nvar r = _interopDefault(require('restructure'));\n\nvar _Object$getOwnPropertyDescriptor = _interopDefault(require('babel-runtime/core-js/object/get-own-property-descriptor'));\n\nvar _getIterator = _interopDefault(require('babel-runtime/core-js/get-iterator'));\n\nvar _Object$freeze = _interopDefault(require('babel-runtime/core-js/object/freeze'));\n\nvar _typeof = _interopDefault(require('babel-runtime/helpers/typeof'));\n\nvar _Object$keys = _interopDefault(require('babel-runtime/core-js/object/keys'));\n\nvar _Object$defineProperty = _interopDefault(require('babel-runtime/core-js/object/define-property'));\n\nvar _classCallCheck = _interopDefault(require('babel-runtime/helpers/classCallCheck'));\n\nvar _createClass = _interopDefault(require('babel-runtime/helpers/createClass'));\n\nvar _Map = _interopDefault(require('babel-runtime/core-js/map'));\n\nvar _possibleConstructorReturn = _interopDefault(require('babel-runtime/helpers/possibleConstructorReturn'));\n\nvar _inherits = _interopDefault(require('babel-runtime/helpers/inherits'));\n\nvar restructure_src_utils = require('restructure/src/utils');\n\nvar _Object$defineProperties = _interopDefault(require('babel-runtime/core-js/object/define-properties'));\n\nvar isEqual = _interopDefault(require('deep-equal'));\n\nvar _Object$assign = _interopDefault(require('babel-runtime/core-js/object/assign'));\n\nvar _String$fromCodePoint = _interopDefault(require('babel-runtime/core-js/string/from-code-point'));\n\nvar _Array$from = _interopDefault(require('babel-runtime/core-js/array/from'));\n\nvar _Set = _interopDefault(require('babel-runtime/core-js/set'));\n\nvar unicode = _interopDefault(require('unicode-properties'));\n\nvar UnicodeTrie = _interopDefault(require('unicode-trie'));\n\nvar StateMachine = _interopDefault(require('dfa'));\n\nvar _Number$EPSILON = _interopDefault(require('babel-runtime/core-js/number/epsilon'));\n\nvar cloneDeep = _interopDefault(require('clone'));\n\nvar _Promise = _interopDefault(require('babel-runtime/core-js/promise'));\n\nvar inflate = _interopDefault(require('tiny-inflate'));\n\nvar brotli = _interopDefault(require('brotli/decompress'));\n\nvar fs = require('fs');\n\nvar fontkit = {};\nfontkit.logErrors = false;\nvar formats = [];\n\nfontkit.registerFormat = function (format) {\n  formats.push(format);\n};\n\nfontkit.openSync = function (filename, postscriptName) {\n  var buffer = fs.readFileSync(filename);\n  return fontkit.create(buffer, postscriptName);\n};\n\nfontkit.open = function (filename, postscriptName, callback) {\n  if (typeof postscriptName === 'function') {\n    callback = postscriptName;\n    postscriptName = null;\n  }\n\n  fs.readFile(filename, function (err, buffer) {\n    if (err) {\n      return callback(err);\n    }\n\n    try {\n      var font = fontkit.create(buffer, postscriptName);\n    } catch (e) {\n      return callback(e);\n    }\n\n    return callback(null, font);\n  });\n  return;\n};\n\nfontkit.create = function (buffer, postscriptName) {\n  for (var i = 0; i < formats.length; i++) {\n    var format = formats[i];\n\n    if (format.probe(buffer)) {\n      var font = new format(new r.DecodeStream(buffer));\n\n      if (postscriptName) {\n        return font.getFont(postscriptName);\n      }\n\n      return font;\n    }\n  }\n\n  throw new Error('Unknown font format');\n};\n\nfontkit.defaultLanguage = 'en';\n\nfontkit.setDefaultLanguage = function () {\n  var lang = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'en';\n  fontkit.defaultLanguage = lang;\n};\n/**\n * This decorator caches the results of a getter or method such that\n * the results are lazily computed once, and then cached.\n * @private\n */\n\n\nfunction cache(target, key, descriptor) {\n  if (descriptor.get) {\n    var get = descriptor.get;\n\n    descriptor.get = function () {\n      var value = get.call(this);\n\n      _Object$defineProperty(this, key, {\n        value: value\n      });\n\n      return value;\n    };\n  } else if (typeof descriptor.value === 'function') {\n    var fn = descriptor.value;\n    return {\n      get: function get() {\n        var cache = new _Map();\n\n        function memoized() {\n          for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n            args[_key] = arguments[_key];\n          }\n\n          var key = args.length > 0 ? args[0] : 'value';\n\n          if (cache.has(key)) {\n            return cache.get(key);\n          }\n\n          var result = fn.apply(this, args);\n          cache.set(key, result);\n          return result;\n        }\n\n        ;\n\n        _Object$defineProperty(this, key, {\n          value: memoized\n        });\n\n        return memoized;\n      }\n    };\n  }\n}\n\nvar SubHeader = new r.Struct({\n  firstCode: r.uint16,\n  entryCount: r.uint16,\n  idDelta: r.int16,\n  idRangeOffset: r.uint16\n});\nvar CmapGroup = new r.Struct({\n  startCharCode: r.uint32,\n  endCharCode: r.uint32,\n  glyphID: r.uint32\n});\nvar UnicodeValueRange = new r.Struct({\n  startUnicodeValue: r.uint24,\n  additionalCount: r.uint8\n});\nvar UVSMapping = new r.Struct({\n  unicodeValue: r.uint24,\n  glyphID: r.uint16\n});\nvar DefaultUVS = new r.Array(UnicodeValueRange, r.uint32);\nvar NonDefaultUVS = new r.Array(UVSMapping, r.uint32);\nvar VarSelectorRecord = new r.Struct({\n  varSelector: r.uint24,\n  defaultUVS: new r.Pointer(r.uint32, DefaultUVS, {\n    type: 'parent'\n  }),\n  nonDefaultUVS: new r.Pointer(r.uint32, NonDefaultUVS, {\n    type: 'parent'\n  })\n});\nvar CmapSubtable = new r.VersionedStruct(r.uint16, {\n  0: {\n    // Byte encoding\n    length: r.uint16,\n    // Total table length in bytes (set to 262 for format 0)\n    language: r.uint16,\n    // Language code for this encoding subtable, or zero if language-independent\n    codeMap: new r.LazyArray(r.uint8, 256)\n  },\n  2: {\n    // High-byte mapping (CJK)\n    length: r.uint16,\n    language: r.uint16,\n    subHeaderKeys: new r.Array(r.uint16, 256),\n    subHeaderCount: function subHeaderCount(t) {\n      return Math.max.apply(Math, t.subHeaderKeys);\n    },\n    subHeaders: new r.LazyArray(SubHeader, 'subHeaderCount'),\n    glyphIndexArray: new r.LazyArray(r.uint16, 'subHeaderCount')\n  },\n  4: {\n    // Segment mapping to delta values\n    length: r.uint16,\n    // Total table length in bytes\n    language: r.uint16,\n    // Language code\n    segCountX2: r.uint16,\n    segCount: function segCount(t) {\n      return t.segCountX2 >> 1;\n    },\n    searchRange: r.uint16,\n    entrySelector: r.uint16,\n    rangeShift: r.uint16,\n    endCode: new r.LazyArray(r.uint16, 'segCount'),\n    reservedPad: new r.Reserved(r.uint16),\n    // This value should be zero\n    startCode: new r.LazyArray(r.uint16, 'segCount'),\n    idDelta: new r.LazyArray(r.int16, 'segCount'),\n    idRangeOffset: new r.LazyArray(r.uint16, 'segCount'),\n    glyphIndexArray: new r.LazyArray(r.uint16, function (t) {\n      return (t.length - t._currentOffset) / 2;\n    })\n  },\n  6: {\n    // Trimmed table\n    length: r.uint16,\n    language: r.uint16,\n    firstCode: r.uint16,\n    entryCount: r.uint16,\n    glyphIndices: new r.LazyArray(r.uint16, 'entryCount')\n  },\n  8: {\n    // mixed 16-bit and 32-bit coverage\n    reserved: new r.Reserved(r.uint16),\n    length: r.uint32,\n    language: r.uint16,\n    is32: new r.LazyArray(r.uint8, 8192),\n    nGroups: r.uint32,\n    groups: new r.LazyArray(CmapGroup, 'nGroups')\n  },\n  10: {\n    // Trimmed Array\n    reserved: new r.Reserved(r.uint16),\n    length: r.uint32,\n    language: r.uint32,\n    firstCode: r.uint32,\n    entryCount: r.uint32,\n    glyphIndices: new r.LazyArray(r.uint16, 'numChars')\n  },\n  12: {\n    // Segmented coverage\n    reserved: new r.Reserved(r.uint16),\n    length: r.uint32,\n    language: r.uint32,\n    nGroups: r.uint32,\n    groups: new r.LazyArray(CmapGroup, 'nGroups')\n  },\n  13: {\n    // Many-to-one range mappings (same as 12 except for group.startGlyphID)\n    reserved: new r.Reserved(r.uint16),\n    length: r.uint32,\n    language: r.uint32,\n    nGroups: r.uint32,\n    groups: new r.LazyArray(CmapGroup, 'nGroups')\n  },\n  14: {\n    // Unicode Variation Sequences\n    length: r.uint32,\n    numRecords: r.uint32,\n    varSelectors: new r.LazyArray(VarSelectorRecord, 'numRecords')\n  }\n});\nvar CmapEntry = new r.Struct({\n  platformID: r.uint16,\n  // Platform identifier\n  encodingID: r.uint16,\n  // Platform-specific encoding identifier\n  table: new r.Pointer(r.uint32, CmapSubtable, {\n    type: 'parent',\n    lazy: true\n  })\n}); // character to glyph mapping\n\nvar cmap = new r.Struct({\n  version: r.uint16,\n  numSubtables: r.uint16,\n  tables: new r.Array(CmapEntry, 'numSubtables')\n}); // font header\n\nvar head = new r.Struct({\n  version: r.int32,\n  // 0x00010000 (version 1.0)\n  revision: r.int32,\n  // set by font manufacturer\n  checkSumAdjustment: r.uint32,\n  magicNumber: r.uint32,\n  // set to 0x5F0F3CF5\n  flags: r.uint16,\n  unitsPerEm: r.uint16,\n  // range from 64 to 16384\n  created: new r.Array(r.int32, 2),\n  modified: new r.Array(r.int32, 2),\n  xMin: r.int16,\n  // for all glyph bounding boxes\n  yMin: r.int16,\n  // for all glyph bounding boxes\n  xMax: r.int16,\n  // for all glyph bounding boxes\n  yMax: r.int16,\n  // for all glyph bounding boxes\n  macStyle: new r.Bitfield(r.uint16, ['bold', 'italic', 'underline', 'outline', 'shadow', 'condensed', 'extended']),\n  lowestRecPPEM: r.uint16,\n  // smallest readable size in pixels\n  fontDirectionHint: r.int16,\n  indexToLocFormat: r.int16,\n  // 0 for short offsets, 1 for long\n  glyphDataFormat: r.int16 // 0 for current format\n\n}); // horizontal header\n\nvar hhea = new r.Struct({\n  version: r.int32,\n  ascent: r.int16,\n  // Distance from baseline of highest ascender\n  descent: r.int16,\n  // Distance from baseline of lowest descender\n  lineGap: r.int16,\n  // Typographic line gap\n  advanceWidthMax: r.uint16,\n  // Maximum advance width value in 'hmtx' table\n  minLeftSideBearing: r.int16,\n  // Maximum advance width value in 'hmtx' table\n  minRightSideBearing: r.int16,\n  // Minimum right sidebearing value\n  xMaxExtent: r.int16,\n  caretSlopeRise: r.int16,\n  // Used to calculate the slope of the cursor (rise/run); 1 for vertical\n  caretSlopeRun: r.int16,\n  // 0 for vertical\n  caretOffset: r.int16,\n  // Set to 0 for non-slanted fonts\n  reserved: new r.Reserved(r.int16, 4),\n  metricDataFormat: r.int16,\n  // 0 for current format\n  numberOfMetrics: r.uint16 // Number of advance widths in 'hmtx' table\n\n});\nvar HmtxEntry = new r.Struct({\n  advance: r.uint16,\n  bearing: r.int16\n});\nvar hmtx = new r.Struct({\n  metrics: new r.LazyArray(HmtxEntry, function (t) {\n    return t.parent.hhea.numberOfMetrics;\n  }),\n  bearings: new r.LazyArray(r.int16, function (t) {\n    return t.parent.maxp.numGlyphs - t.parent.hhea.numberOfMetrics;\n  })\n}); // maxiumum profile\n\nvar maxp = new r.Struct({\n  version: r.int32,\n  numGlyphs: r.uint16,\n  // The number of glyphs in the font\n  maxPoints: r.uint16,\n  // Maximum points in a non-composite glyph\n  maxContours: r.uint16,\n  // Maximum contours in a non-composite glyph\n  maxComponentPoints: r.uint16,\n  // Maximum points in a composite glyph\n  maxComponentContours: r.uint16,\n  // Maximum contours in a composite glyph\n  maxZones: r.uint16,\n  // 1 if instructions do not use the twilight zone, 2 otherwise\n  maxTwilightPoints: r.uint16,\n  // Maximum points used in Z0\n  maxStorage: r.uint16,\n  // Number of Storage Area locations\n  maxFunctionDefs: r.uint16,\n  // Number of FDEFs\n  maxInstructionDefs: r.uint16,\n  // Number of IDEFs\n  maxStackElements: r.uint16,\n  // Maximum stack depth\n  maxSizeOfInstructions: r.uint16,\n  // Maximum byte count for glyph instructions\n  maxComponentElements: r.uint16,\n  // Maximum number of components referenced at “top level” for any composite glyph\n  maxComponentDepth: r.uint16 // Maximum levels of recursion; 1 for simple components\n\n});\n/**\n * Gets an encoding name from platform, encoding, and language ids.\n * Returned encoding names can be used in iconv-lite to decode text.\n */\n\nfunction getEncoding(platformID, encodingID) {\n  var languageID = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n\n  if (platformID === 1 && MAC_LANGUAGE_ENCODINGS[languageID]) {\n    return MAC_LANGUAGE_ENCODINGS[languageID];\n  }\n\n  return ENCODINGS[platformID][encodingID];\n} // Map of platform ids to encoding ids.\n\n\nvar ENCODINGS = [// unicode\n['utf16be', 'utf16be', 'utf16be', 'utf16be', 'utf16be', 'utf16be'], // macintosh\n// Mappings available at http://unicode.org/Public/MAPPINGS/VENDORS/APPLE/\n// 0\tRoman                 17\tMalayalam\n// 1\tJapanese\t            18\tSinhalese\n// 2\tTraditional Chinese\t  19\tBurmese\n// 3\tKorean\t              20\tKhmer\n// 4\tArabic\t              21\tThai\n// 5\tHebrew\t              22\tLaotian\n// 6\tGreek\t                23\tGeorgian\n// 7\tRussian\t              24\tArmenian\n// 8\tRSymbol\t              25\tSimplified Chinese\n// 9\tDevanagari\t          26\tTibetan\n// 10\tGurmukhi\t            27\tMongolian\n// 11\tGujarati\t            28\tGeez\n// 12\tOriya\t                29\tSlavic\n// 13\tBengali\t              30\tVietnamese\n// 14\tTamil\t                31\tSindhi\n// 15\tTelugu\t              32\t(Uninterpreted)\n// 16\tKannada\n['macroman', 'shift-jis', 'big5', 'euc-kr', 'iso-8859-6', 'iso-8859-8', 'macgreek', 'maccyrillic', 'symbol', 'Devanagari', 'Gurmukhi', 'Gujarati', 'Oriya', 'Bengali', 'Tamil', 'Telugu', 'Kannada', 'Malayalam', 'Sinhalese', 'Burmese', 'Khmer', 'macthai', 'Laotian', 'Georgian', 'Armenian', 'gb-2312-80', 'Tibetan', 'Mongolian', 'Geez', 'maccenteuro', 'Vietnamese', 'Sindhi'], // ISO (deprecated)\n['ascii'], // windows\n// Docs here: http://msdn.microsoft.com/en-us/library/system.text.encoding(v=vs.110).aspx\n['symbol', 'utf16be', 'shift-jis', 'gb18030', 'big5', 'wansung', 'johab', null, null, null, 'utf16be']]; // Overrides for Mac scripts by language id.\n// See http://unicode.org/Public/MAPPINGS/VENDORS/APPLE/Readme.txt\n\nvar MAC_LANGUAGE_ENCODINGS = {\n  15: 'maciceland',\n  17: 'macturkish',\n  18: 'maccroatian',\n  24: 'maccenteuro',\n  25: 'maccenteuro',\n  26: 'maccenteuro',\n  27: 'maccenteuro',\n  28: 'maccenteuro',\n  30: 'maciceland',\n  37: 'macromania',\n  38: 'maccenteuro',\n  39: 'maccenteuro',\n  40: 'maccenteuro',\n  143: 'macinuit',\n  // Unsupported by iconv-lite\n  146: 'macgaelic' // Unsupported by iconv-lite\n\n}; // Map of platform ids to BCP-47 language codes.\n\nvar LANGUAGES = [// unicode\n[], {\n  // macintosh\n  0: 'en',\n  30: 'fo',\n  60: 'ks',\n  90: 'rw',\n  1: 'fr',\n  31: 'fa',\n  61: 'ku',\n  91: 'rn',\n  2: 'de',\n  32: 'ru',\n  62: 'sd',\n  92: 'ny',\n  3: 'it',\n  33: 'zh',\n  63: 'bo',\n  93: 'mg',\n  4: 'nl',\n  34: 'nl-BE',\n  64: 'ne',\n  94: 'eo',\n  5: 'sv',\n  35: 'ga',\n  65: 'sa',\n  128: 'cy',\n  6: 'es',\n  36: 'sq',\n  66: 'mr',\n  129: 'eu',\n  7: 'da',\n  37: 'ro',\n  67: 'bn',\n  130: 'ca',\n  8: 'pt',\n  38: 'cz',\n  68: 'as',\n  131: 'la',\n  9: 'no',\n  39: 'sk',\n  69: 'gu',\n  132: 'qu',\n  10: 'he',\n  40: 'si',\n  70: 'pa',\n  133: 'gn',\n  11: 'ja',\n  41: 'yi',\n  71: 'or',\n  134: 'ay',\n  12: 'ar',\n  42: 'sr',\n  72: 'ml',\n  135: 'tt',\n  13: 'fi',\n  43: 'mk',\n  73: 'kn',\n  136: 'ug',\n  14: 'el',\n  44: 'bg',\n  74: 'ta',\n  137: 'dz',\n  15: 'is',\n  45: 'uk',\n  75: 'te',\n  138: 'jv',\n  16: 'mt',\n  46: 'be',\n  76: 'si',\n  139: 'su',\n  17: 'tr',\n  47: 'uz',\n  77: 'my',\n  140: 'gl',\n  18: 'hr',\n  48: 'kk',\n  78: 'km',\n  141: 'af',\n  19: 'zh-Hant',\n  49: 'az-Cyrl',\n  79: 'lo',\n  142: 'br',\n  20: 'ur',\n  50: 'az-Arab',\n  80: 'vi',\n  143: 'iu',\n  21: 'hi',\n  51: 'hy',\n  81: 'id',\n  144: 'gd',\n  22: 'th',\n  52: 'ka',\n  82: 'tl',\n  145: 'gv',\n  23: 'ko',\n  53: 'mo',\n  83: 'ms',\n  146: 'ga',\n  24: 'lt',\n  54: 'ky',\n  84: 'ms-Arab',\n  147: 'to',\n  25: 'pl',\n  55: 'tg',\n  85: 'am',\n  148: 'el-polyton',\n  26: 'hu',\n  56: 'tk',\n  86: 'ti',\n  149: 'kl',\n  27: 'es',\n  57: 'mn-CN',\n  87: 'om',\n  150: 'az',\n  28: 'lv',\n  58: 'mn',\n  88: 'so',\n  151: 'nn',\n  29: 'se',\n  59: 'ps',\n  89: 'sw'\n}, // ISO (deprecated)\n[], {\n  // windows                                        \n  0x0436: 'af',\n  0x4009: 'en-IN',\n  0x0487: 'rw',\n  0x0432: 'tn',\n  0x041C: 'sq',\n  0x1809: 'en-IE',\n  0x0441: 'sw',\n  0x045B: 'si',\n  0x0484: 'gsw',\n  0x2009: 'en-JM',\n  0x0457: 'kok',\n  0x041B: 'sk',\n  0x045E: 'am',\n  0x4409: 'en-MY',\n  0x0412: 'ko',\n  0x0424: 'sl',\n  0x1401: 'ar-DZ',\n  0x1409: 'en-NZ',\n  0x0440: 'ky',\n  0x2C0A: 'es-AR',\n  0x3C01: 'ar-BH',\n  0x3409: 'en-PH',\n  0x0454: 'lo',\n  0x400A: 'es-BO',\n  0x0C01: 'ar',\n  0x4809: 'en-SG',\n  0x0426: 'lv',\n  0x340A: 'es-CL',\n  0x0801: 'ar-IQ',\n  0x1C09: 'en-ZA',\n  0x0427: 'lt',\n  0x240A: 'es-CO',\n  0x2C01: 'ar-JO',\n  0x2C09: 'en-TT',\n  0x082E: 'dsb',\n  0x140A: 'es-CR',\n  0x3401: 'ar-KW',\n  0x0809: 'en-GB',\n  0x046E: 'lb',\n  0x1C0A: 'es-DO',\n  0x3001: 'ar-LB',\n  0x0409: 'en',\n  0x042F: 'mk',\n  0x300A: 'es-EC',\n  0x1001: 'ar-LY',\n  0x3009: 'en-ZW',\n  0x083E: 'ms-BN',\n  0x440A: 'es-SV',\n  0x1801: 'ary',\n  0x0425: 'et',\n  0x043E: 'ms',\n  0x100A: 'es-GT',\n  0x2001: 'ar-OM',\n  0x0438: 'fo',\n  0x044C: 'ml',\n  0x480A: 'es-HN',\n  0x4001: 'ar-QA',\n  0x0464: 'fil',\n  0x043A: 'mt',\n  0x080A: 'es-MX',\n  0x0401: 'ar-SA',\n  0x040B: 'fi',\n  0x0481: 'mi',\n  0x4C0A: 'es-NI',\n  0x2801: 'ar-SY',\n  0x080C: 'fr-BE',\n  0x047A: 'arn',\n  0x180A: 'es-PA',\n  0x1C01: 'aeb',\n  0x0C0C: 'fr-CA',\n  0x044E: 'mr',\n  0x3C0A: 'es-PY',\n  0x3801: 'ar-AE',\n  0x040C: 'fr',\n  0x047C: 'moh',\n  0x280A: 'es-PE',\n  0x2401: 'ar-YE',\n  0x140C: 'fr-LU',\n  0x0450: 'mn',\n  0x500A: 'es-PR',\n  0x042B: 'hy',\n  0x180C: 'fr-MC',\n  0x0850: 'mn-CN',\n  0x0C0A: 'es',\n  0x044D: 'as',\n  0x100C: 'fr-CH',\n  0x0461: 'ne',\n  0x040A: 'es',\n  0x082C: 'az-Cyrl',\n  0x0462: 'fy',\n  0x0414: 'nb',\n  0x540A: 'es-US',\n  0x042C: 'az',\n  0x0456: 'gl',\n  0x0814: 'nn',\n  0x380A: 'es-UY',\n  0x046D: 'ba',\n  0x0437: 'ka',\n  0x0482: 'oc',\n  0x200A: 'es-VE',\n  0x042D: 'eu',\n  0x0C07: 'de-AT',\n  0x0448: 'or',\n  0x081D: 'sv-FI',\n  0x0423: 'be',\n  0x0407: 'de',\n  0x0463: 'ps',\n  0x041D: 'sv',\n  0x0845: 'bn',\n  0x1407: 'de-LI',\n  0x0415: 'pl',\n  0x045A: 'syr',\n  0x0445: 'bn-IN',\n  0x1007: 'de-LU',\n  0x0416: 'pt',\n  0x0428: 'tg',\n  0x201A: 'bs-Cyrl',\n  0x0807: 'de-CH',\n  0x0816: 'pt-PT',\n  0x085F: 'tzm',\n  0x141A: 'bs',\n  0x0408: 'el',\n  0x0446: 'pa',\n  0x0449: 'ta',\n  0x047E: 'br',\n  0x046F: 'kl',\n  0x046B: 'qu-BO',\n  0x0444: 'tt',\n  0x0402: 'bg',\n  0x0447: 'gu',\n  0x086B: 'qu-EC',\n  0x044A: 'te',\n  0x0403: 'ca',\n  0x0468: 'ha',\n  0x0C6B: 'qu',\n  0x041E: 'th',\n  0x0C04: 'zh-HK',\n  0x040D: 'he',\n  0x0418: 'ro',\n  0x0451: 'bo',\n  0x1404: 'zh-MO',\n  0x0439: 'hi',\n  0x0417: 'rm',\n  0x041F: 'tr',\n  0x0804: 'zh',\n  0x040E: 'hu',\n  0x0419: 'ru',\n  0x0442: 'tk',\n  0x1004: 'zh-SG',\n  0x040F: 'is',\n  0x243B: 'smn',\n  0x0480: 'ug',\n  0x0404: 'zh-TW',\n  0x0470: 'ig',\n  0x103B: 'smj-NO',\n  0x0422: 'uk',\n  0x0483: 'co',\n  0x0421: 'id',\n  0x143B: 'smj',\n  0x042E: 'hsb',\n  0x041A: 'hr',\n  0x045D: 'iu',\n  0x0C3B: 'se-FI',\n  0x0420: 'ur',\n  0x101A: 'hr-BA',\n  0x085D: 'iu-Latn',\n  0x043B: 'se',\n  0x0843: 'uz-Cyrl',\n  0x0405: 'cs',\n  0x083C: 'ga',\n  0x083B: 'se-SE',\n  0x0443: 'uz',\n  0x0406: 'da',\n  0x0434: 'xh',\n  0x203B: 'sms',\n  0x042A: 'vi',\n  0x048C: 'prs',\n  0x0435: 'zu',\n  0x183B: 'sma-NO',\n  0x0452: 'cy',\n  0x0465: 'dv',\n  0x0410: 'it',\n  0x1C3B: 'sms',\n  0x0488: 'wo',\n  0x0813: 'nl-BE',\n  0x0810: 'it-CH',\n  0x044F: 'sa',\n  0x0485: 'sah',\n  0x0413: 'nl',\n  0x0411: 'ja',\n  0x1C1A: 'sr-Cyrl-BA',\n  0x0478: 'ii',\n  0x0C09: 'en-AU',\n  0x044B: 'kn',\n  0x0C1A: 'sr',\n  0x046A: 'yo',\n  0x2809: 'en-BZ',\n  0x043F: 'kk',\n  0x181A: 'sr-Latn-BA',\n  0x1009: 'en-CA',\n  0x0453: 'km',\n  0x081A: 'sr-Latn',\n  0x2409: 'en-029',\n  0x0486: 'quc',\n  0x046C: 'nso'\n}];\nvar NameRecord = new r.Struct({\n  platformID: r.uint16,\n  encodingID: r.uint16,\n  languageID: r.uint16,\n  nameID: r.uint16,\n  length: r.uint16,\n  string: new r.Pointer(r.uint16, new r.String('length', function (t) {\n    return getEncoding(t.platformID, t.encodingID, t.languageID);\n  }), {\n    type: 'parent',\n    relativeTo: 'parent.stringOffset',\n    allowNull: false\n  })\n});\nvar LangTagRecord = new r.Struct({\n  length: r.uint16,\n  tag: new r.Pointer(r.uint16, new r.String('length', 'utf16be'), {\n    type: 'parent',\n    relativeTo: 'stringOffset'\n  })\n});\nvar NameTable = new r.VersionedStruct(r.uint16, {\n  0: {\n    count: r.uint16,\n    stringOffset: r.uint16,\n    records: new r.Array(NameRecord, 'count')\n  },\n  1: {\n    count: r.uint16,\n    stringOffset: r.uint16,\n    records: new r.Array(NameRecord, 'count'),\n    langTagCount: r.uint16,\n    langTags: new r.Array(LangTagRecord, 'langTagCount')\n  }\n});\nvar NAMES = ['copyright', 'fontFamily', 'fontSubfamily', 'uniqueSubfamily', 'fullName', 'version', 'postscriptName', // Note: A font may have only one PostScript name and that name must be ASCII.\n'trademark', 'manufacturer', 'designer', 'description', 'vendorURL', 'designerURL', 'license', 'licenseURL', null, // reserved\n'preferredFamily', 'preferredSubfamily', 'compatibleFull', 'sampleText', 'postscriptCIDFontName', 'wwsFamilyName', 'wwsSubfamilyName'];\n\nNameTable.process = function (stream) {\n  var records = {};\n\n  for (var _iterator = this.records, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _getIterator(_iterator);;) {\n    var _ref;\n\n    if (_isArray) {\n      if (_i >= _iterator.length) break;\n      _ref = _iterator[_i++];\n    } else {\n      _i = _iterator.next();\n      if (_i.done) break;\n      _ref = _i.value;\n    }\n\n    var record = _ref; // find out what language this is for\n\n    var language = LANGUAGES[record.platformID][record.languageID];\n\n    if (language == null && this.langTags != null && record.languageID >= 0x8000) {\n      language = this.langTags[record.languageID - 0x8000].tag;\n    }\n\n    if (language == null) {\n      language = record.platformID + '-' + record.languageID;\n    } // if the nameID is >= 256, it is a font feature record (AAT)\n\n\n    var key = record.nameID >= 256 ? 'fontFeatures' : NAMES[record.nameID] || record.nameID;\n\n    if (records[key] == null) {\n      records[key] = {};\n    }\n\n    var obj = records[key];\n\n    if (record.nameID >= 256) {\n      obj = obj[record.nameID] || (obj[record.nameID] = {});\n    }\n\n    if (typeof record.string === 'string' || typeof obj[language] !== 'string') {\n      obj[language] = record.string;\n    }\n  }\n\n  this.records = records;\n};\n\nNameTable.preEncode = function () {\n  if (Array.isArray(this.records)) return;\n  this.version = 0;\n  var records = [];\n\n  for (var key in this.records) {\n    var val = this.records[key];\n    if (key === 'fontFeatures') continue;\n    records.push({\n      platformID: 3,\n      encodingID: 1,\n      languageID: 0x409,\n      nameID: NAMES.indexOf(key),\n      length: Buffer.byteLength(val.en, 'utf16le'),\n      string: val.en\n    });\n\n    if (key === 'postscriptName') {\n      records.push({\n        platformID: 1,\n        encodingID: 0,\n        languageID: 0,\n        nameID: NAMES.indexOf(key),\n        length: val.en.length,\n        string: val.en\n      });\n    }\n  }\n\n  this.records = records;\n  this.count = records.length;\n  this.stringOffset = NameTable.size(this, null, false);\n};\n\nvar OS2 = new r.VersionedStruct(r.uint16, {\n  header: {\n    xAvgCharWidth: r.int16,\n    // average weighted advance width of lower case letters and space\n    usWeightClass: r.uint16,\n    // visual weight of stroke in glyphs\n    usWidthClass: r.uint16,\n    // relative change from the normal aspect ratio (width to height ratio)\n    fsType: new r.Bitfield(r.uint16, [// Indicates font embedding licensing rights\n    null, 'noEmbedding', 'viewOnly', 'editable', null, null, null, null, 'noSubsetting', 'bitmapOnly']),\n    ySubscriptXSize: r.int16,\n    // recommended horizontal size in pixels for subscripts\n    ySubscriptYSize: r.int16,\n    // recommended vertical size in pixels for subscripts\n    ySubscriptXOffset: r.int16,\n    // recommended horizontal offset for subscripts\n    ySubscriptYOffset: r.int16,\n    // recommended vertical offset form the baseline for subscripts\n    ySuperscriptXSize: r.int16,\n    // recommended horizontal size in pixels for superscripts\n    ySuperscriptYSize: r.int16,\n    // recommended vertical size in pixels for superscripts\n    ySuperscriptXOffset: r.int16,\n    // recommended horizontal offset for superscripts\n    ySuperscriptYOffset: r.int16,\n    // recommended vertical offset from the baseline for superscripts\n    yStrikeoutSize: r.int16,\n    // width of the strikeout stroke\n    yStrikeoutPosition: r.int16,\n    // position of the strikeout stroke relative to the baseline\n    sFamilyClass: r.int16,\n    // classification of font-family design\n    panose: new r.Array(r.uint8, 10),\n    // describe the visual characteristics of a given typeface\n    ulCharRange: new r.Array(r.uint32, 4),\n    vendorID: new r.String(4),\n    // four character identifier for the font vendor\n    fsSelection: new r.Bitfield(r.uint16, [// bit field containing information about the font\n    'italic', 'underscore', 'negative', 'outlined', 'strikeout', 'bold', 'regular', 'useTypoMetrics', 'wws', 'oblique']),\n    usFirstCharIndex: r.uint16,\n    // The minimum Unicode index in this font\n    usLastCharIndex: r.uint16 // The maximum Unicode index in this font\n\n  },\n  // The Apple version of this table ends here, but the Microsoft one continues on...\n  0: {},\n  1: {\n    typoAscender: r.int16,\n    typoDescender: r.int16,\n    typoLineGap: r.int16,\n    winAscent: r.uint16,\n    winDescent: r.uint16,\n    codePageRange: new r.Array(r.uint32, 2)\n  },\n  2: {\n    // these should be common with version 1 somehow\n    typoAscender: r.int16,\n    typoDescender: r.int16,\n    typoLineGap: r.int16,\n    winAscent: r.uint16,\n    winDescent: r.uint16,\n    codePageRange: new r.Array(r.uint32, 2),\n    xHeight: r.int16,\n    capHeight: r.int16,\n    defaultChar: r.uint16,\n    breakChar: r.uint16,\n    maxContent: r.uint16\n  },\n  5: {\n    typoAscender: r.int16,\n    typoDescender: r.int16,\n    typoLineGap: r.int16,\n    winAscent: r.uint16,\n    winDescent: r.uint16,\n    codePageRange: new r.Array(r.uint32, 2),\n    xHeight: r.int16,\n    capHeight: r.int16,\n    defaultChar: r.uint16,\n    breakChar: r.uint16,\n    maxContent: r.uint16,\n    usLowerOpticalPointSize: r.uint16,\n    usUpperOpticalPointSize: r.uint16\n  }\n});\nvar versions = OS2.versions;\nversions[3] = versions[4] = versions[2]; // PostScript information\n\nvar post = new r.VersionedStruct(r.fixed32, {\n  header: {\n    // these fields exist at the top of all versions\n    italicAngle: r.fixed32,\n    // Italic angle in counter-clockwise degrees from the vertical.\n    underlinePosition: r.int16,\n    // Suggested distance of the top of the underline from the baseline\n    underlineThickness: r.int16,\n    // Suggested values for the underline thickness\n    isFixedPitch: r.uint32,\n    // Whether the font is monospaced\n    minMemType42: r.uint32,\n    // Minimum memory usage when a TrueType font is downloaded as a Type 42 font\n    maxMemType42: r.uint32,\n    // Maximum memory usage when a TrueType font is downloaded as a Type 42 font\n    minMemType1: r.uint32,\n    // Minimum memory usage when a TrueType font is downloaded as a Type 1 font\n    maxMemType1: r.uint32 // Maximum memory usage when a TrueType font is downloaded as a Type 1 font\n\n  },\n  1: {},\n  // version 1 has no additional fields\n  2: {\n    numberOfGlyphs: r.uint16,\n    glyphNameIndex: new r.Array(r.uint16, 'numberOfGlyphs'),\n    names: new r.Array(new r.String(r.uint8))\n  },\n  2.5: {\n    numberOfGlyphs: r.uint16,\n    offsets: new r.Array(r.uint8, 'numberOfGlyphs')\n  },\n  3: {},\n  // version 3 has no additional fields\n  4: {\n    map: new r.Array(r.uint32, function (t) {\n      return t.parent.maxp.numGlyphs;\n    })\n  }\n}); // An array of predefined values accessible by instructions\n\nvar cvt = new r.Struct({\n  controlValues: new r.Array(r.int16)\n}); // A list of instructions that are executed once when a font is first used.\n// These instructions are known as the font program. The main use of this table\n// is for the definition of functions that are used in many different glyph programs.\n\nvar fpgm = new r.Struct({\n  instructions: new r.Array(r.uint8)\n});\nvar loca = new r.VersionedStruct('head.indexToLocFormat', {\n  0: {\n    offsets: new r.Array(r.uint16)\n  },\n  1: {\n    offsets: new r.Array(r.uint32)\n  }\n});\n\nloca.process = function () {\n  if (this.version === 0) {\n    for (var i = 0; i < this.offsets.length; i++) {\n      this.offsets[i] <<= 1;\n    }\n  }\n};\n\nloca.preEncode = function () {\n  if (this.version === 0) {\n    for (var i = 0; i < this.offsets.length; i++) {\n      this.offsets[i] >>>= 1;\n    }\n  }\n}; // Set of instructions executed whenever the point size or font transformation change\n\n\nvar prep = new r.Struct({\n  controlValueProgram: new r.Array(r.uint8)\n}); // only used for encoding\n\nvar glyf = new r.Array(new r.Buffer());\n\nvar CFFIndex = function () {\n  function CFFIndex(type) {\n    _classCallCheck(this, CFFIndex);\n\n    this.type = type;\n  }\n\n  CFFIndex.prototype.getCFFVersion = function getCFFVersion(ctx) {\n    while (ctx && !ctx.hdrSize) {\n      ctx = ctx.parent;\n    }\n\n    return ctx ? ctx.version : -1;\n  };\n\n  CFFIndex.prototype.decode = function decode(stream, parent) {\n    var version = this.getCFFVersion(parent);\n    var count = version >= 2 ? stream.readUInt32BE() : stream.readUInt16BE();\n\n    if (count === 0) {\n      return [];\n    }\n\n    var offSize = stream.readUInt8();\n    var offsetType = void 0;\n\n    if (offSize === 1) {\n      offsetType = r.uint8;\n    } else if (offSize === 2) {\n      offsetType = r.uint16;\n    } else if (offSize === 3) {\n      offsetType = r.uint24;\n    } else if (offSize === 4) {\n      offsetType = r.uint32;\n    } else {\n      throw new Error(\"Bad offset size in CFFIndex: \" + offSize + \" \" + stream.pos);\n    }\n\n    var ret = [];\n    var startPos = stream.pos + (count + 1) * offSize - 1;\n    var start = offsetType.decode(stream);\n\n    for (var i = 0; i < count; i++) {\n      var end = offsetType.decode(stream);\n\n      if (this.type != null) {\n        var pos = stream.pos;\n        stream.pos = startPos + start;\n        parent.length = end - start;\n        ret.push(this.type.decode(stream, parent));\n        stream.pos = pos;\n      } else {\n        ret.push({\n          offset: startPos + start,\n          length: end - start\n        });\n      }\n\n      start = end;\n    }\n\n    stream.pos = startPos + start;\n    return ret;\n  };\n\n  CFFIndex.prototype.size = function size(arr, parent) {\n    var size = 2;\n\n    if (arr.length === 0) {\n      return size;\n    }\n\n    var type = this.type || new r.Buffer(); // find maximum offset to detminine offset type\n\n    var offset = 1;\n\n    for (var i = 0; i < arr.length; i++) {\n      var item = arr[i];\n      offset += type.size(item, parent);\n    }\n\n    var offsetType = void 0;\n\n    if (offset <= 0xff) {\n      offsetType = r.uint8;\n    } else if (offset <= 0xffff) {\n      offsetType = r.uint16;\n    } else if (offset <= 0xffffff) {\n      offsetType = r.uint24;\n    } else if (offset <= 0xffffffff) {\n      offsetType = r.uint32;\n    } else {\n      throw new Error(\"Bad offset in CFFIndex\");\n    }\n\n    size += 1 + offsetType.size() * (arr.length + 1);\n    size += offset - 1;\n    return size;\n  };\n\n  CFFIndex.prototype.encode = function encode(stream, arr, parent) {\n    stream.writeUInt16BE(arr.length);\n\n    if (arr.length === 0) {\n      return;\n    }\n\n    var type = this.type || new r.Buffer(); // find maximum offset to detminine offset type\n\n    var sizes = [];\n    var offset = 1;\n\n    for (var _iterator = arr, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _getIterator(_iterator);;) {\n      var _ref;\n\n      if (_isArray) {\n        if (_i >= _iterator.length) break;\n        _ref = _iterator[_i++];\n      } else {\n        _i = _iterator.next();\n        if (_i.done) break;\n        _ref = _i.value;\n      }\n\n      var item = _ref;\n      var s = type.size(item, parent);\n      sizes.push(s);\n      offset += s;\n    }\n\n    var offsetType = void 0;\n\n    if (offset <= 0xff) {\n      offsetType = r.uint8;\n    } else if (offset <= 0xffff) {\n      offsetType = r.uint16;\n    } else if (offset <= 0xffffff) {\n      offsetType = r.uint24;\n    } else if (offset <= 0xffffffff) {\n      offsetType = r.uint32;\n    } else {\n      throw new Error(\"Bad offset in CFFIndex\");\n    } // write offset size\n\n\n    stream.writeUInt8(offsetType.size()); // write elements\n\n    offset = 1;\n    offsetType.encode(stream, offset);\n\n    for (var _iterator2 = sizes, _isArray2 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray2 ? _iterator2 : _getIterator(_iterator2);;) {\n      var _ref2;\n\n      if (_isArray2) {\n        if (_i2 >= _iterator2.length) break;\n        _ref2 = _iterator2[_i2++];\n      } else {\n        _i2 = _iterator2.next();\n        if (_i2.done) break;\n        _ref2 = _i2.value;\n      }\n\n      var size = _ref2;\n      offset += size;\n      offsetType.encode(stream, offset);\n    }\n\n    for (var _iterator3 = arr, _isArray3 = Array.isArray(_iterator3), _i3 = 0, _iterator3 = _isArray3 ? _iterator3 : _getIterator(_iterator3);;) {\n      var _ref3;\n\n      if (_isArray3) {\n        if (_i3 >= _iterator3.length) break;\n        _ref3 = _iterator3[_i3++];\n      } else {\n        _i3 = _iterator3.next();\n        if (_i3.done) break;\n        _ref3 = _i3.value;\n      }\n\n      var _item = _ref3;\n      type.encode(stream, _item, parent);\n    }\n\n    return;\n  };\n\n  return CFFIndex;\n}();\n\nvar FLOAT_EOF = 0xf;\nvar FLOAT_LOOKUP = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '.', 'E', 'E-', null, '-'];\nvar FLOAT_ENCODE_LOOKUP = {\n  '.': 10,\n  'E': 11,\n  'E-': 12,\n  '-': 14\n};\n\nvar CFFOperand = function () {\n  function CFFOperand() {\n    _classCallCheck(this, CFFOperand);\n  }\n\n  CFFOperand.decode = function decode(stream, value) {\n    if (32 <= value && value <= 246) {\n      return value - 139;\n    }\n\n    if (247 <= value && value <= 250) {\n      return (value - 247) * 256 + stream.readUInt8() + 108;\n    }\n\n    if (251 <= value && value <= 254) {\n      return -(value - 251) * 256 - stream.readUInt8() - 108;\n    }\n\n    if (value === 28) {\n      return stream.readInt16BE();\n    }\n\n    if (value === 29) {\n      return stream.readInt32BE();\n    }\n\n    if (value === 30) {\n      var str = '';\n\n      while (true) {\n        var b = stream.readUInt8();\n        var n1 = b >> 4;\n\n        if (n1 === FLOAT_EOF) {\n          break;\n        }\n\n        str += FLOAT_LOOKUP[n1];\n        var n2 = b & 15;\n\n        if (n2 === FLOAT_EOF) {\n          break;\n        }\n\n        str += FLOAT_LOOKUP[n2];\n      }\n\n      return parseFloat(str);\n    }\n\n    return null;\n  };\n\n  CFFOperand.size = function size(value) {\n    // if the value needs to be forced to the largest size (32 bit)\n    // e.g. for unknown pointers, set to 32768\n    if (value.forceLarge) {\n      value = 32768;\n    }\n\n    if ((value | 0) !== value) {\n      // floating point\n      var str = '' + value;\n      return 1 + Math.ceil((str.length + 1) / 2);\n    } else if (-107 <= value && value <= 107) {\n      return 1;\n    } else if (108 <= value && value <= 1131 || -1131 <= value && value <= -108) {\n      return 2;\n    } else if (-32768 <= value && value <= 32767) {\n      return 3;\n    } else {\n      return 5;\n    }\n  };\n\n  CFFOperand.encode = function encode(stream, value) {\n    // if the value needs to be forced to the largest size (32 bit)\n    // e.g. for unknown pointers, save the old value and set to 32768\n    var val = Number(value);\n\n    if (value.forceLarge) {\n      stream.writeUInt8(29);\n      return stream.writeInt32BE(val);\n    } else if ((val | 0) !== val) {\n      // floating point\n      stream.writeUInt8(30);\n      var str = '' + val;\n\n      for (var i = 0; i < str.length; i += 2) {\n        var c1 = str[i];\n        var n1 = FLOAT_ENCODE_LOOKUP[c1] || +c1;\n\n        if (i === str.length - 1) {\n          var n2 = FLOAT_EOF;\n        } else {\n          var c2 = str[i + 1];\n          var n2 = FLOAT_ENCODE_LOOKUP[c2] || +c2;\n        }\n\n        stream.writeUInt8(n1 << 4 | n2 & 15);\n      }\n\n      if (n2 !== FLOAT_EOF) {\n        return stream.writeUInt8(FLOAT_EOF << 4);\n      }\n    } else if (-107 <= val && val <= 107) {\n      return stream.writeUInt8(val + 139);\n    } else if (108 <= val && val <= 1131) {\n      val -= 108;\n      stream.writeUInt8((val >> 8) + 247);\n      return stream.writeUInt8(val & 0xff);\n    } else if (-1131 <= val && val <= -108) {\n      val = -val - 108;\n      stream.writeUInt8((val >> 8) + 251);\n      return stream.writeUInt8(val & 0xff);\n    } else if (-32768 <= val && val <= 32767) {\n      stream.writeUInt8(28);\n      return stream.writeInt16BE(val);\n    } else {\n      stream.writeUInt8(29);\n      return stream.writeInt32BE(val);\n    }\n  };\n\n  return CFFOperand;\n}();\n\nvar CFFDict = function () {\n  function CFFDict() {\n    var ops = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n\n    _classCallCheck(this, CFFDict);\n\n    this.ops = ops;\n    this.fields = {};\n\n    for (var _iterator = ops, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _getIterator(_iterator);;) {\n      var _ref;\n\n      if (_isArray) {\n        if (_i >= _iterator.length) break;\n        _ref = _iterator[_i++];\n      } else {\n        _i = _iterator.next();\n        if (_i.done) break;\n        _ref = _i.value;\n      }\n\n      var field = _ref;\n      var key = Array.isArray(field[0]) ? field[0][0] << 8 | field[0][1] : field[0];\n      this.fields[key] = field;\n    }\n  }\n\n  CFFDict.prototype.decodeOperands = function decodeOperands(type, stream, ret, operands) {\n    var _this = this;\n\n    if (Array.isArray(type)) {\n      return operands.map(function (op, i) {\n        return _this.decodeOperands(type[i], stream, ret, [op]);\n      });\n    } else if (type.decode != null) {\n      return type.decode(stream, ret, operands);\n    } else {\n      switch (type) {\n        case 'number':\n        case 'offset':\n        case 'sid':\n          return operands[0];\n\n        case 'boolean':\n          return !!operands[0];\n\n        default:\n          return operands;\n      }\n    }\n  };\n\n  CFFDict.prototype.encodeOperands = function encodeOperands(type, stream, ctx, operands) {\n    var _this2 = this;\n\n    if (Array.isArray(type)) {\n      return operands.map(function (op, i) {\n        return _this2.encodeOperands(type[i], stream, ctx, op)[0];\n      });\n    } else if (type.encode != null) {\n      return type.encode(stream, operands, ctx);\n    } else if (typeof operands === 'number') {\n      return [operands];\n    } else if (typeof operands === 'boolean') {\n      return [+operands];\n    } else if (Array.isArray(operands)) {\n      return operands;\n    } else {\n      return [operands];\n    }\n  };\n\n  CFFDict.prototype.decode = function decode(stream, parent) {\n    var end = stream.pos + parent.length;\n    var ret = {};\n    var operands = []; // define hidden properties\n\n    _Object$defineProperties(ret, {\n      parent: {\n        value: parent\n      },\n      _startOffset: {\n        value: stream.pos\n      }\n    }); // fill in defaults\n\n\n    for (var key in this.fields) {\n      var field = this.fields[key];\n      ret[field[1]] = field[3];\n    }\n\n    while (stream.pos < end) {\n      var b = stream.readUInt8();\n\n      if (b < 28) {\n        if (b === 12) {\n          b = b << 8 | stream.readUInt8();\n        }\n\n        var _field = this.fields[b];\n\n        if (!_field) {\n          throw new Error('Unknown operator ' + b);\n        }\n\n        var val = this.decodeOperands(_field[2], stream, ret, operands);\n\n        if (val != null) {\n          if (val instanceof restructure_src_utils.PropertyDescriptor) {\n            _Object$defineProperty(ret, _field[1], val);\n          } else {\n            ret[_field[1]] = val;\n          }\n        }\n\n        operands = [];\n      } else {\n        operands.push(CFFOperand.decode(stream, b));\n      }\n    }\n\n    return ret;\n  };\n\n  CFFDict.prototype.size = function size(dict, parent) {\n    var includePointers = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n    var ctx = {\n      parent: parent,\n      val: dict,\n      pointerSize: 0,\n      startOffset: parent.startOffset || 0\n    };\n    var len = 0;\n\n    for (var k in this.fields) {\n      var field = this.fields[k];\n      var val = dict[field[1]];\n\n      if (val == null || isEqual(val, field[3])) {\n        continue;\n      }\n\n      var operands = this.encodeOperands(field[2], null, ctx, val);\n\n      for (var _iterator2 = operands, _isArray2 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray2 ? _iterator2 : _getIterator(_iterator2);;) {\n        var _ref2;\n\n        if (_isArray2) {\n          if (_i2 >= _iterator2.length) break;\n          _ref2 = _iterator2[_i2++];\n        } else {\n          _i2 = _iterator2.next();\n          if (_i2.done) break;\n          _ref2 = _i2.value;\n        }\n\n        var op = _ref2;\n        len += CFFOperand.size(op);\n      }\n\n      var key = Array.isArray(field[0]) ? field[0] : [field[0]];\n      len += key.length;\n    }\n\n    if (includePointers) {\n      len += ctx.pointerSize;\n    }\n\n    return len;\n  };\n\n  CFFDict.prototype.encode = function encode(stream, dict, parent) {\n    var ctx = {\n      pointers: [],\n      startOffset: stream.pos,\n      parent: parent,\n      val: dict,\n      pointerSize: 0\n    };\n    ctx.pointerOffset = stream.pos + this.size(dict, ctx, false);\n\n    for (var _iterator3 = this.ops, _isArray3 = Array.isArray(_iterator3), _i3 = 0, _iterator3 = _isArray3 ? _iterator3 : _getIterator(_iterator3);;) {\n      var _ref3;\n\n      if (_isArray3) {\n        if (_i3 >= _iterator3.length) break;\n        _ref3 = _iterator3[_i3++];\n      } else {\n        _i3 = _iterator3.next();\n        if (_i3.done) break;\n        _ref3 = _i3.value;\n      }\n\n      var field = _ref3;\n      var val = dict[field[1]];\n\n      if (val == null || isEqual(val, field[3])) {\n        continue;\n      }\n\n      var operands = this.encodeOperands(field[2], stream, ctx, val);\n\n      for (var _iterator4 = operands, _isArray4 = Array.isArray(_iterator4), _i4 = 0, _iterator4 = _isArray4 ? _iterator4 : _getIterator(_iterator4);;) {\n        var _ref4;\n\n        if (_isArray4) {\n          if (_i4 >= _iterator4.length) break;\n          _ref4 = _iterator4[_i4++];\n        } else {\n          _i4 = _iterator4.next();\n          if (_i4.done) break;\n          _ref4 = _i4.value;\n        }\n\n        var op = _ref4;\n        CFFOperand.encode(stream, op);\n      }\n\n      var key = Array.isArray(field[0]) ? field[0] : [field[0]];\n\n      for (var _iterator5 = key, _isArray5 = Array.isArray(_iterator5), _i5 = 0, _iterator5 = _isArray5 ? _iterator5 : _getIterator(_iterator5);;) {\n        var _ref5;\n\n        if (_isArray5) {\n          if (_i5 >= _iterator5.length) break;\n          _ref5 = _iterator5[_i5++];\n        } else {\n          _i5 = _iterator5.next();\n          if (_i5.done) break;\n          _ref5 = _i5.value;\n        }\n\n        var _op = _ref5;\n        stream.writeUInt8(_op);\n      }\n    }\n\n    var i = 0;\n\n    while (i < ctx.pointers.length) {\n      var ptr = ctx.pointers[i++];\n      ptr.type.encode(stream, ptr.val, ptr.parent);\n    }\n\n    return;\n  };\n\n  return CFFDict;\n}();\n\nvar CFFPointer = function (_r$Pointer) {\n  _inherits(CFFPointer, _r$Pointer);\n\n  function CFFPointer(type) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    _classCallCheck(this, CFFPointer);\n\n    if (options.type == null) {\n      options.type = 'global';\n    }\n\n    return _possibleConstructorReturn(this, _r$Pointer.call(this, null, type, options));\n  }\n\n  CFFPointer.prototype.decode = function decode(stream, parent, operands) {\n    this.offsetType = {\n      decode: function decode() {\n        return operands[0];\n      }\n    };\n    return _r$Pointer.prototype.decode.call(this, stream, parent, operands);\n  };\n\n  CFFPointer.prototype.encode = function encode(stream, value, ctx) {\n    if (!stream) {\n      // compute the size (so ctx.pointerSize is correct)\n      this.offsetType = {\n        size: function size() {\n          return 0;\n        }\n      };\n      this.size(value, ctx);\n      return [new Ptr(0)];\n    }\n\n    var ptr = null;\n    this.offsetType = {\n      encode: function encode(stream, val) {\n        return ptr = val;\n      }\n    };\n\n    _r$Pointer.prototype.encode.call(this, stream, value, ctx);\n\n    return [new Ptr(ptr)];\n  };\n\n  return CFFPointer;\n}(r.Pointer);\n\nvar Ptr = function () {\n  function Ptr(val) {\n    _classCallCheck(this, Ptr);\n\n    this.val = val;\n    this.forceLarge = true;\n  }\n\n  Ptr.prototype.valueOf = function valueOf() {\n    return this.val;\n  };\n\n  return Ptr;\n}();\n\nvar CFFBlendOp = function () {\n  function CFFBlendOp() {\n    _classCallCheck(this, CFFBlendOp);\n  }\n\n  CFFBlendOp.decode = function decode(stream, parent, operands) {\n    var numBlends = operands.pop(); // TODO: actually blend. For now just consume the deltas\n    // since we don't use any of the values anyway.\n\n    while (operands.length > numBlends) {\n      operands.pop();\n    }\n  };\n\n  return CFFBlendOp;\n}();\n\nvar CFFPrivateDict = new CFFDict([// key       name                    type                                          default\n[6, 'BlueValues', 'delta', null], [7, 'OtherBlues', 'delta', null], [8, 'FamilyBlues', 'delta', null], [9, 'FamilyOtherBlues', 'delta', null], [[12, 9], 'BlueScale', 'number', 0.039625], [[12, 10], 'BlueShift', 'number', 7], [[12, 11], 'BlueFuzz', 'number', 1], [10, 'StdHW', 'number', null], [11, 'StdVW', 'number', null], [[12, 12], 'StemSnapH', 'delta', null], [[12, 13], 'StemSnapV', 'delta', null], [[12, 14], 'ForceBold', 'boolean', false], [[12, 17], 'LanguageGroup', 'number', 0], [[12, 18], 'ExpansionFactor', 'number', 0.06], [[12, 19], 'initialRandomSeed', 'number', 0], [20, 'defaultWidthX', 'number', 0], [21, 'nominalWidthX', 'number', 0], [22, 'vsindex', 'number', 0], [23, 'blend', CFFBlendOp, null], [19, 'Subrs', new CFFPointer(new CFFIndex(), {\n  type: 'local'\n}), null]]); // Automatically generated from Appendix A of the CFF specification; do\n// not edit. Length should be 391.\n\nvar standardStrings = [\".notdef\", \"space\", \"exclam\", \"quotedbl\", \"numbersign\", \"dollar\", \"percent\", \"ampersand\", \"quoteright\", \"parenleft\", \"parenright\", \"asterisk\", \"plus\", \"comma\", \"hyphen\", \"period\", \"slash\", \"zero\", \"one\", \"two\", \"three\", \"four\", \"five\", \"six\", \"seven\", \"eight\", \"nine\", \"colon\", \"semicolon\", \"less\", \"equal\", \"greater\", \"question\", \"at\", \"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\", \"I\", \"J\", \"K\", \"L\", \"M\", \"N\", \"O\", \"P\", \"Q\", \"R\", \"S\", \"T\", \"U\", \"V\", \"W\", \"X\", \"Y\", \"Z\", \"bracketleft\", \"backslash\", \"bracketright\", \"asciicircum\", \"underscore\", \"quoteleft\", \"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\", \"o\", \"p\", \"q\", \"r\", \"s\", \"t\", \"u\", \"v\", \"w\", \"x\", \"y\", \"z\", \"braceleft\", \"bar\", \"braceright\", \"asciitilde\", \"exclamdown\", \"cent\", \"sterling\", \"fraction\", \"yen\", \"florin\", \"section\", \"currency\", \"quotesingle\", \"quotedblleft\", \"guillemotleft\", \"guilsinglleft\", \"guilsinglright\", \"fi\", \"fl\", \"endash\", \"dagger\", \"daggerdbl\", \"periodcentered\", \"paragraph\", \"bullet\", \"quotesinglbase\", \"quotedblbase\", \"quotedblright\", \"guillemotright\", \"ellipsis\", \"perthousand\", \"questiondown\", \"grave\", \"acute\", \"circumflex\", \"tilde\", \"macron\", \"breve\", \"dotaccent\", \"dieresis\", \"ring\", \"cedilla\", \"hungarumlaut\", \"ogonek\", \"caron\", \"emdash\", \"AE\", \"ordfeminine\", \"Lslash\", \"Oslash\", \"OE\", \"ordmasculine\", \"ae\", \"dotlessi\", \"lslash\", \"oslash\", \"oe\", \"germandbls\", \"onesuperior\", \"logicalnot\", \"mu\", \"trademark\", \"Eth\", \"onehalf\", \"plusminus\", \"Thorn\", \"onequarter\", \"divide\", \"brokenbar\", \"degree\", \"thorn\", \"threequarters\", \"twosuperior\", \"registered\", \"minus\", \"eth\", \"multiply\", \"threesuperior\", \"copyright\", \"Aacute\", \"Acircumflex\", \"Adieresis\", \"Agrave\", \"Aring\", \"Atilde\", \"Ccedilla\", \"Eacute\", \"Ecircumflex\", \"Edieresis\", \"Egrave\", \"Iacute\", \"Icircumflex\", \"Idieresis\", \"Igrave\", \"Ntilde\", \"Oacute\", \"Ocircumflex\", \"Odieresis\", \"Ograve\", \"Otilde\", \"Scaron\", \"Uacute\", \"Ucircumflex\", \"Udieresis\", \"Ugrave\", \"Yacute\", \"Ydieresis\", \"Zcaron\", \"aacute\", \"acircumflex\", \"adieresis\", \"agrave\", \"aring\", \"atilde\", \"ccedilla\", \"eacute\", \"ecircumflex\", \"edieresis\", \"egrave\", \"iacute\", \"icircumflex\", \"idieresis\", \"igrave\", \"ntilde\", \"oacute\", \"ocircumflex\", \"odieresis\", \"ograve\", \"otilde\", \"scaron\", \"uacute\", \"ucircumflex\", \"udieresis\", \"ugrave\", \"yacute\", \"ydieresis\", \"zcaron\", \"exclamsmall\", \"Hungarumlautsmall\", \"dollaroldstyle\", \"dollarsuperior\", \"ampersandsmall\", \"Acutesmall\", \"parenleftsuperior\", \"parenrightsuperior\", \"twodotenleader\", \"onedotenleader\", \"zerooldstyle\", \"oneoldstyle\", \"twooldstyle\", \"threeoldstyle\", \"fouroldstyle\", \"fiveoldstyle\", \"sixoldstyle\", \"sevenoldstyle\", \"eightoldstyle\", \"nineoldstyle\", \"commasuperior\", \"threequartersemdash\", \"periodsuperior\", \"questionsmall\", \"asuperior\", \"bsuperior\", \"centsuperior\", \"dsuperior\", \"esuperior\", \"isuperior\", \"lsuperior\", \"msuperior\", \"nsuperior\", \"osuperior\", \"rsuperior\", \"ssuperior\", \"tsuperior\", \"ff\", \"ffi\", \"ffl\", \"parenleftinferior\", \"parenrightinferior\", \"Circumflexsmall\", \"hyphensuperior\", \"Gravesmall\", \"Asmall\", \"Bsmall\", \"Csmall\", \"Dsmall\", \"Esmall\", \"Fsmall\", \"Gsmall\", \"Hsmall\", \"Ismall\", \"Jsmall\", \"Ksmall\", \"Lsmall\", \"Msmall\", \"Nsmall\", \"Osmall\", \"Psmall\", \"Qsmall\", \"Rsmall\", \"Ssmall\", \"Tsmall\", \"Usmall\", \"Vsmall\", \"Wsmall\", \"Xsmall\", \"Ysmall\", \"Zsmall\", \"colonmonetary\", \"onefitted\", \"rupiah\", \"Tildesmall\", \"exclamdownsmall\", \"centoldstyle\", \"Lslashsmall\", \"Scaronsmall\", \"Zcaronsmall\", \"Dieresissmall\", \"Brevesmall\", \"Caronsmall\", \"Dotaccentsmall\", \"Macronsmall\", \"figuredash\", \"hypheninferior\", \"Ogoneksmall\", \"Ringsmall\", \"Cedillasmall\", \"questiondownsmall\", \"oneeighth\", \"threeeighths\", \"fiveeighths\", \"seveneighths\", \"onethird\", \"twothirds\", \"zerosuperior\", \"foursuperior\", \"fivesuperior\", \"sixsuperior\", \"sevensuperior\", \"eightsuperior\", \"ninesuperior\", \"zeroinferior\", \"oneinferior\", \"twoinferior\", \"threeinferior\", \"fourinferior\", \"fiveinferior\", \"sixinferior\", \"seveninferior\", \"eightinferior\", \"nineinferior\", \"centinferior\", \"dollarinferior\", \"periodinferior\", \"commainferior\", \"Agravesmall\", \"Aacutesmall\", \"Acircumflexsmall\", \"Atildesmall\", \"Adieresissmall\", \"Aringsmall\", \"AEsmall\", \"Ccedillasmall\", \"Egravesmall\", \"Eacutesmall\", \"Ecircumflexsmall\", \"Edieresissmall\", \"Igravesmall\", \"Iacutesmall\", \"Icircumflexsmall\", \"Idieresissmall\", \"Ethsmall\", \"Ntildesmall\", \"Ogravesmall\", \"Oacutesmall\", \"Ocircumflexsmall\", \"Otildesmall\", \"Odieresissmall\", \"OEsmall\", \"Oslashsmall\", \"Ugravesmall\", \"Uacutesmall\", \"Ucircumflexsmall\", \"Udieresissmall\", \"Yacutesmall\", \"Thornsmall\", \"Ydieresissmall\", \"001.000\", \"001.001\", \"001.002\", \"001.003\", \"Black\", \"Bold\", \"Book\", \"Light\", \"Medium\", \"Regular\", \"Roman\", \"Semibold\"];\nvar StandardEncoding = ['', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'space', 'exclam', 'quotedbl', 'numbersign', 'dollar', 'percent', 'ampersand', 'quoteright', 'parenleft', 'parenright', 'asterisk', 'plus', 'comma', 'hyphen', 'period', 'slash', 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less', 'equal', 'greater', 'question', 'at', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'bracketleft', 'backslash', 'bracketright', 'asciicircum', 'underscore', 'quoteleft', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'braceleft', 'bar', 'braceright', 'asciitilde', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'exclamdown', 'cent', 'sterling', 'fraction', 'yen', 'florin', 'section', 'currency', 'quotesingle', 'quotedblleft', 'guillemotleft', 'guilsinglleft', 'guilsinglright', 'fi', 'fl', '', 'endash', 'dagger', 'daggerdbl', 'periodcentered', '', 'paragraph', 'bullet', 'quotesinglbase', 'quotedblbase', 'quotedblright', 'guillemotright', 'ellipsis', 'perthousand', '', 'questiondown', '', 'grave', 'acute', 'circumflex', 'tilde', 'macron', 'breve', 'dotaccent', 'dieresis', '', 'ring', 'cedilla', '', 'hungarumlaut', 'ogonek', 'caron', 'emdash', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'AE', '', 'ordfeminine', '', '', '', '', 'Lslash', 'Oslash', 'OE', 'ordmasculine', '', '', '', '', '', 'ae', '', '', '', 'dotlessi', '', '', 'lslash', 'oslash', 'oe', 'germandbls'];\nvar ExpertEncoding = ['', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'space', 'exclamsmall', 'Hungarumlautsmall', '', 'dollaroldstyle', 'dollarsuperior', 'ampersandsmall', 'Acutesmall', 'parenleftsuperior', 'parenrightsuperior', 'twodotenleader', 'onedotenleader', 'comma', 'hyphen', 'period', 'fraction', 'zerooldstyle', 'oneoldstyle', 'twooldstyle', 'threeoldstyle', 'fouroldstyle', 'fiveoldstyle', 'sixoldstyle', 'sevenoldstyle', 'eightoldstyle', 'nineoldstyle', 'colon', 'semicolon', 'commasuperior', 'threequartersemdash', 'periodsuperior', 'questionsmall', '', 'asuperior', 'bsuperior', 'centsuperior', 'dsuperior', 'esuperior', '', '', 'isuperior', '', '', 'lsuperior', 'msuperior', 'nsuperior', 'osuperior', '', '', 'rsuperior', 'ssuperior', 'tsuperior', '', 'ff', 'fi', 'fl', 'ffi', 'ffl', 'parenleftinferior', '', 'parenrightinferior', 'Circumflexsmall', 'hyphensuperior', 'Gravesmall', 'Asmall', 'Bsmall', 'Csmall', 'Dsmall', 'Esmall', 'Fsmall', 'Gsmall', 'Hsmall', 'Ismall', 'Jsmall', 'Ksmall', 'Lsmall', 'Msmall', 'Nsmall', 'Osmall', 'Psmall', 'Qsmall', 'Rsmall', 'Ssmall', 'Tsmall', 'Usmall', 'Vsmall', 'Wsmall', 'Xsmall', 'Ysmall', 'Zsmall', 'colonmonetary', 'onefitted', 'rupiah', 'Tildesmall', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'exclamdownsmall', 'centoldstyle', 'Lslashsmall', '', '', 'Scaronsmall', 'Zcaronsmall', 'Dieresissmall', 'Brevesmall', 'Caronsmall', '', 'Dotaccentsmall', '', '', 'Macronsmall', '', '', 'figuredash', 'hypheninferior', '', '', 'Ogoneksmall', 'Ringsmall', 'Cedillasmall', '', '', '', 'onequarter', 'onehalf', 'threequarters', 'questiondownsmall', 'oneeighth', 'threeeighths', 'fiveeighths', 'seveneighths', 'onethird', 'twothirds', '', '', 'zerosuperior', 'onesuperior', 'twosuperior', 'threesuperior', 'foursuperior', 'fivesuperior', 'sixsuperior', 'sevensuperior', 'eightsuperior', 'ninesuperior', 'zeroinferior', 'oneinferior', 'twoinferior', 'threeinferior', 'fourinferior', 'fiveinferior', 'sixinferior', 'seveninferior', 'eightinferior', 'nineinferior', 'centinferior', 'dollarinferior', 'periodinferior', 'commainferior', 'Agravesmall', 'Aacutesmall', 'Acircumflexsmall', 'Atildesmall', 'Adieresissmall', 'Aringsmall', 'AEsmall', 'Ccedillasmall', 'Egravesmall', 'Eacutesmall', 'Ecircumflexsmall', 'Edieresissmall', 'Igravesmall', 'Iacutesmall', 'Icircumflexsmall', 'Idieresissmall', 'Ethsmall', 'Ntildesmall', 'Ogravesmall', 'Oacutesmall', 'Ocircumflexsmall', 'Otildesmall', 'Odieresissmall', 'OEsmall', 'Oslashsmall', 'Ugravesmall', 'Uacutesmall', 'Ucircumflexsmall', 'Udieresissmall', 'Yacutesmall', 'Thornsmall', 'Ydieresissmall'];\nvar ISOAdobeCharset = ['.notdef', 'space', 'exclam', 'quotedbl', 'numbersign', 'dollar', 'percent', 'ampersand', 'quoteright', 'parenleft', 'parenright', 'asterisk', 'plus', 'comma', 'hyphen', 'period', 'slash', 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less', 'equal', 'greater', 'question', 'at', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'bracketleft', 'backslash', 'bracketright', 'asciicircum', 'underscore', 'quoteleft', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'braceleft', 'bar', 'braceright', 'asciitilde', 'exclamdown', 'cent', 'sterling', 'fraction', 'yen', 'florin', 'section', 'currency', 'quotesingle', 'quotedblleft', 'guillemotleft', 'guilsinglleft', 'guilsinglright', 'fi', 'fl', 'endash', 'dagger', 'daggerdbl', 'periodcentered', 'paragraph', 'bullet', 'quotesinglbase', 'quotedblbase', 'quotedblright', 'guillemotright', 'ellipsis', 'perthousand', 'questiondown', 'grave', 'acute', 'circumflex', 'tilde', 'macron', 'breve', 'dotaccent', 'dieresis', 'ring', 'cedilla', 'hungarumlaut', 'ogonek', 'caron', 'emdash', 'AE', 'ordfeminine', 'Lslash', 'Oslash', 'OE', 'ordmasculine', 'ae', 'dotlessi', 'lslash', 'oslash', 'oe', 'germandbls', 'onesuperior', 'logicalnot', 'mu', 'trademark', 'Eth', 'onehalf', 'plusminus', 'Thorn', 'onequarter', 'divide', 'brokenbar', 'degree', 'thorn', 'threequarters', 'twosuperior', 'registered', 'minus', 'eth', 'multiply', 'threesuperior', 'copyright', 'Aacute', 'Acircumflex', 'Adieresis', 'Agrave', 'Aring', 'Atilde', 'Ccedilla', 'Eacute', 'Ecircumflex', 'Edieresis', 'Egrave', 'Iacute', 'Icircumflex', 'Idieresis', 'Igrave', 'Ntilde', 'Oacute', 'Ocircumflex', 'Odieresis', 'Ograve', 'Otilde', 'Scaron', 'Uacute', 'Ucircumflex', 'Udieresis', 'Ugrave', 'Yacute', 'Ydieresis', 'Zcaron', 'aacute', 'acircumflex', 'adieresis', 'agrave', 'aring', 'atilde', 'ccedilla', 'eacute', 'ecircumflex', 'edieresis', 'egrave', 'iacute', 'icircumflex', 'idieresis', 'igrave', 'ntilde', 'oacute', 'ocircumflex', 'odieresis', 'ograve', 'otilde', 'scaron', 'uacute', 'ucircumflex', 'udieresis', 'ugrave', 'yacute', 'ydieresis', 'zcaron'];\nvar ExpertCharset = ['.notdef', 'space', 'exclamsmall', 'Hungarumlautsmall', 'dollaroldstyle', 'dollarsuperior', 'ampersandsmall', 'Acutesmall', 'parenleftsuperior', 'parenrightsuperior', 'twodotenleader', 'onedotenleader', 'comma', 'hyphen', 'period', 'fraction', 'zerooldstyle', 'oneoldstyle', 'twooldstyle', 'threeoldstyle', 'fouroldstyle', 'fiveoldstyle', 'sixoldstyle', 'sevenoldstyle', 'eightoldstyle', 'nineoldstyle', 'colon', 'semicolon', 'commasuperior', 'threequartersemdash', 'periodsuperior', 'questionsmall', 'asuperior', 'bsuperior', 'centsuperior', 'dsuperior', 'esuperior', 'isuperior', 'lsuperior', 'msuperior', 'nsuperior', 'osuperior', 'rsuperior', 'ssuperior', 'tsuperior', 'ff', 'fi', 'fl', 'ffi', 'ffl', 'parenleftinferior', 'parenrightinferior', 'Circumflexsmall', 'hyphensuperior', 'Gravesmall', 'Asmall', 'Bsmall', 'Csmall', 'Dsmall', 'Esmall', 'Fsmall', 'Gsmall', 'Hsmall', 'Ismall', 'Jsmall', 'Ksmall', 'Lsmall', 'Msmall', 'Nsmall', 'Osmall', 'Psmall', 'Qsmall', 'Rsmall', 'Ssmall', 'Tsmall', 'Usmall', 'Vsmall', 'Wsmall', 'Xsmall', 'Ysmall', 'Zsmall', 'colonmonetary', 'onefitted', 'rupiah', 'Tildesmall', 'exclamdownsmall', 'centoldstyle', 'Lslashsmall', 'Scaronsmall', 'Zcaronsmall', 'Dieresissmall', 'Brevesmall', 'Caronsmall', 'Dotaccentsmall', 'Macronsmall', 'figuredash', 'hypheninferior', 'Ogoneksmall', 'Ringsmall', 'Cedillasmall', 'onequarter', 'onehalf', 'threequarters', 'questiondownsmall', 'oneeighth', 'threeeighths', 'fiveeighths', 'seveneighths', 'onethird', 'twothirds', 'zerosuperior', 'onesuperior', 'twosuperior', 'threesuperior', 'foursuperior', 'fivesuperior', 'sixsuperior', 'sevensuperior', 'eightsuperior', 'ninesuperior', 'zeroinferior', 'oneinferior', 'twoinferior', 'threeinferior', 'fourinferior', 'fiveinferior', 'sixinferior', 'seveninferior', 'eightinferior', 'nineinferior', 'centinferior', 'dollarinferior', 'periodinferior', 'commainferior', 'Agravesmall', 'Aacutesmall', 'Acircumflexsmall', 'Atildesmall', 'Adieresissmall', 'Aringsmall', 'AEsmall', 'Ccedillasmall', 'Egravesmall', 'Eacutesmall', 'Ecircumflexsmall', 'Edieresissmall', 'Igravesmall', 'Iacutesmall', 'Icircumflexsmall', 'Idieresissmall', 'Ethsmall', 'Ntildesmall', 'Ogravesmall', 'Oacutesmall', 'Ocircumflexsmall', 'Otildesmall', 'Odieresissmall', 'OEsmall', 'Oslashsmall', 'Ugravesmall', 'Uacutesmall', 'Ucircumflexsmall', 'Udieresissmall', 'Yacutesmall', 'Thornsmall', 'Ydieresissmall'];\nvar ExpertSubsetCharset = ['.notdef', 'space', 'dollaroldstyle', 'dollarsuperior', 'parenleftsuperior', 'parenrightsuperior', 'twodotenleader', 'onedotenleader', 'comma', 'hyphen', 'period', 'fraction', 'zerooldstyle', 'oneoldstyle', 'twooldstyle', 'threeoldstyle', 'fouroldstyle', 'fiveoldstyle', 'sixoldstyle', 'sevenoldstyle', 'eightoldstyle', 'nineoldstyle', 'colon', 'semicolon', 'commasuperior', 'threequartersemdash', 'periodsuperior', 'asuperior', 'bsuperior', 'centsuperior', 'dsuperior', 'esuperior', 'isuperior', 'lsuperior', 'msuperior', 'nsuperior', 'osuperior', 'rsuperior', 'ssuperior', 'tsuperior', 'ff', 'fi', 'fl', 'ffi', 'ffl', 'parenleftinferior', 'parenrightinferior', 'hyphensuperior', 'colonmonetary', 'onefitted', 'rupiah', 'centoldstyle', 'figuredash', 'hypheninferior', 'onequarter', 'onehalf', 'threequarters', 'oneeighth', 'threeeighths', 'fiveeighths', 'seveneighths', 'onethird', 'twothirds', 'zerosuperior', 'onesuperior', 'twosuperior', 'threesuperior', 'foursuperior', 'fivesuperior', 'sixsuperior', 'sevensuperior', 'eightsuperior', 'ninesuperior', 'zeroinferior', 'oneinferior', 'twoinferior', 'threeinferior', 'fourinferior', 'fiveinferior', 'sixinferior', 'seveninferior', 'eightinferior', 'nineinferior', 'centinferior', 'dollarinferior', 'periodinferior', 'commainferior']; //########################\n// Scripts and Languages #\n//########################\n\nvar LangSysTable = new r.Struct({\n  reserved: new r.Reserved(r.uint16),\n  reqFeatureIndex: r.uint16,\n  featureCount: r.uint16,\n  featureIndexes: new r.Array(r.uint16, 'featureCount')\n});\nvar LangSysRecord = new r.Struct({\n  tag: new r.String(4),\n  langSys: new r.Pointer(r.uint16, LangSysTable, {\n    type: 'parent'\n  })\n});\nvar Script = new r.Struct({\n  defaultLangSys: new r.Pointer(r.uint16, LangSysTable),\n  count: r.uint16,\n  langSysRecords: new r.Array(LangSysRecord, 'count')\n});\nvar ScriptRecord = new r.Struct({\n  tag: new r.String(4),\n  script: new r.Pointer(r.uint16, Script, {\n    type: 'parent'\n  })\n});\nvar ScriptList = new r.Array(ScriptRecord, r.uint16); //#######################\n// Features and Lookups #\n//#######################\n\nvar Feature = new r.Struct({\n  featureParams: r.uint16,\n  // pointer\n  lookupCount: r.uint16,\n  lookupListIndexes: new r.Array(r.uint16, 'lookupCount')\n});\nvar FeatureRecord = new r.Struct({\n  tag: new r.String(4),\n  feature: new r.Pointer(r.uint16, Feature, {\n    type: 'parent'\n  })\n});\nvar FeatureList = new r.Array(FeatureRecord, r.uint16);\nvar LookupFlags = new r.Struct({\n  markAttachmentType: r.uint8,\n  flags: new r.Bitfield(r.uint8, ['rightToLeft', 'ignoreBaseGlyphs', 'ignoreLigatures', 'ignoreMarks', 'useMarkFilteringSet'])\n});\n\nfunction LookupList(SubTable) {\n  var Lookup = new r.Struct({\n    lookupType: r.uint16,\n    flags: LookupFlags,\n    subTableCount: r.uint16,\n    subTables: new r.Array(new r.Pointer(r.uint16, SubTable), 'subTableCount'),\n    markFilteringSet: new r.Optional(r.uint16, function (t) {\n      return t.flags.flags.useMarkFilteringSet;\n    })\n  });\n  return new r.LazyArray(new r.Pointer(r.uint16, Lookup), r.uint16);\n} //#################\n// Coverage Table #\n//#################\n\n\nvar RangeRecord = new r.Struct({\n  start: r.uint16,\n  end: r.uint16,\n  startCoverageIndex: r.uint16\n});\nvar Coverage = new r.VersionedStruct(r.uint16, {\n  1: {\n    glyphCount: r.uint16,\n    glyphs: new r.Array(r.uint16, 'glyphCount')\n  },\n  2: {\n    rangeCount: r.uint16,\n    rangeRecords: new r.Array(RangeRecord, 'rangeCount')\n  }\n}); //#########################\n// Class Definition Table #\n//#########################\n\nvar ClassRangeRecord = new r.Struct({\n  start: r.uint16,\n  end: r.uint16,\n  class: r.uint16\n});\nvar ClassDef = new r.VersionedStruct(r.uint16, {\n  1: {\n    // Class array\n    startGlyph: r.uint16,\n    glyphCount: r.uint16,\n    classValueArray: new r.Array(r.uint16, 'glyphCount')\n  },\n  2: {\n    // Class ranges\n    classRangeCount: r.uint16,\n    classRangeRecord: new r.Array(ClassRangeRecord, 'classRangeCount')\n  }\n}); //###############\n// Device Table #\n//###############\n\nvar Device = new r.Struct({\n  a: r.uint16,\n  // startSize for hinting Device, outerIndex for VariationIndex\n  b: r.uint16,\n  // endSize for Device, innerIndex for VariationIndex\n  deltaFormat: r.uint16\n}); //#############################################\n// Contextual Substitution/Positioning Tables #\n//#############################################\n\nvar LookupRecord = new r.Struct({\n  sequenceIndex: r.uint16,\n  lookupListIndex: r.uint16\n});\nvar Rule = new r.Struct({\n  glyphCount: r.uint16,\n  lookupCount: r.uint16,\n  input: new r.Array(r.uint16, function (t) {\n    return t.glyphCount - 1;\n  }),\n  lookupRecords: new r.Array(LookupRecord, 'lookupCount')\n});\nvar RuleSet = new r.Array(new r.Pointer(r.uint16, Rule), r.uint16);\nvar ClassRule = new r.Struct({\n  glyphCount: r.uint16,\n  lookupCount: r.uint16,\n  classes: new r.Array(r.uint16, function (t) {\n    return t.glyphCount - 1;\n  }),\n  lookupRecords: new r.Array(LookupRecord, 'lookupCount')\n});\nvar ClassSet = new r.Array(new r.Pointer(r.uint16, ClassRule), r.uint16);\nvar Context = new r.VersionedStruct(r.uint16, {\n  1: {\n    // Simple context\n    coverage: new r.Pointer(r.uint16, Coverage),\n    ruleSetCount: r.uint16,\n    ruleSets: new r.Array(new r.Pointer(r.uint16, RuleSet), 'ruleSetCount')\n  },\n  2: {\n    // Class-based context\n    coverage: new r.Pointer(r.uint16, Coverage),\n    classDef: new r.Pointer(r.uint16, ClassDef),\n    classSetCnt: r.uint16,\n    classSet: new r.Array(new r.Pointer(r.uint16, ClassSet), 'classSetCnt')\n  },\n  3: {\n    glyphCount: r.uint16,\n    lookupCount: r.uint16,\n    coverages: new r.Array(new r.Pointer(r.uint16, Coverage), 'glyphCount'),\n    lookupRecords: new r.Array(LookupRecord, 'lookupCount')\n  }\n}); //######################################################\n// Chaining Contextual Substitution/Positioning Tables #\n//######################################################\n\nvar ChainRule = new r.Struct({\n  backtrackGlyphCount: r.uint16,\n  backtrack: new r.Array(r.uint16, 'backtrackGlyphCount'),\n  inputGlyphCount: r.uint16,\n  input: new r.Array(r.uint16, function (t) {\n    return t.inputGlyphCount - 1;\n  }),\n  lookaheadGlyphCount: r.uint16,\n  lookahead: new r.Array(r.uint16, 'lookaheadGlyphCount'),\n  lookupCount: r.uint16,\n  lookupRecords: new r.Array(LookupRecord, 'lookupCount')\n});\nvar ChainRuleSet = new r.Array(new r.Pointer(r.uint16, ChainRule), r.uint16);\nvar ChainingContext = new r.VersionedStruct(r.uint16, {\n  1: {\n    // Simple context glyph substitution\n    coverage: new r.Pointer(r.uint16, Coverage),\n    chainCount: r.uint16,\n    chainRuleSets: new r.Array(new r.Pointer(r.uint16, ChainRuleSet), 'chainCount')\n  },\n  2: {\n    // Class-based chaining context\n    coverage: new r.Pointer(r.uint16, Coverage),\n    backtrackClassDef: new r.Pointer(r.uint16, ClassDef),\n    inputClassDef: new r.Pointer(r.uint16, ClassDef),\n    lookaheadClassDef: new r.Pointer(r.uint16, ClassDef),\n    chainCount: r.uint16,\n    chainClassSet: new r.Array(new r.Pointer(r.uint16, ChainRuleSet), 'chainCount')\n  },\n  3: {\n    // Coverage-based chaining context\n    backtrackGlyphCount: r.uint16,\n    backtrackCoverage: new r.Array(new r.Pointer(r.uint16, Coverage), 'backtrackGlyphCount'),\n    inputGlyphCount: r.uint16,\n    inputCoverage: new r.Array(new r.Pointer(r.uint16, Coverage), 'inputGlyphCount'),\n    lookaheadGlyphCount: r.uint16,\n    lookaheadCoverage: new r.Array(new r.Pointer(r.uint16, Coverage), 'lookaheadGlyphCount'),\n    lookupCount: r.uint16,\n    lookupRecords: new r.Array(LookupRecord, 'lookupCount')\n  }\n});\n\nvar _;\n/*******************\n * Variation Store *\n *******************/\n\n\nvar F2DOT14 = new r.Fixed(16, 'BE', 14);\nvar RegionAxisCoordinates = new r.Struct({\n  startCoord: F2DOT14,\n  peakCoord: F2DOT14,\n  endCoord: F2DOT14\n});\nvar VariationRegionList = new r.Struct({\n  axisCount: r.uint16,\n  regionCount: r.uint16,\n  variationRegions: new r.Array(new r.Array(RegionAxisCoordinates, 'axisCount'), 'regionCount')\n});\nvar DeltaSet = new r.Struct({\n  shortDeltas: new r.Array(r.int16, function (t) {\n    return t.parent.shortDeltaCount;\n  }),\n  regionDeltas: new r.Array(r.int8, function (t) {\n    return t.parent.regionIndexCount - t.parent.shortDeltaCount;\n  }),\n  deltas: function deltas(t) {\n    return t.shortDeltas.concat(t.regionDeltas);\n  }\n});\nvar ItemVariationData = new r.Struct({\n  itemCount: r.uint16,\n  shortDeltaCount: r.uint16,\n  regionIndexCount: r.uint16,\n  regionIndexes: new r.Array(r.uint16, 'regionIndexCount'),\n  deltaSets: new r.Array(DeltaSet, 'itemCount')\n});\nvar ItemVariationStore = new r.Struct({\n  format: r.uint16,\n  variationRegionList: new r.Pointer(r.uint32, VariationRegionList),\n  variationDataCount: r.uint16,\n  itemVariationData: new r.Array(new r.Pointer(r.uint32, ItemVariationData), 'variationDataCount')\n});\n/**********************\n * Feature Variations *\n **********************/\n\nvar ConditionTable = new r.VersionedStruct(r.uint16, {\n  1: (_ = {\n    axisIndex: r.uint16\n  }, _['axisIndex'] = r.uint16, _.filterRangeMinValue = F2DOT14, _.filterRangeMaxValue = F2DOT14, _)\n});\nvar ConditionSet = new r.Struct({\n  conditionCount: r.uint16,\n  conditionTable: new r.Array(new r.Pointer(r.uint32, ConditionTable), 'conditionCount')\n});\nvar FeatureTableSubstitutionRecord = new r.Struct({\n  featureIndex: r.uint16,\n  alternateFeatureTable: new r.Pointer(r.uint32, Feature, {\n    type: 'parent'\n  })\n});\nvar FeatureTableSubstitution = new r.Struct({\n  version: r.fixed32,\n  substitutionCount: r.uint16,\n  substitutions: new r.Array(FeatureTableSubstitutionRecord, 'substitutionCount')\n});\nvar FeatureVariationRecord = new r.Struct({\n  conditionSet: new r.Pointer(r.uint32, ConditionSet, {\n    type: 'parent'\n  }),\n  featureTableSubstitution: new r.Pointer(r.uint32, FeatureTableSubstitution, {\n    type: 'parent'\n  })\n});\nvar FeatureVariations = new r.Struct({\n  majorVersion: r.uint16,\n  minorVersion: r.uint16,\n  featureVariationRecordCount: r.uint32,\n  featureVariationRecords: new r.Array(FeatureVariationRecord, 'featureVariationRecordCount')\n}); // Checks if an operand is an index of a predefined value,\n// otherwise delegates to the provided type.\n\nvar PredefinedOp = function () {\n  function PredefinedOp(predefinedOps, type) {\n    _classCallCheck(this, PredefinedOp);\n\n    this.predefinedOps = predefinedOps;\n    this.type = type;\n  }\n\n  PredefinedOp.prototype.decode = function decode(stream, parent, operands) {\n    if (this.predefinedOps[operands[0]]) {\n      return this.predefinedOps[operands[0]];\n    }\n\n    return this.type.decode(stream, parent, operands);\n  };\n\n  PredefinedOp.prototype.size = function size(value, ctx) {\n    return this.type.size(value, ctx);\n  };\n\n  PredefinedOp.prototype.encode = function encode(stream, value, ctx) {\n    var index = this.predefinedOps.indexOf(value);\n\n    if (index !== -1) {\n      return index;\n    }\n\n    return this.type.encode(stream, value, ctx);\n  };\n\n  return PredefinedOp;\n}();\n\nvar CFFEncodingVersion = function (_r$Number) {\n  _inherits(CFFEncodingVersion, _r$Number);\n\n  function CFFEncodingVersion() {\n    _classCallCheck(this, CFFEncodingVersion);\n\n    return _possibleConstructorReturn(this, _r$Number.call(this, 'UInt8'));\n  }\n\n  CFFEncodingVersion.prototype.decode = function decode(stream) {\n    return r.uint8.decode(stream) & 0x7f;\n  };\n\n  return CFFEncodingVersion;\n}(r.Number);\n\nvar Range1 = new r.Struct({\n  first: r.uint16,\n  nLeft: r.uint8\n});\nvar Range2 = new r.Struct({\n  first: r.uint16,\n  nLeft: r.uint16\n});\nvar CFFCustomEncoding = new r.VersionedStruct(new CFFEncodingVersion(), {\n  0: {\n    nCodes: r.uint8,\n    codes: new r.Array(r.uint8, 'nCodes')\n  },\n  1: {\n    nRanges: r.uint8,\n    ranges: new r.Array(Range1, 'nRanges') // TODO: supplement?\n\n  }\n});\nvar CFFEncoding = new PredefinedOp([StandardEncoding, ExpertEncoding], new CFFPointer(CFFCustomEncoding, {\n  lazy: true\n})); // Decodes an array of ranges until the total\n// length is equal to the provided length.\n\nvar RangeArray = function (_r$Array) {\n  _inherits(RangeArray, _r$Array);\n\n  function RangeArray() {\n    _classCallCheck(this, RangeArray);\n\n    return _possibleConstructorReturn(this, _r$Array.apply(this, arguments));\n  }\n\n  RangeArray.prototype.decode = function decode(stream, parent) {\n    var length = restructure_src_utils.resolveLength(this.length, stream, parent);\n    var count = 0;\n    var res = [];\n\n    while (count < length) {\n      var range = this.type.decode(stream, parent);\n      range.offset = count;\n      count += range.nLeft + 1;\n      res.push(range);\n    }\n\n    return res;\n  };\n\n  return RangeArray;\n}(r.Array);\n\nvar CFFCustomCharset = new r.VersionedStruct(r.uint8, {\n  0: {\n    glyphs: new r.Array(r.uint16, function (t) {\n      return t.parent.CharStrings.length - 1;\n    })\n  },\n  1: {\n    ranges: new RangeArray(Range1, function (t) {\n      return t.parent.CharStrings.length - 1;\n    })\n  },\n  2: {\n    ranges: new RangeArray(Range2, function (t) {\n      return t.parent.CharStrings.length - 1;\n    })\n  }\n});\nvar CFFCharset = new PredefinedOp([ISOAdobeCharset, ExpertCharset, ExpertSubsetCharset], new CFFPointer(CFFCustomCharset, {\n  lazy: true\n}));\nvar FDRange3 = new r.Struct({\n  first: r.uint16,\n  fd: r.uint8\n});\nvar FDRange4 = new r.Struct({\n  first: r.uint32,\n  fd: r.uint16\n});\nvar FDSelect = new r.VersionedStruct(r.uint8, {\n  0: {\n    fds: new r.Array(r.uint8, function (t) {\n      return t.parent.CharStrings.length;\n    })\n  },\n  3: {\n    nRanges: r.uint16,\n    ranges: new r.Array(FDRange3, 'nRanges'),\n    sentinel: r.uint16\n  },\n  4: {\n    nRanges: r.uint32,\n    ranges: new r.Array(FDRange4, 'nRanges'),\n    sentinel: r.uint32\n  }\n});\nvar ptr = new CFFPointer(CFFPrivateDict);\n\nvar CFFPrivateOp = function () {\n  function CFFPrivateOp() {\n    _classCallCheck(this, CFFPrivateOp);\n  }\n\n  CFFPrivateOp.prototype.decode = function decode(stream, parent, operands) {\n    parent.length = operands[0];\n    return ptr.decode(stream, parent, [operands[1]]);\n  };\n\n  CFFPrivateOp.prototype.size = function size(dict, ctx) {\n    return [CFFPrivateDict.size(dict, ctx, false), ptr.size(dict, ctx)[0]];\n  };\n\n  CFFPrivateOp.prototype.encode = function encode(stream, dict, ctx) {\n    return [CFFPrivateDict.size(dict, ctx, false), ptr.encode(stream, dict, ctx)[0]];\n  };\n\n  return CFFPrivateOp;\n}();\n\nvar FontDict = new CFFDict([// key       name                   type(s)                                 default\n[18, 'Private', new CFFPrivateOp(), null], [[12, 38], 'FontName', 'sid', null], [[12, 7], 'FontMatrix', 'array', [0.001, 0, 0, 0.001, 0, 0]], [[12, 5], 'PaintType', 'number', 0]]);\nvar CFFTopDict = new CFFDict([// key       name                   type(s)                                 default\n[[12, 30], 'ROS', ['sid', 'sid', 'number'], null], [0, 'version', 'sid', null], [1, 'Notice', 'sid', null], [[12, 0], 'Copyright', 'sid', null], [2, 'FullName', 'sid', null], [3, 'FamilyName', 'sid', null], [4, 'Weight', 'sid', null], [[12, 1], 'isFixedPitch', 'boolean', false], [[12, 2], 'ItalicAngle', 'number', 0], [[12, 3], 'UnderlinePosition', 'number', -100], [[12, 4], 'UnderlineThickness', 'number', 50], [[12, 5], 'PaintType', 'number', 0], [[12, 6], 'CharstringType', 'number', 2], [[12, 7], 'FontMatrix', 'array', [0.001, 0, 0, 0.001, 0, 0]], [13, 'UniqueID', 'number', null], [5, 'FontBBox', 'array', [0, 0, 0, 0]], [[12, 8], 'StrokeWidth', 'number', 0], [14, 'XUID', 'array', null], [15, 'charset', CFFCharset, ISOAdobeCharset], [16, 'Encoding', CFFEncoding, StandardEncoding], [17, 'CharStrings', new CFFPointer(new CFFIndex()), null], [18, 'Private', new CFFPrivateOp(), null], [[12, 20], 'SyntheticBase', 'number', null], [[12, 21], 'PostScript', 'sid', null], [[12, 22], 'BaseFontName', 'sid', null], [[12, 23], 'BaseFontBlend', 'delta', null], // CID font specific\n[[12, 31], 'CIDFontVersion', 'number', 0], [[12, 32], 'CIDFontRevision', 'number', 0], [[12, 33], 'CIDFontType', 'number', 0], [[12, 34], 'CIDCount', 'number', 8720], [[12, 35], 'UIDBase', 'number', null], [[12, 37], 'FDSelect', new CFFPointer(FDSelect), null], [[12, 36], 'FDArray', new CFFPointer(new CFFIndex(FontDict)), null], [[12, 38], 'FontName', 'sid', null]]);\nvar VariationStore = new r.Struct({\n  length: r.uint16,\n  itemVariationStore: ItemVariationStore\n});\nvar CFF2TopDict = new CFFDict([[[12, 7], 'FontMatrix', 'array', [0.001, 0, 0, 0.001, 0, 0]], [17, 'CharStrings', new CFFPointer(new CFFIndex()), null], [[12, 37], 'FDSelect', new CFFPointer(FDSelect), null], [[12, 36], 'FDArray', new CFFPointer(new CFFIndex(FontDict)), null], [24, 'vstore', new CFFPointer(VariationStore), null], [25, 'maxstack', 'number', 193]]);\nvar CFFTop = new r.VersionedStruct(r.fixed16, {\n  1: {\n    hdrSize: r.uint8,\n    offSize: r.uint8,\n    nameIndex: new CFFIndex(new r.String('length')),\n    topDictIndex: new CFFIndex(CFFTopDict),\n    stringIndex: new CFFIndex(new r.String('length')),\n    globalSubrIndex: new CFFIndex()\n  },\n  2: {\n    hdrSize: r.uint8,\n    length: r.uint16,\n    topDict: CFF2TopDict,\n    globalSubrIndex: new CFFIndex()\n  }\n});\n\nvar CFFFont = function () {\n  function CFFFont(stream) {\n    _classCallCheck(this, CFFFont);\n\n    this.stream = stream;\n    this.decode();\n  }\n\n  CFFFont.decode = function decode(stream) {\n    return new CFFFont(stream);\n  };\n\n  CFFFont.prototype.decode = function decode() {\n    var start = this.stream.pos;\n    var top = CFFTop.decode(this.stream);\n\n    for (var key in top) {\n      var val = top[key];\n      this[key] = val;\n    }\n\n    if (this.version < 2) {\n      if (this.topDictIndex.length !== 1) {\n        throw new Error(\"Only a single font is allowed in CFF\");\n      }\n\n      this.topDict = this.topDictIndex[0];\n    }\n\n    this.isCIDFont = this.topDict.ROS != null;\n    return this;\n  };\n\n  CFFFont.prototype.string = function string(sid) {\n    if (this.version >= 2) {\n      return null;\n    }\n\n    if (sid < standardStrings.length) {\n      return standardStrings[sid];\n    }\n\n    return this.stringIndex[sid - standardStrings.length];\n  };\n\n  CFFFont.prototype.getCharString = function getCharString(glyph) {\n    this.stream.pos = this.topDict.CharStrings[glyph].offset;\n    return this.stream.readBuffer(this.topDict.CharStrings[glyph].length);\n  };\n\n  CFFFont.prototype.getGlyphName = function getGlyphName(gid) {\n    // CFF2 glyph names are in the post table.\n    if (this.version >= 2) {\n      return null;\n    } // CID-keyed fonts don't have glyph names\n\n\n    if (this.isCIDFont) {\n      return null;\n    }\n\n    var charset = this.topDict.charset;\n\n    if (Array.isArray(charset)) {\n      return charset[gid];\n    }\n\n    if (gid === 0) {\n      return '.notdef';\n    }\n\n    gid -= 1;\n\n    switch (charset.version) {\n      case 0:\n        return this.string(charset.glyphs[gid]);\n\n      case 1:\n      case 2:\n        for (var i = 0; i < charset.ranges.length; i++) {\n          var range = charset.ranges[i];\n\n          if (range.offset <= gid && gid <= range.offset + range.nLeft) {\n            return this.string(range.first + (gid - range.offset));\n          }\n        }\n\n        break;\n    }\n\n    return null;\n  };\n\n  CFFFont.prototype.fdForGlyph = function fdForGlyph(gid) {\n    if (!this.topDict.FDSelect) {\n      return null;\n    }\n\n    switch (this.topDict.FDSelect.version) {\n      case 0:\n        return this.topDict.FDSelect.fds[gid];\n\n      case 3:\n      case 4:\n        var ranges = this.topDict.FDSelect.ranges;\n        var low = 0;\n        var high = ranges.length - 1;\n\n        while (low <= high) {\n          var mid = low + high >> 1;\n\n          if (gid < ranges[mid].first) {\n            high = mid - 1;\n          } else if (mid < high && gid >= ranges[mid + 1].first) {\n            low = mid + 1;\n          } else {\n            return ranges[mid].fd;\n          }\n        }\n\n      default:\n        throw new Error('Unknown FDSelect version: ' + this.topDict.FDSelect.version);\n    }\n  };\n\n  CFFFont.prototype.privateDictForGlyph = function privateDictForGlyph(gid) {\n    if (this.topDict.FDSelect) {\n      var fd = this.fdForGlyph(gid);\n\n      if (this.topDict.FDArray[fd]) {\n        return this.topDict.FDArray[fd].Private;\n      }\n\n      return null;\n    }\n\n    if (this.version < 2) {\n      return this.topDict.Private;\n    }\n\n    return this.topDict.FDArray[0].Private;\n  };\n\n  _createClass(CFFFont, [{\n    key: 'postscriptName',\n    get: function get() {\n      if (this.version < 2) {\n        return this.nameIndex[0];\n      }\n\n      return null;\n    }\n  }, {\n    key: 'fullName',\n    get: function get() {\n      return this.string(this.topDict.FullName);\n    }\n  }, {\n    key: 'familyName',\n    get: function get() {\n      return this.string(this.topDict.FamilyName);\n    }\n  }]);\n\n  return CFFFont;\n}();\n\nvar VerticalOrigin = new r.Struct({\n  glyphIndex: r.uint16,\n  vertOriginY: r.int16\n});\nvar VORG = new r.Struct({\n  majorVersion: r.uint16,\n  minorVersion: r.uint16,\n  defaultVertOriginY: r.int16,\n  numVertOriginYMetrics: r.uint16,\n  metrics: new r.Array(VerticalOrigin, 'numVertOriginYMetrics')\n});\nvar BigMetrics = new r.Struct({\n  height: r.uint8,\n  width: r.uint8,\n  horiBearingX: r.int8,\n  horiBearingY: r.int8,\n  horiAdvance: r.uint8,\n  vertBearingX: r.int8,\n  vertBearingY: r.int8,\n  vertAdvance: r.uint8\n});\nvar SmallMetrics = new r.Struct({\n  height: r.uint8,\n  width: r.uint8,\n  bearingX: r.int8,\n  bearingY: r.int8,\n  advance: r.uint8\n});\nvar EBDTComponent = new r.Struct({\n  glyph: r.uint16,\n  xOffset: r.int8,\n  yOffset: r.int8\n});\n\nvar ByteAligned = function ByteAligned() {\n  _classCallCheck(this, ByteAligned);\n};\n\nvar BitAligned = function BitAligned() {\n  _classCallCheck(this, BitAligned);\n};\n\nvar glyph = new r.VersionedStruct('version', {\n  1: {\n    metrics: SmallMetrics,\n    data: ByteAligned\n  },\n  2: {\n    metrics: SmallMetrics,\n    data: BitAligned\n  },\n  // format 3 is deprecated\n  // format 4 is not supported by Microsoft\n  5: {\n    data: BitAligned\n  },\n  6: {\n    metrics: BigMetrics,\n    data: ByteAligned\n  },\n  7: {\n    metrics: BigMetrics,\n    data: BitAligned\n  },\n  8: {\n    metrics: SmallMetrics,\n    pad: new r.Reserved(r.uint8),\n    numComponents: r.uint16,\n    components: new r.Array(EBDTComponent, 'numComponents')\n  },\n  9: {\n    metrics: BigMetrics,\n    pad: new r.Reserved(r.uint8),\n    numComponents: r.uint16,\n    components: new r.Array(EBDTComponent, 'numComponents')\n  },\n  17: {\n    metrics: SmallMetrics,\n    dataLen: r.uint32,\n    data: new r.Buffer('dataLen')\n  },\n  18: {\n    metrics: BigMetrics,\n    dataLen: r.uint32,\n    data: new r.Buffer('dataLen')\n  },\n  19: {\n    dataLen: r.uint32,\n    data: new r.Buffer('dataLen')\n  }\n});\nvar SBitLineMetrics = new r.Struct({\n  ascender: r.int8,\n  descender: r.int8,\n  widthMax: r.uint8,\n  caretSlopeNumerator: r.int8,\n  caretSlopeDenominator: r.int8,\n  caretOffset: r.int8,\n  minOriginSB: r.int8,\n  minAdvanceSB: r.int8,\n  maxBeforeBL: r.int8,\n  minAfterBL: r.int8,\n  pad: new r.Reserved(r.int8, 2)\n});\nvar CodeOffsetPair = new r.Struct({\n  glyphCode: r.uint16,\n  offset: r.uint16\n});\nvar IndexSubtable = new r.VersionedStruct(r.uint16, {\n  header: {\n    imageFormat: r.uint16,\n    imageDataOffset: r.uint32\n  },\n  1: {\n    offsetArray: new r.Array(r.uint32, function (t) {\n      return t.parent.lastGlyphIndex - t.parent.firstGlyphIndex + 1;\n    })\n  },\n  2: {\n    imageSize: r.uint32,\n    bigMetrics: BigMetrics\n  },\n  3: {\n    offsetArray: new r.Array(r.uint16, function (t) {\n      return t.parent.lastGlyphIndex - t.parent.firstGlyphIndex + 1;\n    })\n  },\n  4: {\n    numGlyphs: r.uint32,\n    glyphArray: new r.Array(CodeOffsetPair, function (t) {\n      return t.numGlyphs + 1;\n    })\n  },\n  5: {\n    imageSize: r.uint32,\n    bigMetrics: BigMetrics,\n    numGlyphs: r.uint32,\n    glyphCodeArray: new r.Array(r.uint16, 'numGlyphs')\n  }\n});\nvar IndexSubtableArray = new r.Struct({\n  firstGlyphIndex: r.uint16,\n  lastGlyphIndex: r.uint16,\n  subtable: new r.Pointer(r.uint32, IndexSubtable)\n});\nvar BitmapSizeTable = new r.Struct({\n  indexSubTableArray: new r.Pointer(r.uint32, new r.Array(IndexSubtableArray, 1), {\n    type: 'parent'\n  }),\n  indexTablesSize: r.uint32,\n  numberOfIndexSubTables: r.uint32,\n  colorRef: r.uint32,\n  hori: SBitLineMetrics,\n  vert: SBitLineMetrics,\n  startGlyphIndex: r.uint16,\n  endGlyphIndex: r.uint16,\n  ppemX: r.uint8,\n  ppemY: r.uint8,\n  bitDepth: r.uint8,\n  flags: new r.Bitfield(r.uint8, ['horizontal', 'vertical'])\n});\nvar EBLC = new r.Struct({\n  version: r.uint32,\n  // 0x00020000\n  numSizes: r.uint32,\n  sizes: new r.Array(BitmapSizeTable, 'numSizes')\n});\nvar ImageTable = new r.Struct({\n  ppem: r.uint16,\n  resolution: r.uint16,\n  imageOffsets: new r.Array(new r.Pointer(r.uint32, 'void'), function (t) {\n    return t.parent.parent.maxp.numGlyphs + 1;\n  })\n}); // This is the Apple sbix table, used by the \"Apple Color Emoji\" font.\n// It includes several image tables with images for each bitmap glyph\n// of several different sizes.\n\nvar sbix = new r.Struct({\n  version: r.uint16,\n  flags: new r.Bitfield(r.uint16, ['renderOutlines']),\n  numImgTables: r.uint32,\n  imageTables: new r.Array(new r.Pointer(r.uint32, ImageTable), 'numImgTables')\n});\nvar LayerRecord = new r.Struct({\n  gid: r.uint16,\n  // Glyph ID of layer glyph (must be in z-order from bottom to top).\n  paletteIndex: r.uint16 // Index value to use in the appropriate palette. This value must\n\n}); // be less than numPaletteEntries in the CPAL table, except for\n// the special case noted below. Each palette entry is 16 bits.\n// A palette index of 0xFFFF is a special case indicating that\n// the text foreground color should be used.\n\nvar BaseGlyphRecord = new r.Struct({\n  gid: r.uint16,\n  // Glyph ID of reference glyph. This glyph is for reference only\n  // and is not rendered for color.\n  firstLayerIndex: r.uint16,\n  // Index (from beginning of the Layer Records) to the layer record.\n  // There will be numLayers consecutive entries for this base glyph.\n  numLayers: r.uint16\n});\nvar COLR = new r.Struct({\n  version: r.uint16,\n  numBaseGlyphRecords: r.uint16,\n  baseGlyphRecord: new r.Pointer(r.uint32, new r.Array(BaseGlyphRecord, 'numBaseGlyphRecords')),\n  layerRecords: new r.Pointer(r.uint32, new r.Array(LayerRecord, 'numLayerRecords'), {\n    lazy: true\n  }),\n  numLayerRecords: r.uint16\n});\nvar ColorRecord = new r.Struct({\n  blue: r.uint8,\n  green: r.uint8,\n  red: r.uint8,\n  alpha: r.uint8\n});\nvar CPAL = new r.VersionedStruct(r.uint16, {\n  header: {\n    numPaletteEntries: r.uint16,\n    numPalettes: r.uint16,\n    numColorRecords: r.uint16,\n    colorRecords: new r.Pointer(r.uint32, new r.Array(ColorRecord, 'numColorRecords')),\n    colorRecordIndices: new r.Array(r.uint16, 'numPalettes')\n  },\n  0: {},\n  1: {\n    offsetPaletteTypeArray: new r.Pointer(r.uint32, new r.Array(r.uint32, 'numPalettes')),\n    offsetPaletteLabelArray: new r.Pointer(r.uint32, new r.Array(r.uint16, 'numPalettes')),\n    offsetPaletteEntryLabelArray: new r.Pointer(r.uint32, new r.Array(r.uint16, 'numPaletteEntries'))\n  }\n});\nvar BaseCoord = new r.VersionedStruct(r.uint16, {\n  1: {\n    // Design units only\n    coordinate: r.int16 // X or Y value, in design units\n\n  },\n  2: {\n    // Design units plus contour point\n    coordinate: r.int16,\n    // X or Y value, in design units\n    referenceGlyph: r.uint16,\n    // GlyphID of control glyph\n    baseCoordPoint: r.uint16 // Index of contour point on the referenceGlyph\n\n  },\n  3: {\n    // Design units plus Device table\n    coordinate: r.int16,\n    // X or Y value, in design units\n    deviceTable: new r.Pointer(r.uint16, Device) // Device table for X or Y value\n\n  }\n});\nvar BaseValues = new r.Struct({\n  defaultIndex: r.uint16,\n  // Index of default baseline for this script-same index in the BaseTagList\n  baseCoordCount: r.uint16,\n  baseCoords: new r.Array(new r.Pointer(r.uint16, BaseCoord), 'baseCoordCount')\n});\nvar FeatMinMaxRecord = new r.Struct({\n  tag: new r.String(4),\n  // 4-byte feature identification tag-must match FeatureTag in FeatureList\n  minCoord: new r.Pointer(r.uint16, BaseCoord, {\n    type: 'parent'\n  }),\n  // May be NULL\n  maxCoord: new r.Pointer(r.uint16, BaseCoord, {\n    type: 'parent'\n  }) // May be NULL\n\n});\nvar MinMax = new r.Struct({\n  minCoord: new r.Pointer(r.uint16, BaseCoord),\n  // May be NULL\n  maxCoord: new r.Pointer(r.uint16, BaseCoord),\n  // May be NULL\n  featMinMaxCount: r.uint16,\n  // May be 0\n  featMinMaxRecords: new r.Array(FeatMinMaxRecord, 'featMinMaxCount') // In alphabetical order\n\n});\nvar BaseLangSysRecord = new r.Struct({\n  tag: new r.String(4),\n  // 4-byte language system identification tag\n  minMax: new r.Pointer(r.uint16, MinMax, {\n    type: 'parent'\n  })\n});\nvar BaseScript = new r.Struct({\n  baseValues: new r.Pointer(r.uint16, BaseValues),\n  // May be NULL\n  defaultMinMax: new r.Pointer(r.uint16, MinMax),\n  // May be NULL\n  baseLangSysCount: r.uint16,\n  // May be 0\n  baseLangSysRecords: new r.Array(BaseLangSysRecord, 'baseLangSysCount') // in alphabetical order by BaseLangSysTag\n\n});\nvar BaseScriptRecord = new r.Struct({\n  tag: new r.String(4),\n  // 4-byte script identification tag\n  script: new r.Pointer(r.uint16, BaseScript, {\n    type: 'parent'\n  })\n});\nvar BaseScriptList = new r.Array(BaseScriptRecord, r.uint16); // Array of 4-byte baseline identification tags-must be in alphabetical order\n\nvar BaseTagList = new r.Array(new r.String(4), r.uint16);\nvar Axis = new r.Struct({\n  baseTagList: new r.Pointer(r.uint16, BaseTagList),\n  // May be NULL\n  baseScriptList: new r.Pointer(r.uint16, BaseScriptList)\n});\nvar BASE = new r.VersionedStruct(r.uint32, {\n  header: {\n    horizAxis: new r.Pointer(r.uint16, Axis),\n    // May be NULL\n    vertAxis: new r.Pointer(r.uint16, Axis) // May be NULL\n\n  },\n  0x00010000: {},\n  0x00010001: {\n    itemVariationStore: new r.Pointer(r.uint32, ItemVariationStore)\n  }\n});\nvar AttachPoint = new r.Array(r.uint16, r.uint16);\nvar AttachList = new r.Struct({\n  coverage: new r.Pointer(r.uint16, Coverage),\n  glyphCount: r.uint16,\n  attachPoints: new r.Array(new r.Pointer(r.uint16, AttachPoint), 'glyphCount')\n});\nvar CaretValue = new r.VersionedStruct(r.uint16, {\n  1: {\n    // Design units only\n    coordinate: r.int16\n  },\n  2: {\n    // Contour point\n    caretValuePoint: r.uint16\n  },\n  3: {\n    // Design units plus Device table\n    coordinate: r.int16,\n    deviceTable: new r.Pointer(r.uint16, Device)\n  }\n});\nvar LigGlyph = new r.Array(new r.Pointer(r.uint16, CaretValue), r.uint16);\nvar LigCaretList = new r.Struct({\n  coverage: new r.Pointer(r.uint16, Coverage),\n  ligGlyphCount: r.uint16,\n  ligGlyphs: new r.Array(new r.Pointer(r.uint16, LigGlyph), 'ligGlyphCount')\n});\nvar MarkGlyphSetsDef = new r.Struct({\n  markSetTableFormat: r.uint16,\n  markSetCount: r.uint16,\n  coverage: new r.Array(new r.Pointer(r.uint32, Coverage), 'markSetCount')\n});\nvar GDEF = new r.VersionedStruct(r.uint32, {\n  header: {\n    glyphClassDef: new r.Pointer(r.uint16, ClassDef),\n    attachList: new r.Pointer(r.uint16, AttachList),\n    ligCaretList: new r.Pointer(r.uint16, LigCaretList),\n    markAttachClassDef: new r.Pointer(r.uint16, ClassDef)\n  },\n  0x00010000: {},\n  0x00010002: {\n    markGlyphSetsDef: new r.Pointer(r.uint16, MarkGlyphSetsDef)\n  },\n  0x00010003: {\n    markGlyphSetsDef: new r.Pointer(r.uint16, MarkGlyphSetsDef),\n    itemVariationStore: new r.Pointer(r.uint32, ItemVariationStore)\n  }\n});\nvar ValueFormat = new r.Bitfield(r.uint16, ['xPlacement', 'yPlacement', 'xAdvance', 'yAdvance', 'xPlaDevice', 'yPlaDevice', 'xAdvDevice', 'yAdvDevice']);\nvar types = {\n  xPlacement: r.int16,\n  yPlacement: r.int16,\n  xAdvance: r.int16,\n  yAdvance: r.int16,\n  xPlaDevice: new r.Pointer(r.uint16, Device, {\n    type: 'global',\n    relativeTo: 'rel'\n  }),\n  yPlaDevice: new r.Pointer(r.uint16, Device, {\n    type: 'global',\n    relativeTo: 'rel'\n  }),\n  xAdvDevice: new r.Pointer(r.uint16, Device, {\n    type: 'global',\n    relativeTo: 'rel'\n  }),\n  yAdvDevice: new r.Pointer(r.uint16, Device, {\n    type: 'global',\n    relativeTo: 'rel'\n  })\n};\n\nvar ValueRecord = function () {\n  function ValueRecord() {\n    var key = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'valueFormat';\n\n    _classCallCheck(this, ValueRecord);\n\n    this.key = key;\n  }\n\n  ValueRecord.prototype.buildStruct = function buildStruct(parent) {\n    var struct = parent;\n\n    while (!struct[this.key] && struct.parent) {\n      struct = struct.parent;\n    }\n\n    if (!struct[this.key]) return;\n    var fields = {};\n\n    fields.rel = function () {\n      return struct._startOffset;\n    };\n\n    var format = struct[this.key];\n\n    for (var key in format) {\n      if (format[key]) {\n        fields[key] = types[key];\n      }\n    }\n\n    return new r.Struct(fields);\n  };\n\n  ValueRecord.prototype.size = function size(val, ctx) {\n    return this.buildStruct(ctx).size(val, ctx);\n  };\n\n  ValueRecord.prototype.decode = function decode(stream, parent) {\n    var res = this.buildStruct(parent).decode(stream, parent);\n    delete res.rel;\n    return res;\n  };\n\n  return ValueRecord;\n}();\n\nvar PairValueRecord = new r.Struct({\n  secondGlyph: r.uint16,\n  value1: new ValueRecord('valueFormat1'),\n  value2: new ValueRecord('valueFormat2')\n});\nvar PairSet = new r.Array(PairValueRecord, r.uint16);\nvar Class2Record = new r.Struct({\n  value1: new ValueRecord('valueFormat1'),\n  value2: new ValueRecord('valueFormat2')\n});\nvar Anchor = new r.VersionedStruct(r.uint16, {\n  1: {\n    // Design units only\n    xCoordinate: r.int16,\n    yCoordinate: r.int16\n  },\n  2: {\n    // Design units plus contour point\n    xCoordinate: r.int16,\n    yCoordinate: r.int16,\n    anchorPoint: r.uint16\n  },\n  3: {\n    // Design units plus Device tables\n    xCoordinate: r.int16,\n    yCoordinate: r.int16,\n    xDeviceTable: new r.Pointer(r.uint16, Device),\n    yDeviceTable: new r.Pointer(r.uint16, Device)\n  }\n});\nvar EntryExitRecord = new r.Struct({\n  entryAnchor: new r.Pointer(r.uint16, Anchor, {\n    type: 'parent'\n  }),\n  exitAnchor: new r.Pointer(r.uint16, Anchor, {\n    type: 'parent'\n  })\n});\nvar MarkRecord = new r.Struct({\n  class: r.uint16,\n  markAnchor: new r.Pointer(r.uint16, Anchor, {\n    type: 'parent'\n  })\n});\nvar MarkArray = new r.Array(MarkRecord, r.uint16);\nvar BaseRecord = new r.Array(new r.Pointer(r.uint16, Anchor), function (t) {\n  return t.parent.classCount;\n});\nvar BaseArray = new r.Array(BaseRecord, r.uint16);\nvar ComponentRecord = new r.Array(new r.Pointer(r.uint16, Anchor), function (t) {\n  return t.parent.parent.classCount;\n});\nvar LigatureAttach = new r.Array(ComponentRecord, r.uint16);\nvar LigatureArray = new r.Array(new r.Pointer(r.uint16, LigatureAttach), r.uint16);\nvar GPOSLookup = new r.VersionedStruct('lookupType', {\n  1: new r.VersionedStruct(r.uint16, {\n    // Single Adjustment\n    1: {\n      // Single positioning value\n      coverage: new r.Pointer(r.uint16, Coverage),\n      valueFormat: ValueFormat,\n      value: new ValueRecord()\n    },\n    2: {\n      coverage: new r.Pointer(r.uint16, Coverage),\n      valueFormat: ValueFormat,\n      valueCount: r.uint16,\n      values: new r.LazyArray(new ValueRecord(), 'valueCount')\n    }\n  }),\n  2: new r.VersionedStruct(r.uint16, {\n    // Pair Adjustment Positioning\n    1: {\n      // Adjustments for glyph pairs\n      coverage: new r.Pointer(r.uint16, Coverage),\n      valueFormat1: ValueFormat,\n      valueFormat2: ValueFormat,\n      pairSetCount: r.uint16,\n      pairSets: new r.LazyArray(new r.Pointer(r.uint16, PairSet), 'pairSetCount')\n    },\n    2: {\n      // Class pair adjustment\n      coverage: new r.Pointer(r.uint16, Coverage),\n      valueFormat1: ValueFormat,\n      valueFormat2: ValueFormat,\n      classDef1: new r.Pointer(r.uint16, ClassDef),\n      classDef2: new r.Pointer(r.uint16, ClassDef),\n      class1Count: r.uint16,\n      class2Count: r.uint16,\n      classRecords: new r.LazyArray(new r.LazyArray(Class2Record, 'class2Count'), 'class1Count')\n    }\n  }),\n  3: {\n    // Cursive Attachment Positioning\n    format: r.uint16,\n    coverage: new r.Pointer(r.uint16, Coverage),\n    entryExitCount: r.uint16,\n    entryExitRecords: new r.Array(EntryExitRecord, 'entryExitCount')\n  },\n  4: {\n    // MarkToBase Attachment Positioning\n    format: r.uint16,\n    markCoverage: new r.Pointer(r.uint16, Coverage),\n    baseCoverage: new r.Pointer(r.uint16, Coverage),\n    classCount: r.uint16,\n    markArray: new r.Pointer(r.uint16, MarkArray),\n    baseArray: new r.Pointer(r.uint16, BaseArray)\n  },\n  5: {\n    // MarkToLigature Attachment Positioning\n    format: r.uint16,\n    markCoverage: new r.Pointer(r.uint16, Coverage),\n    ligatureCoverage: new r.Pointer(r.uint16, Coverage),\n    classCount: r.uint16,\n    markArray: new r.Pointer(r.uint16, MarkArray),\n    ligatureArray: new r.Pointer(r.uint16, LigatureArray)\n  },\n  6: {\n    // MarkToMark Attachment Positioning\n    format: r.uint16,\n    mark1Coverage: new r.Pointer(r.uint16, Coverage),\n    mark2Coverage: new r.Pointer(r.uint16, Coverage),\n    classCount: r.uint16,\n    mark1Array: new r.Pointer(r.uint16, MarkArray),\n    mark2Array: new r.Pointer(r.uint16, BaseArray)\n  },\n  7: Context,\n  // Contextual positioning\n  8: ChainingContext,\n  // Chaining contextual positioning\n  9: {\n    // Extension Positioning\n    posFormat: r.uint16,\n    lookupType: r.uint16,\n    // cannot also be 9\n    extension: new r.Pointer(r.uint32, GPOSLookup)\n  }\n}); // Fix circular reference\n\nGPOSLookup.versions[9].extension.type = GPOSLookup;\nvar GPOS = new r.VersionedStruct(r.uint32, {\n  header: {\n    scriptList: new r.Pointer(r.uint16, ScriptList),\n    featureList: new r.Pointer(r.uint16, FeatureList),\n    lookupList: new r.Pointer(r.uint16, new LookupList(GPOSLookup))\n  },\n  0x00010000: {},\n  0x00010001: {\n    featureVariations: new r.Pointer(r.uint32, FeatureVariations)\n  }\n});\nvar Sequence = new r.Array(r.uint16, r.uint16);\nvar AlternateSet = Sequence;\nvar Ligature = new r.Struct({\n  glyph: r.uint16,\n  compCount: r.uint16,\n  components: new r.Array(r.uint16, function (t) {\n    return t.compCount - 1;\n  })\n});\nvar LigatureSet = new r.Array(new r.Pointer(r.uint16, Ligature), r.uint16);\nvar GSUBLookup = new r.VersionedStruct('lookupType', {\n  1: new r.VersionedStruct(r.uint16, {\n    // Single Substitution\n    1: {\n      coverage: new r.Pointer(r.uint16, Coverage),\n      deltaGlyphID: r.int16\n    },\n    2: {\n      coverage: new r.Pointer(r.uint16, Coverage),\n      glyphCount: r.uint16,\n      substitute: new r.LazyArray(r.uint16, 'glyphCount')\n    }\n  }),\n  2: {\n    // Multiple Substitution\n    substFormat: r.uint16,\n    coverage: new r.Pointer(r.uint16, Coverage),\n    count: r.uint16,\n    sequences: new r.LazyArray(new r.Pointer(r.uint16, Sequence), 'count')\n  },\n  3: {\n    // Alternate Substitution\n    substFormat: r.uint16,\n    coverage: new r.Pointer(r.uint16, Coverage),\n    count: r.uint16,\n    alternateSet: new r.LazyArray(new r.Pointer(r.uint16, AlternateSet), 'count')\n  },\n  4: {\n    // Ligature Substitution\n    substFormat: r.uint16,\n    coverage: new r.Pointer(r.uint16, Coverage),\n    count: r.uint16,\n    ligatureSets: new r.LazyArray(new r.Pointer(r.uint16, LigatureSet), 'count')\n  },\n  5: Context,\n  // Contextual Substitution\n  6: ChainingContext,\n  // Chaining Contextual Substitution\n  7: {\n    // Extension Substitution\n    substFormat: r.uint16,\n    lookupType: r.uint16,\n    // cannot also be 7\n    extension: new r.Pointer(r.uint32, GSUBLookup)\n  },\n  8: {\n    // Reverse Chaining Contextual Single Substitution\n    substFormat: r.uint16,\n    coverage: new r.Pointer(r.uint16, Coverage),\n    backtrackCoverage: new r.Array(new r.Pointer(r.uint16, Coverage), 'backtrackGlyphCount'),\n    lookaheadGlyphCount: r.uint16,\n    lookaheadCoverage: new r.Array(new r.Pointer(r.uint16, Coverage), 'lookaheadGlyphCount'),\n    glyphCount: r.uint16,\n    substitutes: new r.Array(r.uint16, 'glyphCount')\n  }\n}); // Fix circular reference\n\nGSUBLookup.versions[7].extension.type = GSUBLookup;\nvar GSUB = new r.VersionedStruct(r.uint32, {\n  header: {\n    scriptList: new r.Pointer(r.uint16, ScriptList),\n    featureList: new r.Pointer(r.uint16, FeatureList),\n    lookupList: new r.Pointer(r.uint16, new LookupList(GSUBLookup))\n  },\n  0x00010000: {},\n  0x00010001: {\n    featureVariations: new r.Pointer(r.uint32, FeatureVariations)\n  }\n});\nvar JstfGSUBModList = new r.Array(r.uint16, r.uint16);\nvar JstfPriority = new r.Struct({\n  shrinkageEnableGSUB: new r.Pointer(r.uint16, JstfGSUBModList),\n  shrinkageDisableGSUB: new r.Pointer(r.uint16, JstfGSUBModList),\n  shrinkageEnableGPOS: new r.Pointer(r.uint16, JstfGSUBModList),\n  shrinkageDisableGPOS: new r.Pointer(r.uint16, JstfGSUBModList),\n  shrinkageJstfMax: new r.Pointer(r.uint16, new LookupList(GPOSLookup)),\n  extensionEnableGSUB: new r.Pointer(r.uint16, JstfGSUBModList),\n  extensionDisableGSUB: new r.Pointer(r.uint16, JstfGSUBModList),\n  extensionEnableGPOS: new r.Pointer(r.uint16, JstfGSUBModList),\n  extensionDisableGPOS: new r.Pointer(r.uint16, JstfGSUBModList),\n  extensionJstfMax: new r.Pointer(r.uint16, new LookupList(GPOSLookup))\n});\nvar JstfLangSys = new r.Array(new r.Pointer(r.uint16, JstfPriority), r.uint16);\nvar JstfLangSysRecord = new r.Struct({\n  tag: new r.String(4),\n  jstfLangSys: new r.Pointer(r.uint16, JstfLangSys)\n});\nvar JstfScript = new r.Struct({\n  extenderGlyphs: new r.Pointer(r.uint16, new r.Array(r.uint16, r.uint16)),\n  // array of glyphs to extend line length\n  defaultLangSys: new r.Pointer(r.uint16, JstfLangSys),\n  langSysCount: r.uint16,\n  langSysRecords: new r.Array(JstfLangSysRecord, 'langSysCount')\n});\nvar JstfScriptRecord = new r.Struct({\n  tag: new r.String(4),\n  script: new r.Pointer(r.uint16, JstfScript, {\n    type: 'parent'\n  })\n});\nvar JSTF = new r.Struct({\n  version: r.uint32,\n  // should be 0x00010000\n  scriptCount: r.uint16,\n  scriptList: new r.Array(JstfScriptRecord, 'scriptCount')\n}); // TODO: add this to restructure\n\nvar VariableSizeNumber = function () {\n  function VariableSizeNumber(size) {\n    _classCallCheck(this, VariableSizeNumber);\n\n    this._size = size;\n  }\n\n  VariableSizeNumber.prototype.decode = function decode(stream, parent) {\n    switch (this.size(0, parent)) {\n      case 1:\n        return stream.readUInt8();\n\n      case 2:\n        return stream.readUInt16BE();\n\n      case 3:\n        return stream.readUInt24BE();\n\n      case 4:\n        return stream.readUInt32BE();\n    }\n  };\n\n  VariableSizeNumber.prototype.size = function size(val, parent) {\n    return restructure_src_utils.resolveLength(this._size, null, parent);\n  };\n\n  return VariableSizeNumber;\n}();\n\nvar MapDataEntry = new r.Struct({\n  entry: new VariableSizeNumber(function (t) {\n    return ((t.parent.entryFormat & 0x0030) >> 4) + 1;\n  }),\n  outerIndex: function outerIndex(t) {\n    return t.entry >> (t.parent.entryFormat & 0x000F) + 1;\n  },\n  innerIndex: function innerIndex(t) {\n    return t.entry & (1 << (t.parent.entryFormat & 0x000F) + 1) - 1;\n  }\n});\nvar DeltaSetIndexMap = new r.Struct({\n  entryFormat: r.uint16,\n  mapCount: r.uint16,\n  mapData: new r.Array(MapDataEntry, 'mapCount')\n});\nvar HVAR = new r.Struct({\n  majorVersion: r.uint16,\n  minorVersion: r.uint16,\n  itemVariationStore: new r.Pointer(r.uint32, ItemVariationStore),\n  advanceWidthMapping: new r.Pointer(r.uint32, DeltaSetIndexMap),\n  LSBMapping: new r.Pointer(r.uint32, DeltaSetIndexMap),\n  RSBMapping: new r.Pointer(r.uint32, DeltaSetIndexMap)\n});\nvar Signature = new r.Struct({\n  format: r.uint32,\n  length: r.uint32,\n  offset: r.uint32\n});\nvar SignatureBlock = new r.Struct({\n  reserved: new r.Reserved(r.uint16, 2),\n  cbSignature: r.uint32,\n  // Length (in bytes) of the PKCS#7 packet in pbSignature\n  signature: new r.Buffer('cbSignature')\n});\nvar DSIG = new r.Struct({\n  ulVersion: r.uint32,\n  // Version number of the DSIG table (0x00000001)\n  usNumSigs: r.uint16,\n  // Number of signatures in the table\n  usFlag: r.uint16,\n  // Permission flags\n  signatures: new r.Array(Signature, 'usNumSigs'),\n  signatureBlocks: new r.Array(SignatureBlock, 'usNumSigs')\n});\nvar GaspRange = new r.Struct({\n  rangeMaxPPEM: r.uint16,\n  // Upper limit of range, in ppem\n  rangeGaspBehavior: new r.Bitfield(r.uint16, [// Flags describing desired rasterizer behavior\n  'grayscale', 'gridfit', 'symmetricSmoothing', 'symmetricGridfit' // only in version 1, for ClearType\n  ])\n});\nvar gasp = new r.Struct({\n  version: r.uint16,\n  // set to 0\n  numRanges: r.uint16,\n  gaspRanges: new r.Array(GaspRange, 'numRanges') // Sorted by ppem\n\n});\nvar DeviceRecord = new r.Struct({\n  pixelSize: r.uint8,\n  maximumWidth: r.uint8,\n  widths: new r.Array(r.uint8, function (t) {\n    return t.parent.parent.maxp.numGlyphs;\n  })\n}); // The Horizontal Device Metrics table stores integer advance widths scaled to particular pixel sizes\n\nvar hdmx = new r.Struct({\n  version: r.uint16,\n  numRecords: r.int16,\n  sizeDeviceRecord: r.int32,\n  records: new r.Array(DeviceRecord, 'numRecords')\n});\nvar KernPair = new r.Struct({\n  left: r.uint16,\n  right: r.uint16,\n  value: r.int16\n});\nvar ClassTable = new r.Struct({\n  firstGlyph: r.uint16,\n  nGlyphs: r.uint16,\n  offsets: new r.Array(r.uint16, 'nGlyphs'),\n  max: function max(t) {\n    return t.offsets.length && Math.max.apply(Math, t.offsets);\n  }\n});\nvar Kern2Array = new r.Struct({\n  off: function off(t) {\n    return t._startOffset - t.parent.parent._startOffset;\n  },\n  len: function len(t) {\n    return ((t.parent.leftTable.max - t.off) / t.parent.rowWidth + 1) * (t.parent.rowWidth / 2);\n  },\n  values: new r.LazyArray(r.int16, 'len')\n});\nvar KernSubtable = new r.VersionedStruct('format', {\n  0: {\n    nPairs: r.uint16,\n    searchRange: r.uint16,\n    entrySelector: r.uint16,\n    rangeShift: r.uint16,\n    pairs: new r.Array(KernPair, 'nPairs')\n  },\n  2: {\n    rowWidth: r.uint16,\n    leftTable: new r.Pointer(r.uint16, ClassTable, {\n      type: 'parent'\n    }),\n    rightTable: new r.Pointer(r.uint16, ClassTable, {\n      type: 'parent'\n    }),\n    array: new r.Pointer(r.uint16, Kern2Array, {\n      type: 'parent'\n    })\n  },\n  3: {\n    glyphCount: r.uint16,\n    kernValueCount: r.uint8,\n    leftClassCount: r.uint8,\n    rightClassCount: r.uint8,\n    flags: r.uint8,\n    kernValue: new r.Array(r.int16, 'kernValueCount'),\n    leftClass: new r.Array(r.uint8, 'glyphCount'),\n    rightClass: new r.Array(r.uint8, 'glyphCount'),\n    kernIndex: new r.Array(r.uint8, function (t) {\n      return t.leftClassCount * t.rightClassCount;\n    })\n  }\n});\nvar KernTable = new r.VersionedStruct('version', {\n  0: {\n    // Microsoft uses this format\n    subVersion: r.uint16,\n    // Microsoft has an extra sub-table version number\n    length: r.uint16,\n    // Length of the subtable, in bytes\n    format: r.uint8,\n    // Format of subtable\n    coverage: new r.Bitfield(r.uint8, ['horizontal', // 1 if table has horizontal data, 0 if vertical\n    'minimum', // If set to 1, the table has minimum values. If set to 0, the table has kerning values.\n    'crossStream', // If set to 1, kerning is perpendicular to the flow of the text\n    'override' // If set to 1 the value in this table replaces the accumulated value\n    ]),\n    subtable: KernSubtable,\n    padding: new r.Reserved(r.uint8, function (t) {\n      return t.length - t._currentOffset;\n    })\n  },\n  1: {\n    // Apple uses this format\n    length: r.uint32,\n    coverage: new r.Bitfield(r.uint8, [null, null, null, null, null, 'variation', // Set if table has variation kerning values\n    'crossStream', // Set if table has cross-stream kerning values\n    'vertical' // Set if table has vertical kerning values\n    ]),\n    format: r.uint8,\n    tupleIndex: r.uint16,\n    subtable: KernSubtable,\n    padding: new r.Reserved(r.uint8, function (t) {\n      return t.length - t._currentOffset;\n    })\n  }\n});\nvar kern = new r.VersionedStruct(r.uint16, {\n  0: {\n    // Microsoft Version\n    nTables: r.uint16,\n    tables: new r.Array(KernTable, 'nTables')\n  },\n  1: {\n    // Apple Version\n    reserved: new r.Reserved(r.uint16),\n    // the other half of the version number\n    nTables: r.uint32,\n    tables: new r.Array(KernTable, 'nTables')\n  }\n}); // Linear Threshold table\n// Records the ppem for each glyph at which the scaling becomes linear again,\n// despite instructions effecting the advance width\n\nvar LTSH = new r.Struct({\n  version: r.uint16,\n  numGlyphs: r.uint16,\n  yPels: new r.Array(r.uint8, 'numGlyphs')\n}); // PCL 5 Table\n// NOTE: The PCLT table is strongly discouraged for OpenType fonts with TrueType outlines\n\nvar PCLT = new r.Struct({\n  version: r.uint16,\n  fontNumber: r.uint32,\n  pitch: r.uint16,\n  xHeight: r.uint16,\n  style: r.uint16,\n  typeFamily: r.uint16,\n  capHeight: r.uint16,\n  symbolSet: r.uint16,\n  typeface: new r.String(16),\n  characterComplement: new r.String(8),\n  fileName: new r.String(6),\n  strokeWeight: new r.String(1),\n  widthType: new r.String(1),\n  serifStyle: r.uint8,\n  reserved: new r.Reserved(r.uint8)\n}); // VDMX tables contain ascender/descender overrides for certain (usually small)\n// sizes. This is needed in order to match font metrics on Windows.\n\nvar Ratio = new r.Struct({\n  bCharSet: r.uint8,\n  // Character set\n  xRatio: r.uint8,\n  // Value to use for x-Ratio\n  yStartRatio: r.uint8,\n  // Starting y-Ratio value\n  yEndRatio: r.uint8 // Ending y-Ratio value\n\n});\nvar vTable = new r.Struct({\n  yPelHeight: r.uint16,\n  // yPelHeight to which values apply\n  yMax: r.int16,\n  // Maximum value (in pels) for this yPelHeight\n  yMin: r.int16 // Minimum value (in pels) for this yPelHeight\n\n});\nvar VdmxGroup = new r.Struct({\n  recs: r.uint16,\n  // Number of height records in this group\n  startsz: r.uint8,\n  // Starting yPelHeight\n  endsz: r.uint8,\n  // Ending yPelHeight\n  entries: new r.Array(vTable, 'recs') // The VDMX records\n\n});\nvar VDMX = new r.Struct({\n  version: r.uint16,\n  // Version number (0 or 1)\n  numRecs: r.uint16,\n  // Number of VDMX groups present\n  numRatios: r.uint16,\n  // Number of aspect ratio groupings\n  ratioRanges: new r.Array(Ratio, 'numRatios'),\n  // Ratio ranges\n  offsets: new r.Array(r.uint16, 'numRatios'),\n  // Offset to the VDMX group for this ratio range\n  groups: new r.Array(VdmxGroup, 'numRecs') // The actual VDMX groupings\n\n}); // Vertical Header Table\n\nvar vhea = new r.Struct({\n  version: r.uint16,\n  // Version number of the Vertical Header Table\n  ascent: r.int16,\n  // The vertical typographic ascender for this font\n  descent: r.int16,\n  // The vertical typographic descender for this font\n  lineGap: r.int16,\n  // The vertical typographic line gap for this font\n  advanceHeightMax: r.int16,\n  // The maximum advance height measurement found in the font\n  minTopSideBearing: r.int16,\n  // The minimum top side bearing measurement found in the font\n  minBottomSideBearing: r.int16,\n  // The minimum bottom side bearing measurement found in the font\n  yMaxExtent: r.int16,\n  caretSlopeRise: r.int16,\n  // Caret slope (rise/run)\n  caretSlopeRun: r.int16,\n  caretOffset: r.int16,\n  // Set value equal to 0 for nonslanted fonts\n  reserved: new r.Reserved(r.int16, 4),\n  metricDataFormat: r.int16,\n  // Set to 0\n  numberOfMetrics: r.uint16 // Number of advance heights in the Vertical Metrics table\n\n});\nvar VmtxEntry = new r.Struct({\n  advance: r.uint16,\n  // The advance height of the glyph\n  bearing: r.int16 // The top sidebearing of the glyph\n\n}); // Vertical Metrics Table\n\nvar vmtx = new r.Struct({\n  metrics: new r.LazyArray(VmtxEntry, function (t) {\n    return t.parent.vhea.numberOfMetrics;\n  }),\n  bearings: new r.LazyArray(r.int16, function (t) {\n    return t.parent.maxp.numGlyphs - t.parent.vhea.numberOfMetrics;\n  })\n});\nvar shortFrac = new r.Fixed(16, 'BE', 14);\nvar Correspondence = new r.Struct({\n  fromCoord: shortFrac,\n  toCoord: shortFrac\n});\nvar Segment = new r.Struct({\n  pairCount: r.uint16,\n  correspondence: new r.Array(Correspondence, 'pairCount')\n});\nvar avar = new r.Struct({\n  version: r.fixed32,\n  axisCount: r.uint32,\n  segment: new r.Array(Segment, 'axisCount')\n});\n\nvar UnboundedArrayAccessor = function () {\n  function UnboundedArrayAccessor(type, stream, parent) {\n    _classCallCheck(this, UnboundedArrayAccessor);\n\n    this.type = type;\n    this.stream = stream;\n    this.parent = parent;\n    this.base = this.stream.pos;\n    this._items = [];\n  }\n\n  UnboundedArrayAccessor.prototype.getItem = function getItem(index) {\n    if (this._items[index] == null) {\n      var pos = this.stream.pos;\n      this.stream.pos = this.base + this.type.size(null, this.parent) * index;\n      this._items[index] = this.type.decode(this.stream, this.parent);\n      this.stream.pos = pos;\n    }\n\n    return this._items[index];\n  };\n\n  UnboundedArrayAccessor.prototype.inspect = function inspect() {\n    return '[UnboundedArray ' + this.type.constructor.name + ']';\n  };\n\n  return UnboundedArrayAccessor;\n}();\n\nvar UnboundedArray = function (_r$Array) {\n  _inherits(UnboundedArray, _r$Array);\n\n  function UnboundedArray(type) {\n    _classCallCheck(this, UnboundedArray);\n\n    return _possibleConstructorReturn(this, _r$Array.call(this, type, 0));\n  }\n\n  UnboundedArray.prototype.decode = function decode(stream, parent) {\n    return new UnboundedArrayAccessor(this.type, stream, parent);\n  };\n\n  return UnboundedArray;\n}(r.Array);\n\nvar LookupTable = function LookupTable() {\n  var ValueType = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : r.uint16; // Helper class that makes internal structures invisible to pointers\n\n  var Shadow = function () {\n    function Shadow(type) {\n      _classCallCheck(this, Shadow);\n\n      this.type = type;\n    }\n\n    Shadow.prototype.decode = function decode(stream, ctx) {\n      ctx = ctx.parent.parent;\n      return this.type.decode(stream, ctx);\n    };\n\n    Shadow.prototype.size = function size(val, ctx) {\n      ctx = ctx.parent.parent;\n      return this.type.size(val, ctx);\n    };\n\n    Shadow.prototype.encode = function encode(stream, val, ctx) {\n      ctx = ctx.parent.parent;\n      return this.type.encode(stream, val, ctx);\n    };\n\n    return Shadow;\n  }();\n\n  ValueType = new Shadow(ValueType);\n  var BinarySearchHeader = new r.Struct({\n    unitSize: r.uint16,\n    nUnits: r.uint16,\n    searchRange: r.uint16,\n    entrySelector: r.uint16,\n    rangeShift: r.uint16\n  });\n  var LookupSegmentSingle = new r.Struct({\n    lastGlyph: r.uint16,\n    firstGlyph: r.uint16,\n    value: ValueType\n  });\n  var LookupSegmentArray = new r.Struct({\n    lastGlyph: r.uint16,\n    firstGlyph: r.uint16,\n    values: new r.Pointer(r.uint16, new r.Array(ValueType, function (t) {\n      return t.lastGlyph - t.firstGlyph + 1;\n    }), {\n      type: 'parent'\n    })\n  });\n  var LookupSingle = new r.Struct({\n    glyph: r.uint16,\n    value: ValueType\n  });\n  return new r.VersionedStruct(r.uint16, {\n    0: {\n      values: new UnboundedArray(ValueType) // length == number of glyphs maybe?\n\n    },\n    2: {\n      binarySearchHeader: BinarySearchHeader,\n      segments: new r.Array(LookupSegmentSingle, function (t) {\n        return t.binarySearchHeader.nUnits;\n      })\n    },\n    4: {\n      binarySearchHeader: BinarySearchHeader,\n      segments: new r.Array(LookupSegmentArray, function (t) {\n        return t.binarySearchHeader.nUnits;\n      })\n    },\n    6: {\n      binarySearchHeader: BinarySearchHeader,\n      segments: new r.Array(LookupSingle, function (t) {\n        return t.binarySearchHeader.nUnits;\n      })\n    },\n    8: {\n      firstGlyph: r.uint16,\n      count: r.uint16,\n      values: new r.Array(ValueType, 'count')\n    }\n  });\n};\n\nfunction StateTable() {\n  var entryData = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var lookupType = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : r.uint16;\n\n  var entry = _Object$assign({\n    newState: r.uint16,\n    flags: r.uint16\n  }, entryData);\n\n  var Entry = new r.Struct(entry);\n  var StateArray = new UnboundedArray(new r.Array(r.uint16, function (t) {\n    return t.nClasses;\n  }));\n  var StateHeader = new r.Struct({\n    nClasses: r.uint32,\n    classTable: new r.Pointer(r.uint32, new LookupTable(lookupType)),\n    stateArray: new r.Pointer(r.uint32, StateArray),\n    entryTable: new r.Pointer(r.uint32, new UnboundedArray(Entry))\n  });\n  return StateHeader;\n} // This is the old version of the StateTable structure\n\n\nfunction StateTable1() {\n  var entryData = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var lookupType = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : r.uint16;\n  var ClassLookupTable = new r.Struct({\n    version: function version() {\n      return 8;\n    },\n    // simulate LookupTable\n    firstGlyph: r.uint16,\n    values: new r.Array(r.uint8, r.uint16)\n  });\n\n  var entry = _Object$assign({\n    newStateOffset: r.uint16,\n    // convert offset to stateArray index\n    newState: function newState(t) {\n      return (t.newStateOffset - (t.parent.stateArray.base - t.parent._startOffset)) / t.parent.nClasses;\n    },\n    flags: r.uint16\n  }, entryData);\n\n  var Entry = new r.Struct(entry);\n  var StateArray = new UnboundedArray(new r.Array(r.uint8, function (t) {\n    return t.nClasses;\n  }));\n  var StateHeader1 = new r.Struct({\n    nClasses: r.uint16,\n    classTable: new r.Pointer(r.uint16, ClassLookupTable),\n    stateArray: new r.Pointer(r.uint16, StateArray),\n    entryTable: new r.Pointer(r.uint16, new UnboundedArray(Entry))\n  });\n  return StateHeader1;\n}\n\nvar BslnSubtable = new r.VersionedStruct('format', {\n  0: {\n    // Distance-based, no mapping\n    deltas: new r.Array(r.int16, 32)\n  },\n  1: {\n    // Distance-based, with mapping\n    deltas: new r.Array(r.int16, 32),\n    mappingData: new LookupTable(r.uint16)\n  },\n  2: {\n    // Control point-based, no mapping\n    standardGlyph: r.uint16,\n    controlPoints: new r.Array(r.uint16, 32)\n  },\n  3: {\n    // Control point-based, with mapping\n    standardGlyph: r.uint16,\n    controlPoints: new r.Array(r.uint16, 32),\n    mappingData: new LookupTable(r.uint16)\n  }\n});\nvar bsln = new r.Struct({\n  version: r.fixed32,\n  format: r.uint16,\n  defaultBaseline: r.uint16,\n  subtable: BslnSubtable\n});\nvar Setting = new r.Struct({\n  setting: r.uint16,\n  nameIndex: r.int16,\n  name: function name(t) {\n    return t.parent.parent.parent.name.records.fontFeatures[t.nameIndex];\n  }\n});\nvar FeatureName = new r.Struct({\n  feature: r.uint16,\n  nSettings: r.uint16,\n  settingTable: new r.Pointer(r.uint32, new r.Array(Setting, 'nSettings'), {\n    type: 'parent'\n  }),\n  featureFlags: new r.Bitfield(r.uint8, [null, null, null, null, null, null, 'hasDefault', 'exclusive']),\n  defaultSetting: r.uint8,\n  nameIndex: r.int16,\n  name: function name(t) {\n    return t.parent.parent.name.records.fontFeatures[t.nameIndex];\n  }\n});\nvar feat = new r.Struct({\n  version: r.fixed32,\n  featureNameCount: r.uint16,\n  reserved1: new r.Reserved(r.uint16),\n  reserved2: new r.Reserved(r.uint32),\n  featureNames: new r.Array(FeatureName, 'featureNameCount')\n});\nvar Axis$1 = new r.Struct({\n  axisTag: new r.String(4),\n  minValue: r.fixed32,\n  defaultValue: r.fixed32,\n  maxValue: r.fixed32,\n  flags: r.uint16,\n  nameID: r.uint16,\n  name: function name(t) {\n    return t.parent.parent.name.records.fontFeatures[t.nameID];\n  }\n});\nvar Instance = new r.Struct({\n  nameID: r.uint16,\n  name: function name(t) {\n    return t.parent.parent.name.records.fontFeatures[t.nameID];\n  },\n  flags: r.uint16,\n  coord: new r.Array(r.fixed32, function (t) {\n    return t.parent.axisCount;\n  }),\n  postscriptNameID: new r.Optional(r.uint16, function (t) {\n    return t.parent.instanceSize - t._currentOffset > 0;\n  })\n});\nvar fvar = new r.Struct({\n  version: r.fixed32,\n  offsetToData: r.uint16,\n  countSizePairs: r.uint16,\n  axisCount: r.uint16,\n  axisSize: r.uint16,\n  instanceCount: r.uint16,\n  instanceSize: r.uint16,\n  axis: new r.Array(Axis$1, 'axisCount'),\n  instance: new r.Array(Instance, 'instanceCount')\n});\nvar shortFrac$1 = new r.Fixed(16, 'BE', 14);\n\nvar Offset = function () {\n  function Offset() {\n    _classCallCheck(this, Offset);\n  }\n\n  Offset.decode = function decode(stream, parent) {\n    // In short format, offsets are multiplied by 2.\n    // This doesn't seem to be documented by Apple, but it\n    // is implemented this way in Freetype.\n    return parent.flags ? stream.readUInt32BE() : stream.readUInt16BE() * 2;\n  };\n\n  return Offset;\n}();\n\nvar gvar = new r.Struct({\n  version: r.uint16,\n  reserved: new r.Reserved(r.uint16),\n  axisCount: r.uint16,\n  globalCoordCount: r.uint16,\n  globalCoords: new r.Pointer(r.uint32, new r.Array(new r.Array(shortFrac$1, 'axisCount'), 'globalCoordCount')),\n  glyphCount: r.uint16,\n  flags: r.uint16,\n  offsetToData: r.uint32,\n  offsets: new r.Array(new r.Pointer(Offset, 'void', {\n    relativeTo: 'offsetToData',\n    allowNull: false\n  }), function (t) {\n    return t.glyphCount + 1;\n  })\n});\nvar ClassTable$1 = new r.Struct({\n  length: r.uint16,\n  coverage: r.uint16,\n  subFeatureFlags: r.uint32,\n  stateTable: new StateTable1()\n});\nvar WidthDeltaRecord = new r.Struct({\n  justClass: r.uint32,\n  beforeGrowLimit: r.fixed32,\n  beforeShrinkLimit: r.fixed32,\n  afterGrowLimit: r.fixed32,\n  afterShrinkLimit: r.fixed32,\n  growFlags: r.uint16,\n  shrinkFlags: r.uint16\n});\nvar WidthDeltaCluster = new r.Array(WidthDeltaRecord, r.uint32);\nvar ActionData = new r.VersionedStruct('actionType', {\n  0: {\n    // Decomposition action\n    lowerLimit: r.fixed32,\n    upperLimit: r.fixed32,\n    order: r.uint16,\n    glyphs: new r.Array(r.uint16, r.uint16)\n  },\n  1: {\n    // Unconditional add glyph action\n    addGlyph: r.uint16\n  },\n  2: {\n    // Conditional add glyph action\n    substThreshold: r.fixed32,\n    addGlyph: r.uint16,\n    substGlyph: r.uint16\n  },\n  3: {},\n  // Stretch glyph action (no data, not supported by CoreText)\n  4: {\n    // Ductile glyph action (not supported by CoreText)\n    variationAxis: r.uint32,\n    minimumLimit: r.fixed32,\n    noStretchValue: r.fixed32,\n    maximumLimit: r.fixed32\n  },\n  5: {\n    // Repeated add glyph action\n    flags: r.uint16,\n    glyph: r.uint16\n  }\n});\nvar Action = new r.Struct({\n  actionClass: r.uint16,\n  actionType: r.uint16,\n  actionLength: r.uint32,\n  actionData: ActionData,\n  padding: new r.Reserved(r.uint8, function (t) {\n    return t.actionLength - t._currentOffset;\n  })\n});\nvar PostcompensationAction = new r.Array(Action, r.uint32);\nvar PostCompensationTable = new r.Struct({\n  lookupTable: new LookupTable(new r.Pointer(r.uint16, PostcompensationAction))\n});\nvar JustificationTable = new r.Struct({\n  classTable: new r.Pointer(r.uint16, ClassTable$1, {\n    type: 'parent'\n  }),\n  wdcOffset: r.uint16,\n  postCompensationTable: new r.Pointer(r.uint16, PostCompensationTable, {\n    type: 'parent'\n  }),\n  widthDeltaClusters: new LookupTable(new r.Pointer(r.uint16, WidthDeltaCluster, {\n    type: 'parent',\n    relativeTo: 'wdcOffset'\n  }))\n});\nvar just = new r.Struct({\n  version: r.uint32,\n  format: r.uint16,\n  horizontal: new r.Pointer(r.uint16, JustificationTable),\n  vertical: new r.Pointer(r.uint16, JustificationTable)\n});\nvar LigatureData = {\n  action: r.uint16\n};\nvar ContextualData = {\n  markIndex: r.uint16,\n  currentIndex: r.uint16\n};\nvar InsertionData = {\n  currentInsertIndex: r.uint16,\n  markedInsertIndex: r.uint16\n};\nvar SubstitutionTable = new r.Struct({\n  items: new UnboundedArray(new r.Pointer(r.uint32, new LookupTable()))\n});\nvar SubtableData = new r.VersionedStruct('type', {\n  0: {\n    // Indic Rearrangement Subtable\n    stateTable: new StateTable()\n  },\n  1: {\n    // Contextual Glyph Substitution Subtable\n    stateTable: new StateTable(ContextualData),\n    substitutionTable: new r.Pointer(r.uint32, SubstitutionTable)\n  },\n  2: {\n    // Ligature subtable\n    stateTable: new StateTable(LigatureData),\n    ligatureActions: new r.Pointer(r.uint32, new UnboundedArray(r.uint32)),\n    components: new r.Pointer(r.uint32, new UnboundedArray(r.uint16)),\n    ligatureList: new r.Pointer(r.uint32, new UnboundedArray(r.uint16))\n  },\n  4: {\n    // Non-contextual Glyph Substitution Subtable\n    lookupTable: new LookupTable()\n  },\n  5: {\n    // Glyph Insertion Subtable\n    stateTable: new StateTable(InsertionData),\n    insertionActions: new r.Pointer(r.uint32, new UnboundedArray(r.uint16))\n  }\n});\nvar Subtable = new r.Struct({\n  length: r.uint32,\n  coverage: r.uint24,\n  type: r.uint8,\n  subFeatureFlags: r.uint32,\n  table: SubtableData,\n  padding: new r.Reserved(r.uint8, function (t) {\n    return t.length - t._currentOffset;\n  })\n});\nvar FeatureEntry = new r.Struct({\n  featureType: r.uint16,\n  featureSetting: r.uint16,\n  enableFlags: r.uint32,\n  disableFlags: r.uint32\n});\nvar MorxChain = new r.Struct({\n  defaultFlags: r.uint32,\n  chainLength: r.uint32,\n  nFeatureEntries: r.uint32,\n  nSubtables: r.uint32,\n  features: new r.Array(FeatureEntry, 'nFeatureEntries'),\n  subtables: new r.Array(Subtable, 'nSubtables')\n});\nvar morx = new r.Struct({\n  version: r.uint16,\n  unused: new r.Reserved(r.uint16),\n  nChains: r.uint32,\n  chains: new r.Array(MorxChain, 'nChains')\n});\nvar OpticalBounds = new r.Struct({\n  left: r.int16,\n  top: r.int16,\n  right: r.int16,\n  bottom: r.int16\n});\nvar opbd = new r.Struct({\n  version: r.fixed32,\n  format: r.uint16,\n  lookupTable: new LookupTable(OpticalBounds)\n});\nvar tables = {}; // Required Tables\n\ntables.cmap = cmap;\ntables.head = head;\ntables.hhea = hhea;\ntables.hmtx = hmtx;\ntables.maxp = maxp;\ntables.name = NameTable;\ntables['OS/2'] = OS2;\ntables.post = post; // TrueType Outlines\n\ntables.fpgm = fpgm;\ntables.loca = loca;\ntables.prep = prep;\ntables['cvt '] = cvt;\ntables.glyf = glyf; // PostScript Outlines\n\ntables['CFF '] = CFFFont;\ntables['CFF2'] = CFFFont;\ntables.VORG = VORG; // Bitmap Glyphs\n\ntables.EBLC = EBLC;\ntables.CBLC = tables.EBLC;\ntables.sbix = sbix;\ntables.COLR = COLR;\ntables.CPAL = CPAL; // Advanced OpenType Tables\n\ntables.BASE = BASE;\ntables.GDEF = GDEF;\ntables.GPOS = GPOS;\ntables.GSUB = GSUB;\ntables.JSTF = JSTF; // OpenType variations tables\n\ntables.HVAR = HVAR; // Other OpenType Tables\n\ntables.DSIG = DSIG;\ntables.gasp = gasp;\ntables.hdmx = hdmx;\ntables.kern = kern;\ntables.LTSH = LTSH;\ntables.PCLT = PCLT;\ntables.VDMX = VDMX;\ntables.vhea = vhea;\ntables.vmtx = vmtx; // Apple Advanced Typography Tables\n\ntables.avar = avar;\ntables.bsln = bsln;\ntables.feat = feat;\ntables.fvar = fvar;\ntables.gvar = gvar;\ntables.just = just;\ntables.morx = morx;\ntables.opbd = opbd;\nvar TableEntry = new r.Struct({\n  tag: new r.String(4),\n  checkSum: r.uint32,\n  offset: new r.Pointer(r.uint32, 'void', {\n    type: 'global'\n  }),\n  length: r.uint32\n});\nvar Directory = new r.Struct({\n  tag: new r.String(4),\n  numTables: r.uint16,\n  searchRange: r.uint16,\n  entrySelector: r.uint16,\n  rangeShift: r.uint16,\n  tables: new r.Array(TableEntry, 'numTables')\n});\n\nDirectory.process = function () {\n  var tables = {};\n\n  for (var _iterator = this.tables, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _getIterator(_iterator);;) {\n    var _ref;\n\n    if (_isArray) {\n      if (_i >= _iterator.length) break;\n      _ref = _iterator[_i++];\n    } else {\n      _i = _iterator.next();\n      if (_i.done) break;\n      _ref = _i.value;\n    }\n\n    var table = _ref;\n    tables[table.tag] = table;\n  }\n\n  this.tables = tables;\n};\n\nDirectory.preEncode = function (stream) {\n  var tables$$ = [];\n\n  for (var tag in this.tables) {\n    var table = this.tables[tag];\n\n    if (table) {\n      tables$$.push({\n        tag: tag,\n        checkSum: 0,\n        offset: new r.VoidPointer(tables[tag], table),\n        length: tables[tag].size(table)\n      });\n    }\n  }\n\n  this.tag = 'true';\n  this.numTables = tables$$.length;\n  this.tables = tables$$;\n  var maxExponentFor2 = Math.floor(Math.log(this.numTables) / Math.LN2);\n  var maxPowerOf2 = Math.pow(2, maxExponentFor2);\n  this.searchRange = maxPowerOf2 * 16;\n  this.entrySelector = Math.log(maxPowerOf2) / Math.LN2;\n  this.rangeShift = this.numTables * 16 - this.searchRange;\n};\n\nfunction binarySearch(arr, cmp) {\n  var min = 0;\n  var max = arr.length - 1;\n\n  while (min <= max) {\n    var mid = min + max >> 1;\n    var res = cmp(arr[mid]);\n\n    if (res < 0) {\n      max = mid - 1;\n    } else if (res > 0) {\n      min = mid + 1;\n    } else {\n      return mid;\n    }\n  }\n\n  return -1;\n}\n\nfunction range(index, end) {\n  var range = [];\n\n  while (index < end) {\n    range.push(index++);\n  }\n\n  return range;\n}\n\nvar _class$1;\n\nfunction _applyDecoratedDescriptor$1(target, property, decorators, descriptor, context) {\n  var desc = {};\n  Object['ke' + 'ys'](descriptor).forEach(function (key) {\n    desc[key] = descriptor[key];\n  });\n  desc.enumerable = !!desc.enumerable;\n  desc.configurable = !!desc.configurable;\n\n  if ('value' in desc || desc.initializer) {\n    desc.writable = true;\n  }\n\n  desc = decorators.slice().reverse().reduce(function (desc, decorator) {\n    return decorator(target, property, desc) || desc;\n  }, desc);\n\n  if (context && desc.initializer !== void 0) {\n    desc.value = desc.initializer ? desc.initializer.call(context) : void 0;\n    desc.initializer = undefined;\n  }\n\n  if (desc.initializer === void 0) {\n    Object['define' + 'Property'](target, property, desc);\n    desc = null;\n  }\n\n  return desc;\n} // iconv-lite is an optional dependency.\n\n\ntry {\n  var iconv = require('iconv-lite');\n} catch (err) {}\n\nvar CmapProcessor = (_class$1 = function () {\n  function CmapProcessor(cmapTable) {\n    _classCallCheck(this, CmapProcessor); // Attempt to find a Unicode cmap first\n\n\n    this.encoding = null;\n    this.cmap = this.findSubtable(cmapTable, [// 32-bit subtables\n    [3, 10], [0, 6], [0, 4], // 16-bit subtables\n    [3, 1], [0, 3], [0, 2], [0, 1], [0, 0]]); // If not unicode cmap was found, and iconv-lite is installed,\n    // take the first table with a supported encoding.\n\n    if (!this.cmap && iconv) {\n      for (var _iterator = cmapTable.tables, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _getIterator(_iterator);;) {\n        var _ref;\n\n        if (_isArray) {\n          if (_i >= _iterator.length) break;\n          _ref = _iterator[_i++];\n        } else {\n          _i = _iterator.next();\n          if (_i.done) break;\n          _ref = _i.value;\n        }\n\n        var cmap = _ref;\n        var encoding = getEncoding(cmap.platformID, cmap.encodingID, cmap.table.language - 1);\n\n        if (iconv.encodingExists(encoding)) {\n          this.cmap = cmap.table;\n          this.encoding = encoding;\n        }\n      }\n    }\n\n    if (!this.cmap) {\n      throw new Error(\"Could not find a supported cmap table\");\n    }\n\n    this.uvs = this.findSubtable(cmapTable, [[0, 5]]);\n\n    if (this.uvs && this.uvs.version !== 14) {\n      this.uvs = null;\n    }\n  }\n\n  CmapProcessor.prototype.findSubtable = function findSubtable(cmapTable, pairs) {\n    for (var _iterator2 = pairs, _isArray2 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray2 ? _iterator2 : _getIterator(_iterator2);;) {\n      var _ref2;\n\n      if (_isArray2) {\n        if (_i2 >= _iterator2.length) break;\n        _ref2 = _iterator2[_i2++];\n      } else {\n        _i2 = _iterator2.next();\n        if (_i2.done) break;\n        _ref2 = _i2.value;\n      }\n\n      var _ref3 = _ref2,\n          platformID = _ref3[0],\n          encodingID = _ref3[1];\n\n      for (var _iterator3 = cmapTable.tables, _isArray3 = Array.isArray(_iterator3), _i3 = 0, _iterator3 = _isArray3 ? _iterator3 : _getIterator(_iterator3);;) {\n        var _ref4;\n\n        if (_isArray3) {\n          if (_i3 >= _iterator3.length) break;\n          _ref4 = _iterator3[_i3++];\n        } else {\n          _i3 = _iterator3.next();\n          if (_i3.done) break;\n          _ref4 = _i3.value;\n        }\n\n        var cmap = _ref4;\n\n        if (cmap.platformID === platformID && cmap.encodingID === encodingID) {\n          return cmap.table;\n        }\n      }\n    }\n\n    return null;\n  };\n\n  CmapProcessor.prototype.lookup = function lookup(codepoint, variationSelector) {\n    // If there is no Unicode cmap in this font, we need to re-encode\n    // the codepoint in the encoding that the cmap supports.\n    if (this.encoding) {\n      var buf = iconv.encode(_String$fromCodePoint(codepoint), this.encoding);\n      codepoint = 0;\n\n      for (var i = 0; i < buf.length; i++) {\n        codepoint = codepoint << 8 | buf[i];\n      } // Otherwise, try to get a Unicode variation selector for this codepoint if one is provided.\n\n    } else if (variationSelector) {\n      var gid = this.getVariationSelector(codepoint, variationSelector);\n\n      if (gid) {\n        return gid;\n      }\n    }\n\n    var cmap = this.cmap;\n\n    switch (cmap.version) {\n      case 0:\n        return cmap.codeMap.get(codepoint) || 0;\n\n      case 4:\n        {\n          var min = 0;\n          var max = cmap.segCount - 1;\n\n          while (min <= max) {\n            var mid = min + max >> 1;\n\n            if (codepoint < cmap.startCode.get(mid)) {\n              max = mid - 1;\n            } else if (codepoint > cmap.endCode.get(mid)) {\n              min = mid + 1;\n            } else {\n              var rangeOffset = cmap.idRangeOffset.get(mid);\n\n              var _gid = void 0;\n\n              if (rangeOffset === 0) {\n                _gid = codepoint + cmap.idDelta.get(mid);\n              } else {\n                var index = rangeOffset / 2 + (codepoint - cmap.startCode.get(mid)) - (cmap.segCount - mid);\n                _gid = cmap.glyphIndexArray.get(index) || 0;\n\n                if (_gid !== 0) {\n                  _gid += cmap.idDelta.get(mid);\n                }\n              }\n\n              return _gid & 0xffff;\n            }\n          }\n\n          return 0;\n        }\n\n      case 8:\n        throw new Error('TODO: cmap format 8');\n\n      case 6:\n      case 10:\n        return cmap.glyphIndices.get(codepoint - cmap.firstCode) || 0;\n\n      case 12:\n      case 13:\n        {\n          var _min = 0;\n\n          var _max = cmap.nGroups - 1;\n\n          while (_min <= _max) {\n            var _mid = _min + _max >> 1;\n\n            var group = cmap.groups.get(_mid);\n\n            if (codepoint < group.startCharCode) {\n              _max = _mid - 1;\n            } else if (codepoint > group.endCharCode) {\n              _min = _mid + 1;\n            } else {\n              if (cmap.version === 12) {\n                return group.glyphID + (codepoint - group.startCharCode);\n              } else {\n                return group.glyphID;\n              }\n            }\n          }\n\n          return 0;\n        }\n\n      case 14:\n        throw new Error('TODO: cmap format 14');\n\n      default:\n        throw new Error('Unknown cmap format ' + cmap.version);\n    }\n  };\n\n  CmapProcessor.prototype.getVariationSelector = function getVariationSelector(codepoint, variationSelector) {\n    if (!this.uvs) {\n      return 0;\n    }\n\n    var selectors = this.uvs.varSelectors.toArray();\n    var i = binarySearch(selectors, function (x) {\n      return variationSelector - x.varSelector;\n    });\n    var sel = selectors[i];\n\n    if (i !== -1 && sel.defaultUVS) {\n      i = binarySearch(sel.defaultUVS, function (x) {\n        return codepoint < x.startUnicodeValue ? -1 : codepoint > x.startUnicodeValue + x.additionalCount ? +1 : 0;\n      });\n    }\n\n    if (i !== -1 && sel.nonDefaultUVS) {\n      i = binarySearch(sel.nonDefaultUVS, function (x) {\n        return codepoint - x.unicodeValue;\n      });\n\n      if (i !== -1) {\n        return sel.nonDefaultUVS[i].glyphID;\n      }\n    }\n\n    return 0;\n  };\n\n  CmapProcessor.prototype.getCharacterSet = function getCharacterSet() {\n    var cmap = this.cmap;\n\n    switch (cmap.version) {\n      case 0:\n        return range(0, cmap.codeMap.length);\n\n      case 4:\n        {\n          var res = [];\n          var endCodes = cmap.endCode.toArray();\n\n          for (var i = 0; i < endCodes.length; i++) {\n            var tail = endCodes[i] + 1;\n            var start = cmap.startCode.get(i);\n            res.push.apply(res, range(start, tail));\n          }\n\n          return res;\n        }\n\n      case 8:\n        throw new Error('TODO: cmap format 8');\n\n      case 6:\n      case 10:\n        return range(cmap.firstCode, cmap.firstCode + cmap.glyphIndices.length);\n\n      case 12:\n      case 13:\n        {\n          var _res = [];\n\n          for (var _iterator4 = cmap.groups.toArray(), _isArray4 = Array.isArray(_iterator4), _i4 = 0, _iterator4 = _isArray4 ? _iterator4 : _getIterator(_iterator4);;) {\n            var _ref5;\n\n            if (_isArray4) {\n              if (_i4 >= _iterator4.length) break;\n              _ref5 = _iterator4[_i4++];\n            } else {\n              _i4 = _iterator4.next();\n              if (_i4.done) break;\n              _ref5 = _i4.value;\n            }\n\n            var group = _ref5;\n\n            _res.push.apply(_res, range(group.startCharCode, group.endCharCode + 1));\n          }\n\n          return _res;\n        }\n\n      case 14:\n        throw new Error('TODO: cmap format 14');\n\n      default:\n        throw new Error('Unknown cmap format ' + cmap.version);\n    }\n  };\n\n  CmapProcessor.prototype.codePointsForGlyph = function codePointsForGlyph(gid) {\n    var cmap = this.cmap;\n\n    switch (cmap.version) {\n      case 0:\n        {\n          var res = [];\n\n          for (var i = 0; i < 256; i++) {\n            if (cmap.codeMap.get(i) === gid) {\n              res.push(i);\n            }\n          }\n\n          return res;\n        }\n\n      case 4:\n        {\n          var _res2 = [];\n\n          for (var _i5 = 0; _i5 < cmap.segCount; _i5++) {\n            var end = cmap.endCode.get(_i5);\n            var start = cmap.startCode.get(_i5);\n            var rangeOffset = cmap.idRangeOffset.get(_i5);\n            var delta = cmap.idDelta.get(_i5);\n\n            for (var c = start; c <= end; c++) {\n              var g = 0;\n\n              if (rangeOffset === 0) {\n                g = c + delta;\n              } else {\n                var index = rangeOffset / 2 + (c - start) - (cmap.segCount - _i5);\n                g = cmap.glyphIndexArray.get(index) || 0;\n\n                if (g !== 0) {\n                  g += delta;\n                }\n              }\n\n              if (g === gid) {\n                _res2.push(c);\n              }\n            }\n          }\n\n          return _res2;\n        }\n\n      case 12:\n        {\n          var _res3 = [];\n\n          for (var _iterator5 = cmap.groups.toArray(), _isArray5 = Array.isArray(_iterator5), _i6 = 0, _iterator5 = _isArray5 ? _iterator5 : _getIterator(_iterator5);;) {\n            var _ref6;\n\n            if (_isArray5) {\n              if (_i6 >= _iterator5.length) break;\n              _ref6 = _iterator5[_i6++];\n            } else {\n              _i6 = _iterator5.next();\n              if (_i6.done) break;\n              _ref6 = _i6.value;\n            }\n\n            var group = _ref6;\n\n            if (gid >= group.glyphID && gid <= group.glyphID + (group.endCharCode - group.startCharCode)) {\n              _res3.push(group.startCharCode + (gid - group.glyphID));\n            }\n          }\n\n          return _res3;\n        }\n\n      case 13:\n        {\n          var _res4 = [];\n\n          for (var _iterator6 = cmap.groups.toArray(), _isArray6 = Array.isArray(_iterator6), _i7 = 0, _iterator6 = _isArray6 ? _iterator6 : _getIterator(_iterator6);;) {\n            var _ref7;\n\n            if (_isArray6) {\n              if (_i7 >= _iterator6.length) break;\n              _ref7 = _iterator6[_i7++];\n            } else {\n              _i7 = _iterator6.next();\n              if (_i7.done) break;\n              _ref7 = _i7.value;\n            }\n\n            var _group = _ref7;\n\n            if (gid === _group.glyphID) {\n              _res4.push.apply(_res4, range(_group.startCharCode, _group.endCharCode + 1));\n            }\n          }\n\n          return _res4;\n        }\n\n      default:\n        throw new Error('Unknown cmap format ' + cmap.version);\n    }\n  };\n\n  return CmapProcessor;\n}(), (_applyDecoratedDescriptor$1(_class$1.prototype, 'getCharacterSet', [cache], _Object$getOwnPropertyDescriptor(_class$1.prototype, 'getCharacterSet'), _class$1.prototype), _applyDecoratedDescriptor$1(_class$1.prototype, 'codePointsForGlyph', [cache], _Object$getOwnPropertyDescriptor(_class$1.prototype, 'codePointsForGlyph'), _class$1.prototype)), _class$1);\n\nvar KernProcessor = function () {\n  function KernProcessor(font) {\n    _classCallCheck(this, KernProcessor);\n\n    this.kern = font.kern;\n  }\n\n  KernProcessor.prototype.process = function process(glyphs, positions) {\n    for (var glyphIndex = 0; glyphIndex < glyphs.length - 1; glyphIndex++) {\n      var left = glyphs[glyphIndex].id;\n      var right = glyphs[glyphIndex + 1].id;\n      positions[glyphIndex].xAdvance += this.getKerning(left, right);\n    }\n  };\n\n  KernProcessor.prototype.getKerning = function getKerning(left, right) {\n    var res = 0;\n\n    for (var _iterator = this.kern.tables, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _getIterator(_iterator);;) {\n      var _ref;\n\n      if (_isArray) {\n        if (_i >= _iterator.length) break;\n        _ref = _iterator[_i++];\n      } else {\n        _i = _iterator.next();\n        if (_i.done) break;\n        _ref = _i.value;\n      }\n\n      var table = _ref;\n\n      if (table.coverage.crossStream) {\n        continue;\n      }\n\n      switch (table.version) {\n        case 0:\n          if (!table.coverage.horizontal) {\n            continue;\n          }\n\n          break;\n\n        case 1:\n          if (table.coverage.vertical || table.coverage.variation) {\n            continue;\n          }\n\n          break;\n\n        default:\n          throw new Error('Unsupported kerning table version ' + table.version);\n      }\n\n      var val = 0;\n      var s = table.subtable;\n\n      switch (table.format) {\n        case 0:\n          var pairIdx = binarySearch(s.pairs, function (pair) {\n            return left - pair.left || right - pair.right;\n          });\n\n          if (pairIdx >= 0) {\n            val = s.pairs[pairIdx].value;\n          }\n\n          break;\n\n        case 2:\n          var leftOffset = 0,\n              rightOffset = 0;\n\n          if (left >= s.leftTable.firstGlyph && left < s.leftTable.firstGlyph + s.leftTable.nGlyphs) {\n            leftOffset = s.leftTable.offsets[left - s.leftTable.firstGlyph];\n          } else {\n            leftOffset = s.array.off;\n          }\n\n          if (right >= s.rightTable.firstGlyph && right < s.rightTable.firstGlyph + s.rightTable.nGlyphs) {\n            rightOffset = s.rightTable.offsets[right - s.rightTable.firstGlyph];\n          }\n\n          var index = (leftOffset + rightOffset - s.array.off) / 2;\n          val = s.array.values.get(index);\n          break;\n\n        case 3:\n          if (left >= s.glyphCount || right >= s.glyphCount) {\n            return 0;\n          }\n\n          val = s.kernValue[s.kernIndex[s.leftClass[left] * s.rightClassCount + s.rightClass[right]]];\n          break;\n\n        default:\n          throw new Error('Unsupported kerning sub-table format ' + table.format);\n      } // Microsoft supports the override flag, which resets the result\n      // Otherwise, the sum of the results from all subtables is returned\n\n\n      if (table.coverage.override) {\n        res = val;\n      } else {\n        res += val;\n      }\n    }\n\n    return res;\n  };\n\n  return KernProcessor;\n}();\n/**\n * This class is used when GPOS does not define 'mark' or 'mkmk' features\n * for positioning marks relative to base glyphs. It uses the unicode\n * combining class property to position marks.\n *\n * Based on code from Harfbuzz, thanks!\n * https://github.com/behdad/harfbuzz/blob/master/src/hb-ot-shape-fallback.cc\n */\n\n\nvar UnicodeLayoutEngine = function () {\n  function UnicodeLayoutEngine(font) {\n    _classCallCheck(this, UnicodeLayoutEngine);\n\n    this.font = font;\n  }\n\n  UnicodeLayoutEngine.prototype.positionGlyphs = function positionGlyphs(glyphs, positions) {\n    // find each base + mark cluster, and position the marks relative to the base\n    var clusterStart = 0;\n    var clusterEnd = 0;\n\n    for (var index = 0; index < glyphs.length; index++) {\n      var glyph = glyphs[index];\n\n      if (glyph.isMark) {\n        // TODO: handle ligatures\n        clusterEnd = index;\n      } else {\n        if (clusterStart !== clusterEnd) {\n          this.positionCluster(glyphs, positions, clusterStart, clusterEnd);\n        }\n\n        clusterStart = clusterEnd = index;\n      }\n    }\n\n    if (clusterStart !== clusterEnd) {\n      this.positionCluster(glyphs, positions, clusterStart, clusterEnd);\n    }\n\n    return positions;\n  };\n\n  UnicodeLayoutEngine.prototype.positionCluster = function positionCluster(glyphs, positions, clusterStart, clusterEnd) {\n    var base = glyphs[clusterStart];\n    var baseBox = base.cbox.copy(); // adjust bounding box for ligature glyphs\n\n    if (base.codePoints.length > 1) {\n      // LTR. TODO: RTL support.\n      baseBox.minX += (base.codePoints.length - 1) * baseBox.width / base.codePoints.length;\n    }\n\n    var xOffset = -positions[clusterStart].xAdvance;\n    var yOffset = 0;\n    var yGap = this.font.unitsPerEm / 16; // position each of the mark glyphs relative to the base glyph\n\n    for (var index = clusterStart + 1; index <= clusterEnd; index++) {\n      var mark = glyphs[index];\n      var markBox = mark.cbox;\n      var position = positions[index];\n      var combiningClass = this.getCombiningClass(mark.codePoints[0]);\n\n      if (combiningClass !== 'Not_Reordered') {\n        position.xOffset = position.yOffset = 0; // x positioning\n\n        switch (combiningClass) {\n          case 'Double_Above':\n          case 'Double_Below':\n            // LTR. TODO: RTL support.\n            position.xOffset += baseBox.minX - markBox.width / 2 - markBox.minX;\n            break;\n\n          case 'Attached_Below_Left':\n          case 'Below_Left':\n          case 'Above_Left':\n            // left align\n            position.xOffset += baseBox.minX - markBox.minX;\n            break;\n\n          case 'Attached_Above_Right':\n          case 'Below_Right':\n          case 'Above_Right':\n            // right align\n            position.xOffset += baseBox.maxX - markBox.width - markBox.minX;\n            break;\n\n          default:\n            // Attached_Below, Attached_Above, Below, Above, other\n            // center align\n            position.xOffset += baseBox.minX + (baseBox.width - markBox.width) / 2 - markBox.minX;\n        } // y positioning\n\n\n        switch (combiningClass) {\n          case 'Double_Below':\n          case 'Below_Left':\n          case 'Below':\n          case 'Below_Right':\n          case 'Attached_Below_Left':\n          case 'Attached_Below':\n            // add a small gap between the glyphs if they are not attached\n            if (combiningClass === 'Attached_Below_Left' || combiningClass === 'Attached_Below') {\n              baseBox.minY += yGap;\n            }\n\n            position.yOffset = -baseBox.minY - markBox.maxY;\n            baseBox.minY += markBox.height;\n            break;\n\n          case 'Double_Above':\n          case 'Above_Left':\n          case 'Above':\n          case 'Above_Right':\n          case 'Attached_Above':\n          case 'Attached_Above_Right':\n            // add a small gap between the glyphs if they are not attached\n            if (combiningClass === 'Attached_Above' || combiningClass === 'Attached_Above_Right') {\n              baseBox.maxY += yGap;\n            }\n\n            position.yOffset = baseBox.maxY - markBox.minY;\n            baseBox.maxY += markBox.height;\n            break;\n        }\n\n        position.xAdvance = position.yAdvance = 0;\n        position.xOffset += xOffset;\n        position.yOffset += yOffset;\n      } else {\n        xOffset -= position.xAdvance;\n        yOffset -= position.yAdvance;\n      }\n    }\n\n    return;\n  };\n\n  UnicodeLayoutEngine.prototype.getCombiningClass = function getCombiningClass(codePoint) {\n    var combiningClass = unicode.getCombiningClass(codePoint); // Thai / Lao need some per-character work\n\n    if ((codePoint & ~0xff) === 0x0e00) {\n      if (combiningClass === 'Not_Reordered') {\n        switch (codePoint) {\n          case 0x0e31:\n          case 0x0e34:\n          case 0x0e35:\n          case 0x0e36:\n          case 0x0e37:\n          case 0x0e47:\n          case 0x0e4c:\n          case 0x0e3d:\n          case 0x0e4e:\n            return 'Above_Right';\n\n          case 0x0eb1:\n          case 0x0eb4:\n          case 0x0eb5:\n          case 0x0eb6:\n          case 0x0eb7:\n          case 0x0ebb:\n          case 0x0ecc:\n          case 0x0ecd:\n            return 'Above';\n\n          case 0x0ebc:\n            return 'Below';\n        }\n      } else if (codePoint === 0x0e3a) {\n        // virama\n        return 'Below_Right';\n      }\n    }\n\n    switch (combiningClass) {\n      // Hebrew\n      case 'CCC10': // sheva\n\n      case 'CCC11': // hataf segol\n\n      case 'CCC12': // hataf patah\n\n      case 'CCC13': // hataf qamats\n\n      case 'CCC14': // hiriq\n\n      case 'CCC15': // tsere\n\n      case 'CCC16': // segol\n\n      case 'CCC17': // patah\n\n      case 'CCC18': // qamats\n\n      case 'CCC20': // qubuts\n\n      case 'CCC22':\n        // meteg\n        return 'Below';\n\n      case 'CCC23':\n        // rafe\n        return 'Attached_Above';\n\n      case 'CCC24':\n        // shin dot\n        return 'Above_Right';\n\n      case 'CCC25': // sin dot\n\n      case 'CCC19':\n        // holam\n        return 'Above_Left';\n\n      case 'CCC26':\n        // point varika\n        return 'Above';\n\n      case 'CCC21':\n        // dagesh\n        break;\n      // Arabic and Syriac\n\n      case 'CCC27': // fathatan\n\n      case 'CCC28': // dammatan\n\n      case 'CCC30': // fatha\n\n      case 'CCC31': // damma\n\n      case 'CCC33': // shadda\n\n      case 'CCC34': // sukun\n\n      case 'CCC35': // superscript alef\n\n      case 'CCC36':\n        // superscript alaph\n        return 'Above';\n\n      case 'CCC29': // kasratan\n\n      case 'CCC32':\n        // kasra\n        return 'Below';\n      // Thai\n\n      case 'CCC103':\n        // sara u / sara uu\n        return 'Below_Right';\n\n      case 'CCC107':\n        // mai\n        return 'Above_Right';\n      // Lao\n\n      case 'CCC118':\n        // sign u / sign uu\n        return 'Below';\n\n      case 'CCC122':\n        // mai\n        return 'Above';\n      // Tibetan\n\n      case 'CCC129': // sign aa\n\n      case 'CCC132':\n        // sign u\n        return 'Below';\n\n      case 'CCC130':\n        // sign i\n        return 'Above';\n    }\n\n    return combiningClass;\n  };\n\n  return UnicodeLayoutEngine;\n}();\n/**\n * Represents a glyph bounding box\n */\n\n\nvar BBox = function () {\n  function BBox() {\n    var minX = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : Infinity;\n    var minY = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : Infinity;\n    var maxX = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : -Infinity;\n    var maxY = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : -Infinity;\n\n    _classCallCheck(this, BBox);\n    /**\n     * The minimum X position in the bounding box\n     * @type {number}\n     */\n\n\n    this.minX = minX;\n    /**\n     * The minimum Y position in the bounding box\n     * @type {number}\n     */\n\n    this.minY = minY;\n    /**\n     * The maxmimum X position in the bounding box\n     * @type {number}\n     */\n\n    this.maxX = maxX;\n    /**\n     * The maxmimum Y position in the bounding box\n     * @type {number}\n     */\n\n    this.maxY = maxY;\n  }\n  /**\n   * The width of the bounding box\n   * @type {number}\n   */\n\n\n  BBox.prototype.addPoint = function addPoint(x, y) {\n    if (Math.abs(x) !== Infinity) {\n      if (x < this.minX) {\n        this.minX = x;\n      }\n\n      if (x > this.maxX) {\n        this.maxX = x;\n      }\n    }\n\n    if (Math.abs(y) !== Infinity) {\n      if (y < this.minY) {\n        this.minY = y;\n      }\n\n      if (y > this.maxY) {\n        this.maxY = y;\n      }\n    }\n  };\n\n  BBox.prototype.copy = function copy() {\n    return new BBox(this.minX, this.minY, this.maxX, this.maxY);\n  };\n\n  _createClass(BBox, [{\n    key: \"width\",\n    get: function get() {\n      return this.maxX - this.minX;\n    }\n    /**\n     * The height of the bounding box\n     * @type {number}\n     */\n\n  }, {\n    key: \"height\",\n    get: function get() {\n      return this.maxY - this.minY;\n    }\n  }]);\n\n  return BBox;\n}(); // This maps the Unicode Script property to an OpenType script tag\n// Data from http://www.microsoft.com/typography/otspec/scripttags.htm\n// and http://www.unicode.org/Public/UNIDATA/PropertyValueAliases.txt.\n\n\nvar UNICODE_SCRIPTS = {\n  Caucasian_Albanian: 'aghb',\n  Arabic: 'arab',\n  Imperial_Aramaic: 'armi',\n  Armenian: 'armn',\n  Avestan: 'avst',\n  Balinese: 'bali',\n  Bamum: 'bamu',\n  Bassa_Vah: 'bass',\n  Batak: 'batk',\n  Bengali: ['bng2', 'beng'],\n  Bopomofo: 'bopo',\n  Brahmi: 'brah',\n  Braille: 'brai',\n  Buginese: 'bugi',\n  Buhid: 'buhd',\n  Chakma: 'cakm',\n  Canadian_Aboriginal: 'cans',\n  Carian: 'cari',\n  Cham: 'cham',\n  Cherokee: 'cher',\n  Coptic: 'copt',\n  Cypriot: 'cprt',\n  Cyrillic: 'cyrl',\n  Devanagari: ['dev2', 'deva'],\n  Deseret: 'dsrt',\n  Duployan: 'dupl',\n  Egyptian_Hieroglyphs: 'egyp',\n  Elbasan: 'elba',\n  Ethiopic: 'ethi',\n  Georgian: 'geor',\n  Glagolitic: 'glag',\n  Gothic: 'goth',\n  Grantha: 'gran',\n  Greek: 'grek',\n  Gujarati: ['gjr2', 'gujr'],\n  Gurmukhi: ['gur2', 'guru'],\n  Hangul: 'hang',\n  Han: 'hani',\n  Hanunoo: 'hano',\n  Hebrew: 'hebr',\n  Hiragana: 'hira',\n  Pahawh_Hmong: 'hmng',\n  Katakana_Or_Hiragana: 'hrkt',\n  Old_Italic: 'ital',\n  Javanese: 'java',\n  Kayah_Li: 'kali',\n  Katakana: 'kana',\n  Kharoshthi: 'khar',\n  Khmer: 'khmr',\n  Khojki: 'khoj',\n  Kannada: ['knd2', 'knda'],\n  Kaithi: 'kthi',\n  Tai_Tham: 'lana',\n  Lao: 'lao ',\n  Latin: 'latn',\n  Lepcha: 'lepc',\n  Limbu: 'limb',\n  Linear_A: 'lina',\n  Linear_B: 'linb',\n  Lisu: 'lisu',\n  Lycian: 'lyci',\n  Lydian: 'lydi',\n  Mahajani: 'mahj',\n  Mandaic: 'mand',\n  Manichaean: 'mani',\n  Mende_Kikakui: 'mend',\n  Meroitic_Cursive: 'merc',\n  Meroitic_Hieroglyphs: 'mero',\n  Malayalam: ['mlm2', 'mlym'],\n  Modi: 'modi',\n  Mongolian: 'mong',\n  Mro: 'mroo',\n  Meetei_Mayek: 'mtei',\n  Myanmar: ['mym2', 'mymr'],\n  Old_North_Arabian: 'narb',\n  Nabataean: 'nbat',\n  Nko: 'nko ',\n  Ogham: 'ogam',\n  Ol_Chiki: 'olck',\n  Old_Turkic: 'orkh',\n  Oriya: ['ory2', 'orya'],\n  Osmanya: 'osma',\n  Palmyrene: 'palm',\n  Pau_Cin_Hau: 'pauc',\n  Old_Permic: 'perm',\n  Phags_Pa: 'phag',\n  Inscriptional_Pahlavi: 'phli',\n  Psalter_Pahlavi: 'phlp',\n  Phoenician: 'phnx',\n  Miao: 'plrd',\n  Inscriptional_Parthian: 'prti',\n  Rejang: 'rjng',\n  Runic: 'runr',\n  Samaritan: 'samr',\n  Old_South_Arabian: 'sarb',\n  Saurashtra: 'saur',\n  Shavian: 'shaw',\n  Sharada: 'shrd',\n  Siddham: 'sidd',\n  Khudawadi: 'sind',\n  Sinhala: 'sinh',\n  Sora_Sompeng: 'sora',\n  Sundanese: 'sund',\n  Syloti_Nagri: 'sylo',\n  Syriac: 'syrc',\n  Tagbanwa: 'tagb',\n  Takri: 'takr',\n  Tai_Le: 'tale',\n  New_Tai_Lue: 'talu',\n  Tamil: ['tml2', 'taml'],\n  Tai_Viet: 'tavt',\n  Telugu: ['tel2', 'telu'],\n  Tifinagh: 'tfng',\n  Tagalog: 'tglg',\n  Thaana: 'thaa',\n  Thai: 'thai',\n  Tibetan: 'tibt',\n  Tirhuta: 'tirh',\n  Ugaritic: 'ugar',\n  Vai: 'vai ',\n  Warang_Citi: 'wara',\n  Old_Persian: 'xpeo',\n  Cuneiform: 'xsux',\n  Yi: 'yi  ',\n  Inherited: 'zinh',\n  Common: 'zyyy',\n  Unknown: 'zzzz'\n};\nvar OPENTYPE_SCRIPTS = {};\n\nfor (var script in UNICODE_SCRIPTS) {\n  var tag = UNICODE_SCRIPTS[script];\n\n  if (Array.isArray(tag)) {\n    for (var _iterator = tag, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _getIterator(_iterator);;) {\n      var _ref;\n\n      if (_isArray) {\n        if (_i >= _iterator.length) break;\n        _ref = _iterator[_i++];\n      } else {\n        _i = _iterator.next();\n        if (_i.done) break;\n        _ref = _i.value;\n      }\n\n      var t = _ref;\n      OPENTYPE_SCRIPTS[t] = script;\n    }\n  } else {\n    OPENTYPE_SCRIPTS[tag] = script;\n  }\n}\n\nfunction fromOpenType(tag) {\n  return OPENTYPE_SCRIPTS[tag];\n}\n\nfunction forString(string) {\n  var len = string.length;\n  var idx = 0;\n\n  while (idx < len) {\n    var code = string.charCodeAt(idx++); // Check if this is a high surrogate\n\n    if (0xd800 <= code && code <= 0xdbff && idx < len) {\n      var next = string.charCodeAt(idx); // Check if this is a low surrogate\n\n      if (0xdc00 <= next && next <= 0xdfff) {\n        idx++;\n        code = ((code & 0x3FF) << 10) + (next & 0x3FF) + 0x10000;\n      }\n    }\n\n    var _script = unicode.getScript(code);\n\n    if (_script !== 'Common' && _script !== 'Inherited' && _script !== 'Unknown') {\n      return UNICODE_SCRIPTS[_script];\n    }\n  }\n\n  return UNICODE_SCRIPTS.Unknown;\n}\n\nfunction forCodePoints(codePoints) {\n  for (var i = 0; i < codePoints.length; i++) {\n    var codePoint = codePoints[i];\n\n    var _script2 = unicode.getScript(codePoint);\n\n    if (_script2 !== 'Common' && _script2 !== 'Inherited' && _script2 !== 'Unknown') {\n      return UNICODE_SCRIPTS[_script2];\n    }\n  }\n\n  return UNICODE_SCRIPTS.Unknown;\n} // The scripts in this map are written from right to left\n\n\nvar RTL = {\n  arab: true,\n  // Arabic\n  hebr: true,\n  // Hebrew\n  syrc: true,\n  // Syriac\n  thaa: true,\n  // Thaana\n  cprt: true,\n  // Cypriot Syllabary\n  khar: true,\n  // Kharosthi\n  phnx: true,\n  // Phoenician\n  'nko ': true,\n  // N'Ko\n  lydi: true,\n  // Lydian\n  avst: true,\n  // Avestan\n  armi: true,\n  // Imperial Aramaic\n  phli: true,\n  // Inscriptional Pahlavi\n  prti: true,\n  // Inscriptional Parthian\n  sarb: true,\n  // Old South Arabian\n  orkh: true,\n  // Old Turkic, Orkhon Runic\n  samr: true,\n  // Samaritan\n  mand: true,\n  // Mandaic, Mandaean\n  merc: true,\n  // Meroitic Cursive\n  mero: true,\n  // Meroitic Hieroglyphs\n  // Unicode 7.0 (not listed on http://www.microsoft.com/typography/otspec/scripttags.htm)\n  mani: true,\n  // Manichaean\n  mend: true,\n  // Mende Kikakui\n  nbat: true,\n  // Nabataean\n  narb: true,\n  // Old North Arabian\n  palm: true,\n  // Palmyrene\n  phlp: true // Psalter Pahlavi\n\n};\n\nfunction direction(script) {\n  if (RTL[script]) {\n    return 'rtl';\n  }\n\n  return 'ltr';\n}\n/**\n * Represents a run of Glyph and GlyphPosition objects.\n * Returned by the font layout method.\n */\n\n\nvar GlyphRun = function () {\n  function GlyphRun(glyphs, features, script, language, direction$$) {\n    _classCallCheck(this, GlyphRun);\n    /**\n     * An array of Glyph objects in the run\n     * @type {Glyph[]}\n     */\n\n\n    this.glyphs = glyphs;\n    /**\n     * An array of GlyphPosition objects for each glyph in the run\n     * @type {GlyphPosition[]}\n     */\n\n    this.positions = null;\n    /**\n     * The script that was requested for shaping. This was either passed in or detected automatically.\n     * @type {string}\n     */\n\n    this.script = script;\n    /**\n     * The language requested for shaping, as passed in. If `null`, the default language for the\n     * script was used.\n     * @type {string}\n     */\n\n    this.language = language || null;\n    /**\n     * The direction requested for shaping, as passed in (either ltr or rtl).\n     * If `null`, the default direction of the script is used.\n     * @type {string}\n     */\n\n    this.direction = direction$$ || direction(script);\n    /**\n     * The features requested during shaping. This is a combination of user\n     * specified features and features chosen by the shaper.\n     * @type {object}\n     */\n\n    this.features = {}; // Convert features to an object\n\n    if (Array.isArray(features)) {\n      for (var _iterator = features, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _getIterator(_iterator);;) {\n        var _ref;\n\n        if (_isArray) {\n          if (_i >= _iterator.length) break;\n          _ref = _iterator[_i++];\n        } else {\n          _i = _iterator.next();\n          if (_i.done) break;\n          _ref = _i.value;\n        }\n\n        var tag = _ref;\n        this.features[tag] = true;\n      }\n    } else if ((typeof features === 'undefined' ? 'undefined' : _typeof(features)) === 'object') {\n      this.features = features;\n    }\n  }\n  /**\n   * The total advance width of the run.\n   * @type {number}\n   */\n\n\n  _createClass(GlyphRun, [{\n    key: 'advanceWidth',\n    get: function get() {\n      var width = 0;\n\n      for (var _iterator2 = this.positions, _isArray2 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray2 ? _iterator2 : _getIterator(_iterator2);;) {\n        var _ref2;\n\n        if (_isArray2) {\n          if (_i2 >= _iterator2.length) break;\n          _ref2 = _iterator2[_i2++];\n        } else {\n          _i2 = _iterator2.next();\n          if (_i2.done) break;\n          _ref2 = _i2.value;\n        }\n\n        var position = _ref2;\n        width += position.xAdvance;\n      }\n\n      return width;\n    }\n    /**\n     * The total advance height of the run.\n     * @type {number}\n     */\n\n  }, {\n    key: 'advanceHeight',\n    get: function get() {\n      var height = 0;\n\n      for (var _iterator3 = this.positions, _isArray3 = Array.isArray(_iterator3), _i3 = 0, _iterator3 = _isArray3 ? _iterator3 : _getIterator(_iterator3);;) {\n        var _ref3;\n\n        if (_isArray3) {\n          if (_i3 >= _iterator3.length) break;\n          _ref3 = _iterator3[_i3++];\n        } else {\n          _i3 = _iterator3.next();\n          if (_i3.done) break;\n          _ref3 = _i3.value;\n        }\n\n        var position = _ref3;\n        height += position.yAdvance;\n      }\n\n      return height;\n    }\n    /**\n     * The bounding box containing all glyphs in the run.\n     * @type {BBox}\n     */\n\n  }, {\n    key: 'bbox',\n    get: function get() {\n      var bbox = new BBox();\n      var x = 0;\n      var y = 0;\n\n      for (var index = 0; index < this.glyphs.length; index++) {\n        var glyph = this.glyphs[index];\n        var p = this.positions[index];\n        var b = glyph.bbox;\n        bbox.addPoint(b.minX + x + p.xOffset, b.minY + y + p.yOffset);\n        bbox.addPoint(b.maxX + x + p.xOffset, b.maxY + y + p.yOffset);\n        x += p.xAdvance;\n        y += p.yAdvance;\n      }\n\n      return bbox;\n    }\n  }]);\n\n  return GlyphRun;\n}();\n/**\n * Represents positioning information for a glyph in a GlyphRun.\n */\n\n\nvar GlyphPosition = function GlyphPosition() {\n  var xAdvance = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n  var yAdvance = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  var xOffset = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n  var yOffset = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n\n  _classCallCheck(this, GlyphPosition);\n  /**\n   * The amount to move the virtual pen in the X direction after rendering this glyph.\n   * @type {number}\n   */\n\n\n  this.xAdvance = xAdvance;\n  /**\n   * The amount to move the virtual pen in the Y direction after rendering this glyph.\n   * @type {number}\n   */\n\n  this.yAdvance = yAdvance;\n  /**\n   * The offset from the pen position in the X direction at which to render this glyph.\n   * @type {number}\n   */\n\n  this.xOffset = xOffset;\n  /**\n   * The offset from the pen position in the Y direction at which to render this glyph.\n   * @type {number}\n   */\n\n  this.yOffset = yOffset;\n}; // see https://developer.apple.com/fonts/TrueType-Reference-Manual/RM09/AppendixF.html\n// and /System/Library/Frameworks/CoreText.framework/Versions/A/Headers/SFNTLayoutTypes.h on a Mac\n\n\nvar features = {\n  allTypographicFeatures: {\n    code: 0,\n    exclusive: false,\n    allTypeFeatures: 0\n  },\n  ligatures: {\n    code: 1,\n    exclusive: false,\n    requiredLigatures: 0,\n    commonLigatures: 2,\n    rareLigatures: 4,\n    // logos: 6\n    rebusPictures: 8,\n    diphthongLigatures: 10,\n    squaredLigatures: 12,\n    abbrevSquaredLigatures: 14,\n    symbolLigatures: 16,\n    contextualLigatures: 18,\n    historicalLigatures: 20\n  },\n  cursiveConnection: {\n    code: 2,\n    exclusive: true,\n    unconnected: 0,\n    partiallyConnected: 1,\n    cursive: 2\n  },\n  letterCase: {\n    code: 3,\n    exclusive: true\n  },\n  // upperAndLowerCase: 0          # deprecated\n  // allCaps: 1                    # deprecated\n  // allLowerCase: 2               # deprecated\n  // smallCaps: 3                  # deprecated\n  // initialCaps: 4                # deprecated\n  // initialCapsAndSmallCaps: 5    # deprecated\n  verticalSubstitution: {\n    code: 4,\n    exclusive: false,\n    substituteVerticalForms: 0\n  },\n  linguisticRearrangement: {\n    code: 5,\n    exclusive: false,\n    linguisticRearrangement: 0\n  },\n  numberSpacing: {\n    code: 6,\n    exclusive: true,\n    monospacedNumbers: 0,\n    proportionalNumbers: 1,\n    thirdWidthNumbers: 2,\n    quarterWidthNumbers: 3\n  },\n  smartSwash: {\n    code: 8,\n    exclusive: false,\n    wordInitialSwashes: 0,\n    wordFinalSwashes: 2,\n    // lineInitialSwashes: 4\n    // lineFinalSwashes: 6\n    nonFinalSwashes: 8\n  },\n  diacritics: {\n    code: 9,\n    exclusive: true,\n    showDiacritics: 0,\n    hideDiacritics: 1,\n    decomposeDiacritics: 2\n  },\n  verticalPosition: {\n    code: 10,\n    exclusive: true,\n    normalPosition: 0,\n    superiors: 1,\n    inferiors: 2,\n    ordinals: 3,\n    scientificInferiors: 4\n  },\n  fractions: {\n    code: 11,\n    exclusive: true,\n    noFractions: 0,\n    verticalFractions: 1,\n    diagonalFractions: 2\n  },\n  overlappingCharacters: {\n    code: 13,\n    exclusive: false,\n    preventOverlap: 0\n  },\n  typographicExtras: {\n    code: 14,\n    exclusive: false,\n    // hyphensToEmDash: 0\n    // hyphenToEnDash: 2\n    slashedZero: 4\n  },\n  // formInterrobang: 6\n  // smartQuotes: 8\n  // periodsToEllipsis: 10\n  mathematicalExtras: {\n    code: 15,\n    exclusive: false,\n    // hyphenToMinus: 0\n    // asteristoMultiply: 2\n    // slashToDivide: 4\n    // inequalityLigatures: 6\n    // exponents: 8\n    mathematicalGreek: 10\n  },\n  ornamentSets: {\n    code: 16,\n    exclusive: true,\n    noOrnaments: 0,\n    dingbats: 1,\n    piCharacters: 2,\n    fleurons: 3,\n    decorativeBorders: 4,\n    internationalSymbols: 5,\n    mathSymbols: 6\n  },\n  characterAlternatives: {\n    code: 17,\n    exclusive: true,\n    noAlternates: 0\n  },\n  // user defined options\n  designComplexity: {\n    code: 18,\n    exclusive: true,\n    designLevel1: 0,\n    designLevel2: 1,\n    designLevel3: 2,\n    designLevel4: 3,\n    designLevel5: 4\n  },\n  styleOptions: {\n    code: 19,\n    exclusive: true,\n    noStyleOptions: 0,\n    displayText: 1,\n    engravedText: 2,\n    illuminatedCaps: 3,\n    titlingCaps: 4,\n    tallCaps: 5\n  },\n  characterShape: {\n    code: 20,\n    exclusive: true,\n    traditionalCharacters: 0,\n    simplifiedCharacters: 1,\n    JIS1978Characters: 2,\n    JIS1983Characters: 3,\n    JIS1990Characters: 4,\n    traditionalAltOne: 5,\n    traditionalAltTwo: 6,\n    traditionalAltThree: 7,\n    traditionalAltFour: 8,\n    traditionalAltFive: 9,\n    expertCharacters: 10,\n    JIS2004Characters: 11,\n    hojoCharacters: 12,\n    NLCCharacters: 13,\n    traditionalNamesCharacters: 14\n  },\n  numberCase: {\n    code: 21,\n    exclusive: true,\n    lowerCaseNumbers: 0,\n    upperCaseNumbers: 1\n  },\n  textSpacing: {\n    code: 22,\n    exclusive: true,\n    proportionalText: 0,\n    monospacedText: 1,\n    halfWidthText: 2,\n    thirdWidthText: 3,\n    quarterWidthText: 4,\n    altProportionalText: 5,\n    altHalfWidthText: 6\n  },\n  transliteration: {\n    code: 23,\n    exclusive: true,\n    noTransliteration: 0\n  },\n  // hanjaToHangul: 1\n  // hiraganaToKatakana: 2\n  // katakanaToHiragana: 3\n  // kanaToRomanization: 4\n  // romanizationToHiragana: 5\n  // romanizationToKatakana: 6\n  // hanjaToHangulAltOne: 7\n  // hanjaToHangulAltTwo: 8\n  // hanjaToHangulAltThree: 9\n  annotation: {\n    code: 24,\n    exclusive: true,\n    noAnnotation: 0,\n    boxAnnotation: 1,\n    roundedBoxAnnotation: 2,\n    circleAnnotation: 3,\n    invertedCircleAnnotation: 4,\n    parenthesisAnnotation: 5,\n    periodAnnotation: 6,\n    romanNumeralAnnotation: 7,\n    diamondAnnotation: 8,\n    invertedBoxAnnotation: 9,\n    invertedRoundedBoxAnnotation: 10\n  },\n  kanaSpacing: {\n    code: 25,\n    exclusive: true,\n    fullWidthKana: 0,\n    proportionalKana: 1\n  },\n  ideographicSpacing: {\n    code: 26,\n    exclusive: true,\n    fullWidthIdeographs: 0,\n    proportionalIdeographs: 1,\n    halfWidthIdeographs: 2\n  },\n  unicodeDecomposition: {\n    code: 27,\n    exclusive: false,\n    canonicalComposition: 0,\n    compatibilityComposition: 2,\n    transcodingComposition: 4\n  },\n  rubyKana: {\n    code: 28,\n    exclusive: false,\n    // noRubyKana: 0     # deprecated - use rubyKanaOff instead\n    // rubyKana: 1     # deprecated - use rubyKanaOn instead\n    rubyKana: 2\n  },\n  CJKSymbolAlternatives: {\n    code: 29,\n    exclusive: true,\n    noCJKSymbolAlternatives: 0,\n    CJKSymbolAltOne: 1,\n    CJKSymbolAltTwo: 2,\n    CJKSymbolAltThree: 3,\n    CJKSymbolAltFour: 4,\n    CJKSymbolAltFive: 5\n  },\n  ideographicAlternatives: {\n    code: 30,\n    exclusive: true,\n    noIdeographicAlternatives: 0,\n    ideographicAltOne: 1,\n    ideographicAltTwo: 2,\n    ideographicAltThree: 3,\n    ideographicAltFour: 4,\n    ideographicAltFive: 5\n  },\n  CJKVerticalRomanPlacement: {\n    code: 31,\n    exclusive: true,\n    CJKVerticalRomanCentered: 0,\n    CJKVerticalRomanHBaseline: 1\n  },\n  italicCJKRoman: {\n    code: 32,\n    exclusive: false,\n    // noCJKItalicRoman: 0     # deprecated - use CJKItalicRomanOff instead\n    // CJKItalicRoman: 1     # deprecated - use CJKItalicRomanOn instead\n    CJKItalicRoman: 2\n  },\n  caseSensitiveLayout: {\n    code: 33,\n    exclusive: false,\n    caseSensitiveLayout: 0,\n    caseSensitiveSpacing: 2\n  },\n  alternateKana: {\n    code: 34,\n    exclusive: false,\n    alternateHorizKana: 0,\n    alternateVertKana: 2\n  },\n  stylisticAlternatives: {\n    code: 35,\n    exclusive: false,\n    noStylisticAlternates: 0,\n    stylisticAltOne: 2,\n    stylisticAltTwo: 4,\n    stylisticAltThree: 6,\n    stylisticAltFour: 8,\n    stylisticAltFive: 10,\n    stylisticAltSix: 12,\n    stylisticAltSeven: 14,\n    stylisticAltEight: 16,\n    stylisticAltNine: 18,\n    stylisticAltTen: 20,\n    stylisticAltEleven: 22,\n    stylisticAltTwelve: 24,\n    stylisticAltThirteen: 26,\n    stylisticAltFourteen: 28,\n    stylisticAltFifteen: 30,\n    stylisticAltSixteen: 32,\n    stylisticAltSeventeen: 34,\n    stylisticAltEighteen: 36,\n    stylisticAltNineteen: 38,\n    stylisticAltTwenty: 40\n  },\n  contextualAlternates: {\n    code: 36,\n    exclusive: false,\n    contextualAlternates: 0,\n    swashAlternates: 2,\n    contextualSwashAlternates: 4\n  },\n  lowerCase: {\n    code: 37,\n    exclusive: true,\n    defaultLowerCase: 0,\n    lowerCaseSmallCaps: 1,\n    lowerCasePetiteCaps: 2\n  },\n  upperCase: {\n    code: 38,\n    exclusive: true,\n    defaultUpperCase: 0,\n    upperCaseSmallCaps: 1,\n    upperCasePetiteCaps: 2\n  },\n  languageTag: {\n    // indices into ltag table\n    code: 39,\n    exclusive: true\n  },\n  CJKRomanSpacing: {\n    code: 103,\n    exclusive: true,\n    halfWidthCJKRoman: 0,\n    proportionalCJKRoman: 1,\n    defaultCJKRoman: 2,\n    fullWidthCJKRoman: 3\n  }\n};\n\nvar feature = function feature(name, selector) {\n  return [features[name].code, features[name][selector]];\n};\n\nvar OTMapping = {\n  rlig: feature('ligatures', 'requiredLigatures'),\n  clig: feature('ligatures', 'contextualLigatures'),\n  dlig: feature('ligatures', 'rareLigatures'),\n  hlig: feature('ligatures', 'historicalLigatures'),\n  liga: feature('ligatures', 'commonLigatures'),\n  hist: feature('ligatures', 'historicalLigatures'),\n  // ??\n  smcp: feature('lowerCase', 'lowerCaseSmallCaps'),\n  pcap: feature('lowerCase', 'lowerCasePetiteCaps'),\n  frac: feature('fractions', 'diagonalFractions'),\n  dnom: feature('fractions', 'diagonalFractions'),\n  // ??\n  numr: feature('fractions', 'diagonalFractions'),\n  // ??\n  afrc: feature('fractions', 'verticalFractions'),\n  // aalt\n  // abvf, abvm, abvs, akhn, blwf, blwm, blws, cfar, cjct, cpsp, falt, isol, jalt, ljmo, mset?\n  // ltra, ltrm, nukt, pref, pres, pstf, psts, rand, rkrf, rphf, rtla, rtlm, size, tjmo, tnum?\n  // unic, vatu, vhal, vjmo, vpal, vrt2\n  // dist -> trak table?\n  // kern, vkrn -> kern table\n  // lfbd + opbd + rtbd -> opbd table?\n  // mark, mkmk -> acnt table?\n  // locl -> languageTag + ltag table\n  case: feature('caseSensitiveLayout', 'caseSensitiveLayout'),\n  // also caseSensitiveSpacing\n  ccmp: feature('unicodeDecomposition', 'canonicalComposition'),\n  // compatibilityComposition?\n  cpct: feature('CJKVerticalRomanPlacement', 'CJKVerticalRomanCentered'),\n  // guess..., probably not given below\n  valt: feature('CJKVerticalRomanPlacement', 'CJKVerticalRomanCentered'),\n  swsh: feature('contextualAlternates', 'swashAlternates'),\n  cswh: feature('contextualAlternates', 'contextualSwashAlternates'),\n  curs: feature('cursiveConnection', 'cursive'),\n  // ??\n  c2pc: feature('upperCase', 'upperCasePetiteCaps'),\n  c2sc: feature('upperCase', 'upperCaseSmallCaps'),\n  init: feature('smartSwash', 'wordInitialSwashes'),\n  // ??\n  fin2: feature('smartSwash', 'wordFinalSwashes'),\n  // ??\n  medi: feature('smartSwash', 'nonFinalSwashes'),\n  // ??\n  med2: feature('smartSwash', 'nonFinalSwashes'),\n  // ??\n  fin3: feature('smartSwash', 'wordFinalSwashes'),\n  // ??\n  fina: feature('smartSwash', 'wordFinalSwashes'),\n  // ??\n  pkna: feature('kanaSpacing', 'proportionalKana'),\n  half: feature('textSpacing', 'halfWidthText'),\n  // also HalfWidthCJKRoman, HalfWidthIdeographs?\n  halt: feature('textSpacing', 'altHalfWidthText'),\n  hkna: feature('alternateKana', 'alternateHorizKana'),\n  vkna: feature('alternateKana', 'alternateVertKana'),\n  // hngl: feature 'transliteration', 'hanjaToHangulSelector' # deprecated\n  ital: feature('italicCJKRoman', 'CJKItalicRoman'),\n  lnum: feature('numberCase', 'upperCaseNumbers'),\n  onum: feature('numberCase', 'lowerCaseNumbers'),\n  mgrk: feature('mathematicalExtras', 'mathematicalGreek'),\n  // nalt: not enough info. what type of annotation?\n  // ornm: ditto, which ornament style?\n  calt: feature('contextualAlternates', 'contextualAlternates'),\n  // or more?\n  vrt2: feature('verticalSubstitution', 'substituteVerticalForms'),\n  // oh... below?\n  vert: feature('verticalSubstitution', 'substituteVerticalForms'),\n  tnum: feature('numberSpacing', 'monospacedNumbers'),\n  pnum: feature('numberSpacing', 'proportionalNumbers'),\n  sups: feature('verticalPosition', 'superiors'),\n  subs: feature('verticalPosition', 'inferiors'),\n  ordn: feature('verticalPosition', 'ordinals'),\n  pwid: feature('textSpacing', 'proportionalText'),\n  hwid: feature('textSpacing', 'halfWidthText'),\n  qwid: feature('textSpacing', 'quarterWidthText'),\n  // also QuarterWidthNumbers?\n  twid: feature('textSpacing', 'thirdWidthText'),\n  // also ThirdWidthNumbers?\n  fwid: feature('textSpacing', 'proportionalText'),\n  //??\n  palt: feature('textSpacing', 'altProportionalText'),\n  trad: feature('characterShape', 'traditionalCharacters'),\n  smpl: feature('characterShape', 'simplifiedCharacters'),\n  jp78: feature('characterShape', 'JIS1978Characters'),\n  jp83: feature('characterShape', 'JIS1983Characters'),\n  jp90: feature('characterShape', 'JIS1990Characters'),\n  jp04: feature('characterShape', 'JIS2004Characters'),\n  expt: feature('characterShape', 'expertCharacters'),\n  hojo: feature('characterShape', 'hojoCharacters'),\n  nlck: feature('characterShape', 'NLCCharacters'),\n  tnam: feature('characterShape', 'traditionalNamesCharacters'),\n  ruby: feature('rubyKana', 'rubyKana'),\n  titl: feature('styleOptions', 'titlingCaps'),\n  zero: feature('typographicExtras', 'slashedZero'),\n  ss01: feature('stylisticAlternatives', 'stylisticAltOne'),\n  ss02: feature('stylisticAlternatives', 'stylisticAltTwo'),\n  ss03: feature('stylisticAlternatives', 'stylisticAltThree'),\n  ss04: feature('stylisticAlternatives', 'stylisticAltFour'),\n  ss05: feature('stylisticAlternatives', 'stylisticAltFive'),\n  ss06: feature('stylisticAlternatives', 'stylisticAltSix'),\n  ss07: feature('stylisticAlternatives', 'stylisticAltSeven'),\n  ss08: feature('stylisticAlternatives', 'stylisticAltEight'),\n  ss09: feature('stylisticAlternatives', 'stylisticAltNine'),\n  ss10: feature('stylisticAlternatives', 'stylisticAltTen'),\n  ss11: feature('stylisticAlternatives', 'stylisticAltEleven'),\n  ss12: feature('stylisticAlternatives', 'stylisticAltTwelve'),\n  ss13: feature('stylisticAlternatives', 'stylisticAltThirteen'),\n  ss14: feature('stylisticAlternatives', 'stylisticAltFourteen'),\n  ss15: feature('stylisticAlternatives', 'stylisticAltFifteen'),\n  ss16: feature('stylisticAlternatives', 'stylisticAltSixteen'),\n  ss17: feature('stylisticAlternatives', 'stylisticAltSeventeen'),\n  ss18: feature('stylisticAlternatives', 'stylisticAltEighteen'),\n  ss19: feature('stylisticAlternatives', 'stylisticAltNineteen'),\n  ss20: feature('stylisticAlternatives', 'stylisticAltTwenty')\n}; // salt: feature 'stylisticAlternatives', 'stylisticAltOne' # hmm, which one to choose\n// Add cv01-cv99 features\n\nfor (var i = 1; i <= 99; i++) {\n  OTMapping['cv' + ('00' + i).slice(-2)] = [features.characterAlternatives.code, i];\n} // create inverse mapping\n\n\nvar AATMapping = {};\n\nfor (var ot in OTMapping) {\n  var aat = OTMapping[ot];\n\n  if (AATMapping[aat[0]] == null) {\n    AATMapping[aat[0]] = {};\n  }\n\n  AATMapping[aat[0]][aat[1]] = ot;\n} // Maps an array of OpenType features to AAT features\n// in the form of {featureType:{featureSetting:true}}\n\n\nfunction mapOTToAAT(features) {\n  var res = {};\n\n  for (var k in features) {\n    var r = void 0;\n\n    if (r = OTMapping[k]) {\n      if (res[r[0]] == null) {\n        res[r[0]] = {};\n      }\n\n      res[r[0]][r[1]] = features[k];\n    }\n  }\n\n  return res;\n} // Maps strings in a [featureType, featureSetting]\n// to their equivalent number codes\n\n\nfunction mapFeatureStrings(f) {\n  var type = f[0],\n      setting = f[1];\n\n  if (isNaN(type)) {\n    var typeCode = features[type] && features[type].code;\n  } else {\n    var typeCode = type;\n  }\n\n  if (isNaN(setting)) {\n    var settingCode = features[type] && features[type][setting];\n  } else {\n    var settingCode = setting;\n  }\n\n  return [typeCode, settingCode];\n} // Maps AAT features to an array of OpenType features\n// Supports both arrays in the form of [[featureType, featureSetting]]\n// and objects in the form of {featureType:{featureSetting:true}}\n// featureTypes and featureSettings can be either strings or number codes\n\n\nfunction mapAATToOT(features) {\n  var res = {};\n\n  if (Array.isArray(features)) {\n    for (var k = 0; k < features.length; k++) {\n      var r = void 0;\n      var f = mapFeatureStrings(features[k]);\n\n      if (r = AATMapping[f[0]] && AATMapping[f[0]][f[1]]) {\n        res[r] = true;\n      }\n    }\n  } else if ((typeof features === 'undefined' ? 'undefined' : _typeof(features)) === 'object') {\n    for (var type in features) {\n      var _feature = features[type];\n\n      for (var setting in _feature) {\n        var _r = void 0;\n\n        var _f = mapFeatureStrings([type, setting]);\n\n        if (_feature[setting] && (_r = AATMapping[_f[0]] && AATMapping[_f[0]][_f[1]])) {\n          res[_r] = true;\n        }\n      }\n    }\n  }\n\n  return _Object$keys(res);\n}\n\nvar _class$3;\n\nfunction _applyDecoratedDescriptor$3(target, property, decorators, descriptor, context) {\n  var desc = {};\n  Object['ke' + 'ys'](descriptor).forEach(function (key) {\n    desc[key] = descriptor[key];\n  });\n  desc.enumerable = !!desc.enumerable;\n  desc.configurable = !!desc.configurable;\n\n  if ('value' in desc || desc.initializer) {\n    desc.writable = true;\n  }\n\n  desc = decorators.slice().reverse().reduce(function (desc, decorator) {\n    return decorator(target, property, desc) || desc;\n  }, desc);\n\n  if (context && desc.initializer !== void 0) {\n    desc.value = desc.initializer ? desc.initializer.call(context) : void 0;\n    desc.initializer = undefined;\n  }\n\n  if (desc.initializer === void 0) {\n    Object['define' + 'Property'](target, property, desc);\n    desc = null;\n  }\n\n  return desc;\n}\n\nvar AATLookupTable = (_class$3 = function () {\n  function AATLookupTable(table) {\n    _classCallCheck(this, AATLookupTable);\n\n    this.table = table;\n  }\n\n  AATLookupTable.prototype.lookup = function lookup(glyph) {\n    switch (this.table.version) {\n      case 0:\n        // simple array format\n        return this.table.values.getItem(glyph);\n\n      case 2: // segment format\n\n      case 4:\n        {\n          var min = 0;\n          var max = this.table.binarySearchHeader.nUnits - 1;\n\n          while (min <= max) {\n            var mid = min + max >> 1;\n            var seg = this.table.segments[mid]; // special end of search value\n\n            if (seg.firstGlyph === 0xffff) {\n              return null;\n            }\n\n            if (glyph < seg.firstGlyph) {\n              max = mid - 1;\n            } else if (glyph > seg.lastGlyph) {\n              min = mid + 1;\n            } else {\n              if (this.table.version === 2) {\n                return seg.value;\n              } else {\n                return seg.values[glyph - seg.firstGlyph];\n              }\n            }\n          }\n\n          return null;\n        }\n\n      case 6:\n        {\n          // lookup single\n          var _min = 0;\n\n          var _max = this.table.binarySearchHeader.nUnits - 1;\n\n          while (_min <= _max) {\n            var mid = _min + _max >> 1;\n            var seg = this.table.segments[mid]; // special end of search value\n\n            if (seg.glyph === 0xffff) {\n              return null;\n            }\n\n            if (glyph < seg.glyph) {\n              _max = mid - 1;\n            } else if (glyph > seg.glyph) {\n              _min = mid + 1;\n            } else {\n              return seg.value;\n            }\n          }\n\n          return null;\n        }\n\n      case 8:\n        // lookup trimmed\n        return this.table.values[glyph - this.table.firstGlyph];\n\n      default:\n        throw new Error('Unknown lookup table format: ' + this.table.version);\n    }\n  };\n\n  AATLookupTable.prototype.glyphsForValue = function glyphsForValue(classValue) {\n    var res = [];\n\n    switch (this.table.version) {\n      case 2: // segment format\n\n      case 4:\n        {\n          for (var _iterator = this.table.segments, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _getIterator(_iterator);;) {\n            var _ref;\n\n            if (_isArray) {\n              if (_i >= _iterator.length) break;\n              _ref = _iterator[_i++];\n            } else {\n              _i = _iterator.next();\n              if (_i.done) break;\n              _ref = _i.value;\n            }\n\n            var segment = _ref;\n\n            if (this.table.version === 2 && segment.value === classValue) {\n              res.push.apply(res, range(segment.firstGlyph, segment.lastGlyph + 1));\n            } else {\n              for (var index = 0; index < segment.values.length; index++) {\n                if (segment.values[index] === classValue) {\n                  res.push(segment.firstGlyph + index);\n                }\n              }\n            }\n          }\n\n          break;\n        }\n\n      case 6:\n        {\n          // lookup single\n          for (var _iterator2 = this.table.segments, _isArray2 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray2 ? _iterator2 : _getIterator(_iterator2);;) {\n            var _ref2;\n\n            if (_isArray2) {\n              if (_i2 >= _iterator2.length) break;\n              _ref2 = _iterator2[_i2++];\n            } else {\n              _i2 = _iterator2.next();\n              if (_i2.done) break;\n              _ref2 = _i2.value;\n            }\n\n            var _segment = _ref2;\n\n            if (_segment.value === classValue) {\n              res.push(_segment.glyph);\n            }\n          }\n\n          break;\n        }\n\n      case 8:\n        {\n          // lookup trimmed\n          for (var i = 0; i < this.table.values.length; i++) {\n            if (this.table.values[i] === classValue) {\n              res.push(this.table.firstGlyph + i);\n            }\n          }\n\n          break;\n        }\n\n      default:\n        throw new Error('Unknown lookup table format: ' + this.table.version);\n    }\n\n    return res;\n  };\n\n  return AATLookupTable;\n}(), _applyDecoratedDescriptor$3(_class$3.prototype, 'glyphsForValue', [cache], _Object$getOwnPropertyDescriptor(_class$3.prototype, 'glyphsForValue'), _class$3.prototype), _class$3);\nvar START_OF_TEXT_STATE = 0;\nvar END_OF_TEXT_CLASS = 0;\nvar OUT_OF_BOUNDS_CLASS = 1;\nvar DELETED_GLYPH_CLASS = 2;\nvar DONT_ADVANCE = 0x4000;\n\nvar AATStateMachine = function () {\n  function AATStateMachine(stateTable) {\n    _classCallCheck(this, AATStateMachine);\n\n    this.stateTable = stateTable;\n    this.lookupTable = new AATLookupTable(stateTable.classTable);\n  }\n\n  AATStateMachine.prototype.process = function process(glyphs, reverse, processEntry) {\n    var currentState = START_OF_TEXT_STATE; // START_OF_LINE_STATE is used for kashida glyph insertions sometimes I think?\n\n    var index = reverse ? glyphs.length - 1 : 0;\n    var dir = reverse ? -1 : 1;\n\n    while (dir === 1 && index <= glyphs.length || dir === -1 && index >= -1) {\n      var glyph = null;\n      var classCode = OUT_OF_BOUNDS_CLASS;\n      var shouldAdvance = true;\n\n      if (index === glyphs.length || index === -1) {\n        classCode = END_OF_TEXT_CLASS;\n      } else {\n        glyph = glyphs[index];\n\n        if (glyph.id === 0xffff) {\n          // deleted glyph\n          classCode = DELETED_GLYPH_CLASS;\n        } else {\n          classCode = this.lookupTable.lookup(glyph.id);\n\n          if (classCode == null) {\n            classCode = OUT_OF_BOUNDS_CLASS;\n          }\n        }\n      }\n\n      var row = this.stateTable.stateArray.getItem(currentState);\n      var entryIndex = row[classCode];\n      var entry = this.stateTable.entryTable.getItem(entryIndex);\n\n      if (classCode !== END_OF_TEXT_CLASS && classCode !== DELETED_GLYPH_CLASS) {\n        processEntry(glyph, entry, index);\n        shouldAdvance = !(entry.flags & DONT_ADVANCE);\n      }\n\n      currentState = entry.newState;\n\n      if (shouldAdvance) {\n        index += dir;\n      }\n    }\n\n    return glyphs;\n  };\n  /**\n   * Performs a depth-first traversal of the glyph strings\n   * represented by the state machine.\n   */\n\n\n  AATStateMachine.prototype.traverse = function traverse(opts) {\n    var state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    var visited = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : new _Set();\n\n    if (visited.has(state)) {\n      return;\n    }\n\n    visited.add(state);\n    var _stateTable = this.stateTable,\n        nClasses = _stateTable.nClasses,\n        stateArray = _stateTable.stateArray,\n        entryTable = _stateTable.entryTable;\n    var row = stateArray.getItem(state); // Skip predefined classes\n\n    for (var classCode = 4; classCode < nClasses; classCode++) {\n      var entryIndex = row[classCode];\n      var entry = entryTable.getItem(entryIndex); // Try all glyphs in the class\n\n      for (var _iterator = this.lookupTable.glyphsForValue(classCode), _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _getIterator(_iterator);;) {\n        var _ref;\n\n        if (_isArray) {\n          if (_i >= _iterator.length) break;\n          _ref = _iterator[_i++];\n        } else {\n          _i = _iterator.next();\n          if (_i.done) break;\n          _ref = _i.value;\n        }\n\n        var glyph = _ref;\n\n        if (opts.enter) {\n          opts.enter(glyph, entry);\n        }\n\n        if (entry.newState !== 0) {\n          this.traverse(opts, entry.newState, visited);\n        }\n\n        if (opts.exit) {\n          opts.exit(glyph, entry);\n        }\n      }\n    }\n  };\n\n  return AATStateMachine;\n}();\n\nvar _class$2;\n\nfunction _applyDecoratedDescriptor$2(target, property, decorators, descriptor, context) {\n  var desc = {};\n  Object['ke' + 'ys'](descriptor).forEach(function (key) {\n    desc[key] = descriptor[key];\n  });\n  desc.enumerable = !!desc.enumerable;\n  desc.configurable = !!desc.configurable;\n\n  if ('value' in desc || desc.initializer) {\n    desc.writable = true;\n  }\n\n  desc = decorators.slice().reverse().reduce(function (desc, decorator) {\n    return decorator(target, property, desc) || desc;\n  }, desc);\n\n  if (context && desc.initializer !== void 0) {\n    desc.value = desc.initializer ? desc.initializer.call(context) : void 0;\n    desc.initializer = undefined;\n  }\n\n  if (desc.initializer === void 0) {\n    Object['define' + 'Property'](target, property, desc);\n    desc = null;\n  }\n\n  return desc;\n} // indic replacement flags\n\n\nvar MARK_FIRST = 0x8000;\nvar MARK_LAST = 0x2000;\nvar VERB = 0x000F; // contextual substitution and glyph insertion flag\n\nvar SET_MARK = 0x8000; // ligature entry flags\n\nvar SET_COMPONENT = 0x8000;\nvar PERFORM_ACTION = 0x2000; // ligature action masks\n\nvar LAST_MASK = 0x80000000;\nvar STORE_MASK = 0x40000000;\nvar OFFSET_MASK = 0x3FFFFFFF;\nvar REVERSE_DIRECTION = 0x400000;\nvar CURRENT_INSERT_BEFORE = 0x0800;\nvar MARKED_INSERT_BEFORE = 0x0400;\nvar CURRENT_INSERT_COUNT = 0x03E0;\nvar MARKED_INSERT_COUNT = 0x001F;\nvar AATMorxProcessor = (_class$2 = function () {\n  function AATMorxProcessor(font) {\n    _classCallCheck(this, AATMorxProcessor);\n\n    this.processIndicRearragement = this.processIndicRearragement.bind(this);\n    this.processContextualSubstitution = this.processContextualSubstitution.bind(this);\n    this.processLigature = this.processLigature.bind(this);\n    this.processNoncontextualSubstitutions = this.processNoncontextualSubstitutions.bind(this);\n    this.processGlyphInsertion = this.processGlyphInsertion.bind(this);\n    this.font = font;\n    this.morx = font.morx;\n    this.inputCache = null;\n  } // Processes an array of glyphs and applies the specified features\n  // Features should be in the form of {featureType:{featureSetting:boolean}}\n\n\n  AATMorxProcessor.prototype.process = function process(glyphs) {\n    var features = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    for (var _iterator = this.morx.chains, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _getIterator(_iterator);;) {\n      var _ref;\n\n      if (_isArray) {\n        if (_i >= _iterator.length) break;\n        _ref = _iterator[_i++];\n      } else {\n        _i = _iterator.next();\n        if (_i.done) break;\n        _ref = _i.value;\n      }\n\n      var chain = _ref;\n      var flags = chain.defaultFlags; // enable/disable the requested features\n\n      for (var _iterator2 = chain.features, _isArray2 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray2 ? _iterator2 : _getIterator(_iterator2);;) {\n        var _ref2;\n\n        if (_isArray2) {\n          if (_i2 >= _iterator2.length) break;\n          _ref2 = _iterator2[_i2++];\n        } else {\n          _i2 = _iterator2.next();\n          if (_i2.done) break;\n          _ref2 = _i2.value;\n        }\n\n        var feature = _ref2;\n        var f = void 0;\n\n        if (f = features[feature.featureType]) {\n          if (f[feature.featureSetting]) {\n            flags &= feature.disableFlags;\n            flags |= feature.enableFlags;\n          } else if (f[feature.featureSetting] === false) {\n            flags |= ~feature.disableFlags;\n            flags &= ~feature.enableFlags;\n          }\n        }\n      }\n\n      for (var _iterator3 = chain.subtables, _isArray3 = Array.isArray(_iterator3), _i3 = 0, _iterator3 = _isArray3 ? _iterator3 : _getIterator(_iterator3);;) {\n        var _ref3;\n\n        if (_isArray3) {\n          if (_i3 >= _iterator3.length) break;\n          _ref3 = _iterator3[_i3++];\n        } else {\n          _i3 = _iterator3.next();\n          if (_i3.done) break;\n          _ref3 = _i3.value;\n        }\n\n        var subtable = _ref3;\n\n        if (subtable.subFeatureFlags & flags) {\n          this.processSubtable(subtable, glyphs);\n        }\n      }\n    } // remove deleted glyphs\n\n\n    var index = glyphs.length - 1;\n\n    while (index >= 0) {\n      if (glyphs[index].id === 0xffff) {\n        glyphs.splice(index, 1);\n      }\n\n      index--;\n    }\n\n    return glyphs;\n  };\n\n  AATMorxProcessor.prototype.processSubtable = function processSubtable(subtable, glyphs) {\n    this.subtable = subtable;\n    this.glyphs = glyphs;\n\n    if (this.subtable.type === 4) {\n      this.processNoncontextualSubstitutions(this.subtable, this.glyphs);\n      return;\n    }\n\n    this.ligatureStack = [];\n    this.markedGlyph = null;\n    this.firstGlyph = null;\n    this.lastGlyph = null;\n    this.markedIndex = null;\n    var stateMachine = this.getStateMachine(subtable);\n    var process = this.getProcessor();\n    var reverse = !!(this.subtable.coverage & REVERSE_DIRECTION);\n    return stateMachine.process(this.glyphs, reverse, process);\n  };\n\n  AATMorxProcessor.prototype.getStateMachine = function getStateMachine(subtable) {\n    return new AATStateMachine(subtable.table.stateTable);\n  };\n\n  AATMorxProcessor.prototype.getProcessor = function getProcessor() {\n    switch (this.subtable.type) {\n      case 0:\n        return this.processIndicRearragement;\n\n      case 1:\n        return this.processContextualSubstitution;\n\n      case 2:\n        return this.processLigature;\n\n      case 4:\n        return this.processNoncontextualSubstitutions;\n\n      case 5:\n        return this.processGlyphInsertion;\n\n      default:\n        throw new Error('Invalid morx subtable type: ' + this.subtable.type);\n    }\n  };\n\n  AATMorxProcessor.prototype.processIndicRearragement = function processIndicRearragement(glyph, entry, index) {\n    if (entry.flags & MARK_FIRST) {\n      this.firstGlyph = index;\n    }\n\n    if (entry.flags & MARK_LAST) {\n      this.lastGlyph = index;\n    }\n\n    reorderGlyphs(this.glyphs, entry.flags & VERB, this.firstGlyph, this.lastGlyph);\n  };\n\n  AATMorxProcessor.prototype.processContextualSubstitution = function processContextualSubstitution(glyph, entry, index) {\n    var subsitutions = this.subtable.table.substitutionTable.items;\n\n    if (entry.markIndex !== 0xffff) {\n      var lookup = subsitutions.getItem(entry.markIndex);\n      var lookupTable = new AATLookupTable(lookup);\n      glyph = this.glyphs[this.markedGlyph];\n      var gid = lookupTable.lookup(glyph.id);\n\n      if (gid) {\n        this.glyphs[this.markedGlyph] = this.font.getGlyph(gid, glyph.codePoints);\n      }\n    }\n\n    if (entry.currentIndex !== 0xffff) {\n      var _lookup = subsitutions.getItem(entry.currentIndex);\n\n      var _lookupTable = new AATLookupTable(_lookup);\n\n      glyph = this.glyphs[index];\n\n      var gid = _lookupTable.lookup(glyph.id);\n\n      if (gid) {\n        this.glyphs[index] = this.font.getGlyph(gid, glyph.codePoints);\n      }\n    }\n\n    if (entry.flags & SET_MARK) {\n      this.markedGlyph = index;\n    }\n  };\n\n  AATMorxProcessor.prototype.processLigature = function processLigature(glyph, entry, index) {\n    if (entry.flags & SET_COMPONENT) {\n      this.ligatureStack.push(index);\n    }\n\n    if (entry.flags & PERFORM_ACTION) {\n      var _ligatureStack;\n\n      var actions = this.subtable.table.ligatureActions;\n      var components = this.subtable.table.components;\n      var ligatureList = this.subtable.table.ligatureList;\n      var actionIndex = entry.action;\n      var last = false;\n      var ligatureIndex = 0;\n      var codePoints = [];\n      var ligatureGlyphs = [];\n\n      while (!last) {\n        var _codePoints;\n\n        var componentGlyph = this.ligatureStack.pop();\n\n        (_codePoints = codePoints).unshift.apply(_codePoints, this.glyphs[componentGlyph].codePoints);\n\n        var action = actions.getItem(actionIndex++);\n        last = !!(action & LAST_MASK);\n        var store = !!(action & STORE_MASK);\n        var offset = (action & OFFSET_MASK) << 2 >> 2; // sign extend 30 to 32 bits\n\n        offset += this.glyphs[componentGlyph].id;\n        var component = components.getItem(offset);\n        ligatureIndex += component;\n\n        if (last || store) {\n          var ligatureEntry = ligatureList.getItem(ligatureIndex);\n          this.glyphs[componentGlyph] = this.font.getGlyph(ligatureEntry, codePoints);\n          ligatureGlyphs.push(componentGlyph);\n          ligatureIndex = 0;\n          codePoints = [];\n        } else {\n          this.glyphs[componentGlyph] = this.font.getGlyph(0xffff);\n        }\n      } // Put ligature glyph indexes back on the stack\n\n\n      (_ligatureStack = this.ligatureStack).push.apply(_ligatureStack, ligatureGlyphs);\n    }\n  };\n\n  AATMorxProcessor.prototype.processNoncontextualSubstitutions = function processNoncontextualSubstitutions(subtable, glyphs, index) {\n    var lookupTable = new AATLookupTable(subtable.table.lookupTable);\n\n    for (index = 0; index < glyphs.length; index++) {\n      var glyph = glyphs[index];\n\n      if (glyph.id !== 0xffff) {\n        var gid = lookupTable.lookup(glyph.id);\n\n        if (gid) {\n          // 0 means do nothing\n          glyphs[index] = this.font.getGlyph(gid, glyph.codePoints);\n        }\n      }\n    }\n  };\n\n  AATMorxProcessor.prototype._insertGlyphs = function _insertGlyphs(glyphIndex, insertionActionIndex, count, isBefore) {\n    var _glyphs;\n\n    var insertions = [];\n\n    while (count--) {\n      var gid = this.subtable.table.insertionActions.getItem(insertionActionIndex++);\n      insertions.push(this.font.getGlyph(gid));\n    }\n\n    if (!isBefore) {\n      glyphIndex++;\n    }\n\n    (_glyphs = this.glyphs).splice.apply(_glyphs, [glyphIndex, 0].concat(insertions));\n  };\n\n  AATMorxProcessor.prototype.processGlyphInsertion = function processGlyphInsertion(glyph, entry, index) {\n    if (entry.flags & SET_MARK) {\n      this.markedIndex = index;\n    }\n\n    if (entry.markedInsertIndex !== 0xffff) {\n      var count = (entry.flags & MARKED_INSERT_COUNT) >>> 5;\n      var isBefore = !!(entry.flags & MARKED_INSERT_BEFORE);\n\n      this._insertGlyphs(this.markedIndex, entry.markedInsertIndex, count, isBefore);\n    }\n\n    if (entry.currentInsertIndex !== 0xffff) {\n      var _count = (entry.flags & CURRENT_INSERT_COUNT) >>> 5;\n\n      var _isBefore = !!(entry.flags & CURRENT_INSERT_BEFORE);\n\n      this._insertGlyphs(index, entry.currentInsertIndex, _count, _isBefore);\n    }\n  };\n\n  AATMorxProcessor.prototype.getSupportedFeatures = function getSupportedFeatures() {\n    var features = [];\n\n    for (var _iterator4 = this.morx.chains, _isArray4 = Array.isArray(_iterator4), _i4 = 0, _iterator4 = _isArray4 ? _iterator4 : _getIterator(_iterator4);;) {\n      var _ref4;\n\n      if (_isArray4) {\n        if (_i4 >= _iterator4.length) break;\n        _ref4 = _iterator4[_i4++];\n      } else {\n        _i4 = _iterator4.next();\n        if (_i4.done) break;\n        _ref4 = _i4.value;\n      }\n\n      var chain = _ref4;\n\n      for (var _iterator5 = chain.features, _isArray5 = Array.isArray(_iterator5), _i5 = 0, _iterator5 = _isArray5 ? _iterator5 : _getIterator(_iterator5);;) {\n        var _ref5;\n\n        if (_isArray5) {\n          if (_i5 >= _iterator5.length) break;\n          _ref5 = _iterator5[_i5++];\n        } else {\n          _i5 = _iterator5.next();\n          if (_i5.done) break;\n          _ref5 = _i5.value;\n        }\n\n        var feature = _ref5;\n        features.push([feature.featureType, feature.featureSetting]);\n      }\n    }\n\n    return features;\n  };\n\n  AATMorxProcessor.prototype.generateInputs = function generateInputs(gid) {\n    if (!this.inputCache) {\n      this.generateInputCache();\n    }\n\n    return this.inputCache[gid] || [];\n  };\n\n  AATMorxProcessor.prototype.generateInputCache = function generateInputCache() {\n    this.inputCache = {};\n\n    for (var _iterator6 = this.morx.chains, _isArray6 = Array.isArray(_iterator6), _i6 = 0, _iterator6 = _isArray6 ? _iterator6 : _getIterator(_iterator6);;) {\n      var _ref6;\n\n      if (_isArray6) {\n        if (_i6 >= _iterator6.length) break;\n        _ref6 = _iterator6[_i6++];\n      } else {\n        _i6 = _iterator6.next();\n        if (_i6.done) break;\n        _ref6 = _i6.value;\n      }\n\n      var chain = _ref6;\n      var flags = chain.defaultFlags;\n\n      for (var _iterator7 = chain.subtables, _isArray7 = Array.isArray(_iterator7), _i7 = 0, _iterator7 = _isArray7 ? _iterator7 : _getIterator(_iterator7);;) {\n        var _ref7;\n\n        if (_isArray7) {\n          if (_i7 >= _iterator7.length) break;\n          _ref7 = _iterator7[_i7++];\n        } else {\n          _i7 = _iterator7.next();\n          if (_i7.done) break;\n          _ref7 = _i7.value;\n        }\n\n        var subtable = _ref7;\n\n        if (subtable.subFeatureFlags & flags) {\n          this.generateInputsForSubtable(subtable);\n        }\n      }\n    }\n  };\n\n  AATMorxProcessor.prototype.generateInputsForSubtable = function generateInputsForSubtable(subtable) {\n    var _this = this; // Currently, only supporting ligature subtables.\n\n\n    if (subtable.type !== 2) {\n      return;\n    }\n\n    var reverse = !!(subtable.coverage & REVERSE_DIRECTION);\n\n    if (reverse) {\n      throw new Error('Reverse subtable, not supported.');\n    }\n\n    this.subtable = subtable;\n    this.ligatureStack = [];\n    var stateMachine = this.getStateMachine(subtable);\n    var process = this.getProcessor();\n    var input = [];\n    var stack = [];\n    this.glyphs = [];\n    stateMachine.traverse({\n      enter: function enter(glyph, entry) {\n        var glyphs = _this.glyphs;\n        stack.push({\n          glyphs: glyphs.slice(),\n          ligatureStack: _this.ligatureStack.slice()\n        }); // Add glyph to input and glyphs to process.\n\n        var g = _this.font.getGlyph(glyph);\n\n        input.push(g);\n        glyphs.push(input[input.length - 1]); // Process ligature substitution\n\n        process(glyphs[glyphs.length - 1], entry, glyphs.length - 1); // Add input to result if only one matching (non-deleted) glyph remains.\n\n        var count = 0;\n        var found = 0;\n\n        for (var i = 0; i < glyphs.length && count <= 1; i++) {\n          if (glyphs[i].id !== 0xffff) {\n            count++;\n            found = glyphs[i].id;\n          }\n        }\n\n        if (count === 1) {\n          var result = input.map(function (g) {\n            return g.id;\n          });\n          var _cache = _this.inputCache[found];\n\n          if (_cache) {\n            _cache.push(result);\n          } else {\n            _this.inputCache[found] = [result];\n          }\n        }\n      },\n      exit: function exit() {\n        var _stack$pop = stack.pop();\n\n        _this.glyphs = _stack$pop.glyphs;\n        _this.ligatureStack = _stack$pop.ligatureStack;\n        input.pop();\n      }\n    });\n  };\n\n  return AATMorxProcessor;\n}(), _applyDecoratedDescriptor$2(_class$2.prototype, 'getStateMachine', [cache], _Object$getOwnPropertyDescriptor(_class$2.prototype, 'getStateMachine'), _class$2.prototype), _class$2);\n\nfunction swap(glyphs, rangeA, rangeB) {\n  var reverseA = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n  var reverseB = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;\n  var end = glyphs.splice(rangeB[0] - (rangeB[1] - 1), rangeB[1]);\n\n  if (reverseB) {\n    end.reverse();\n  }\n\n  var start = glyphs.splice.apply(glyphs, [rangeA[0], rangeA[1]].concat(end));\n\n  if (reverseA) {\n    start.reverse();\n  }\n\n  glyphs.splice.apply(glyphs, [rangeB[0] - (rangeA[1] - 1), 0].concat(start));\n  return glyphs;\n}\n\nfunction reorderGlyphs(glyphs, verb, firstGlyph, lastGlyph) {\n  var length = lastGlyph - firstGlyph + 1;\n\n  switch (verb) {\n    case 0:\n      // no change\n      return glyphs;\n\n    case 1:\n      // Ax => xA\n      return swap(glyphs, [firstGlyph, 1], [lastGlyph, 0]);\n\n    case 2:\n      // xD => Dx\n      return swap(glyphs, [firstGlyph, 0], [lastGlyph, 1]);\n\n    case 3:\n      // AxD => DxA\n      return swap(glyphs, [firstGlyph, 1], [lastGlyph, 1]);\n\n    case 4:\n      // ABx => xAB\n      return swap(glyphs, [firstGlyph, 2], [lastGlyph, 0]);\n\n    case 5:\n      // ABx => xBA\n      return swap(glyphs, [firstGlyph, 2], [lastGlyph, 0], true, false);\n\n    case 6:\n      // xCD => CDx\n      return swap(glyphs, [firstGlyph, 0], [lastGlyph, 2]);\n\n    case 7:\n      // xCD => DCx\n      return swap(glyphs, [firstGlyph, 0], [lastGlyph, 2], false, true);\n\n    case 8:\n      // AxCD => CDxA\n      return swap(glyphs, [firstGlyph, 1], [lastGlyph, 2]);\n\n    case 9:\n      // AxCD => DCxA\n      return swap(glyphs, [firstGlyph, 1], [lastGlyph, 2], false, true);\n\n    case 10:\n      // ABxD => DxAB\n      return swap(glyphs, [firstGlyph, 2], [lastGlyph, 1]);\n\n    case 11:\n      // ABxD => DxBA\n      return swap(glyphs, [firstGlyph, 2], [lastGlyph, 1], true, false);\n\n    case 12:\n      // ABxCD => CDxAB\n      return swap(glyphs, [firstGlyph, 2], [lastGlyph, 2]);\n\n    case 13:\n      // ABxCD => CDxBA\n      return swap(glyphs, [firstGlyph, 2], [lastGlyph, 2], true, false);\n\n    case 14:\n      // ABxCD => DCxAB\n      return swap(glyphs, [firstGlyph, 2], [lastGlyph, 2], false, true);\n\n    case 15:\n      // ABxCD => DCxBA\n      return swap(glyphs, [firstGlyph, 2], [lastGlyph, 2], true, true);\n\n    default:\n      throw new Error('Unknown verb: ' + verb);\n  }\n}\n\nvar AATLayoutEngine = function () {\n  function AATLayoutEngine(font) {\n    _classCallCheck(this, AATLayoutEngine);\n\n    this.font = font;\n    this.morxProcessor = new AATMorxProcessor(font);\n    this.fallbackPosition = false;\n  }\n\n  AATLayoutEngine.prototype.substitute = function substitute(glyphRun) {\n    // AAT expects the glyphs to be in visual order prior to morx processing,\n    // so reverse the glyphs if the script is right-to-left.\n    if (glyphRun.direction === 'rtl') {\n      glyphRun.glyphs.reverse();\n    }\n\n    this.morxProcessor.process(glyphRun.glyphs, mapOTToAAT(glyphRun.features));\n  };\n\n  AATLayoutEngine.prototype.getAvailableFeatures = function getAvailableFeatures(script, language) {\n    return mapAATToOT(this.morxProcessor.getSupportedFeatures());\n  };\n\n  AATLayoutEngine.prototype.stringsForGlyph = function stringsForGlyph(gid) {\n    var glyphStrings = this.morxProcessor.generateInputs(gid);\n    var result = new _Set();\n\n    for (var _iterator = glyphStrings, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _getIterator(_iterator);;) {\n      var _ref;\n\n      if (_isArray) {\n        if (_i >= _iterator.length) break;\n        _ref = _iterator[_i++];\n      } else {\n        _i = _iterator.next();\n        if (_i.done) break;\n        _ref = _i.value;\n      }\n\n      var glyphs = _ref;\n\n      this._addStrings(glyphs, 0, result, '');\n    }\n\n    return result;\n  };\n\n  AATLayoutEngine.prototype._addStrings = function _addStrings(glyphs, index, strings, string) {\n    var codePoints = this.font._cmapProcessor.codePointsForGlyph(glyphs[index]);\n\n    for (var _iterator2 = codePoints, _isArray2 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray2 ? _iterator2 : _getIterator(_iterator2);;) {\n      var _ref2;\n\n      if (_isArray2) {\n        if (_i2 >= _iterator2.length) break;\n        _ref2 = _iterator2[_i2++];\n      } else {\n        _i2 = _iterator2.next();\n        if (_i2.done) break;\n        _ref2 = _i2.value;\n      }\n\n      var codePoint = _ref2;\n\n      var s = string + _String$fromCodePoint(codePoint);\n\n      if (index < glyphs.length - 1) {\n        this._addStrings(glyphs, index + 1, strings, s);\n      } else {\n        strings.add(s);\n      }\n    }\n  };\n\n  return AATLayoutEngine;\n}();\n/**\n * ShapingPlans are used by the OpenType shapers to store which\n * features should by applied, and in what order to apply them.\n * The features are applied in groups called stages. A feature\n * can be applied globally to all glyphs, or locally to only\n * specific glyphs.\n *\n * @private\n */\n\n\nvar ShapingPlan = function () {\n  function ShapingPlan(font, script, direction) {\n    _classCallCheck(this, ShapingPlan);\n\n    this.font = font;\n    this.script = script;\n    this.direction = direction;\n    this.stages = [];\n    this.globalFeatures = {};\n    this.allFeatures = {};\n  }\n  /**\n   * Adds the given features to the last stage.\n   * Ignores features that have already been applied.\n   */\n\n\n  ShapingPlan.prototype._addFeatures = function _addFeatures(features, global) {\n    var stageIndex = this.stages.length - 1;\n    var stage = this.stages[stageIndex];\n\n    for (var _iterator = features, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _getIterator(_iterator);;) {\n      var _ref;\n\n      if (_isArray) {\n        if (_i >= _iterator.length) break;\n        _ref = _iterator[_i++];\n      } else {\n        _i = _iterator.next();\n        if (_i.done) break;\n        _ref = _i.value;\n      }\n\n      var feature = _ref;\n\n      if (this.allFeatures[feature] == null) {\n        stage.push(feature);\n        this.allFeatures[feature] = stageIndex;\n\n        if (global) {\n          this.globalFeatures[feature] = true;\n        }\n      }\n    }\n  };\n  /**\n   * Add features to the last stage\n   */\n\n\n  ShapingPlan.prototype.add = function add(arg) {\n    var global = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n\n    if (this.stages.length === 0) {\n      this.stages.push([]);\n    }\n\n    if (typeof arg === 'string') {\n      arg = [arg];\n    }\n\n    if (Array.isArray(arg)) {\n      this._addFeatures(arg, global);\n    } else if ((typeof arg === 'undefined' ? 'undefined' : _typeof(arg)) === 'object') {\n      this._addFeatures(arg.global || [], true);\n\n      this._addFeatures(arg.local || [], false);\n    } else {\n      throw new Error(\"Unsupported argument to ShapingPlan#add\");\n    }\n  };\n  /**\n   * Add a new stage\n   */\n\n\n  ShapingPlan.prototype.addStage = function addStage(arg, global) {\n    if (typeof arg === 'function') {\n      this.stages.push(arg, []);\n    } else {\n      this.stages.push([]);\n      this.add(arg, global);\n    }\n  };\n\n  ShapingPlan.prototype.setFeatureOverrides = function setFeatureOverrides(features) {\n    if (Array.isArray(features)) {\n      this.add(features);\n    } else if ((typeof features === 'undefined' ? 'undefined' : _typeof(features)) === 'object') {\n      for (var tag in features) {\n        if (features[tag]) {\n          this.add(tag);\n        } else if (this.allFeatures[tag] != null) {\n          var stage = this.stages[this.allFeatures[tag]];\n          stage.splice(stage.indexOf(tag), 1);\n          delete this.allFeatures[tag];\n          delete this.globalFeatures[tag];\n        }\n      }\n    }\n  };\n  /**\n   * Assigns the global features to the given glyphs\n   */\n\n\n  ShapingPlan.prototype.assignGlobalFeatures = function assignGlobalFeatures(glyphs) {\n    for (var _iterator2 = glyphs, _isArray2 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray2 ? _iterator2 : _getIterator(_iterator2);;) {\n      var _ref2;\n\n      if (_isArray2) {\n        if (_i2 >= _iterator2.length) break;\n        _ref2 = _iterator2[_i2++];\n      } else {\n        _i2 = _iterator2.next();\n        if (_i2.done) break;\n        _ref2 = _i2.value;\n      }\n\n      var glyph = _ref2;\n\n      for (var feature in this.globalFeatures) {\n        glyph.features[feature] = true;\n      }\n    }\n  };\n  /**\n   * Executes the planned stages using the given OTProcessor\n   */\n\n\n  ShapingPlan.prototype.process = function process(processor, glyphs, positions) {\n    for (var _iterator3 = this.stages, _isArray3 = Array.isArray(_iterator3), _i3 = 0, _iterator3 = _isArray3 ? _iterator3 : _getIterator(_iterator3);;) {\n      var _ref3;\n\n      if (_isArray3) {\n        if (_i3 >= _iterator3.length) break;\n        _ref3 = _iterator3[_i3++];\n      } else {\n        _i3 = _iterator3.next();\n        if (_i3.done) break;\n        _ref3 = _i3.value;\n      }\n\n      var stage = _ref3;\n\n      if (typeof stage === 'function') {\n        if (!positions) {\n          stage(this.font, glyphs, this);\n        }\n      } else if (stage.length > 0) {\n        processor.applyFeatures(stage, glyphs, positions);\n      }\n    }\n  };\n\n  return ShapingPlan;\n}();\n\nvar _class$4;\n\nvar _temp;\n\nvar VARIATION_FEATURES = ['rvrn'];\nvar COMMON_FEATURES = ['ccmp', 'locl', 'rlig', 'mark', 'mkmk'];\nvar FRACTIONAL_FEATURES = ['frac', 'numr', 'dnom'];\nvar HORIZONTAL_FEATURES = ['calt', 'clig', 'liga', 'rclt', 'curs', 'kern'];\nvar DIRECTIONAL_FEATURES = {\n  ltr: ['ltra', 'ltrm'],\n  rtl: ['rtla', 'rtlm']\n};\nvar DefaultShaper = (_temp = _class$4 = function () {\n  function DefaultShaper() {\n    _classCallCheck(this, DefaultShaper);\n  }\n\n  DefaultShaper.plan = function plan(_plan, glyphs, features) {\n    // Plan the features we want to apply\n    this.planPreprocessing(_plan);\n    this.planFeatures(_plan);\n    this.planPostprocessing(_plan, features); // Assign the global features to all the glyphs\n\n    _plan.assignGlobalFeatures(glyphs); // Assign local features to glyphs\n\n\n    this.assignFeatures(_plan, glyphs);\n  };\n\n  DefaultShaper.planPreprocessing = function planPreprocessing(plan) {\n    plan.add({\n      global: [].concat(VARIATION_FEATURES, DIRECTIONAL_FEATURES[plan.direction]),\n      local: FRACTIONAL_FEATURES\n    });\n  };\n\n  DefaultShaper.planFeatures = function planFeatures(plan) {// Do nothing by default. Let subclasses override this.\n  };\n\n  DefaultShaper.planPostprocessing = function planPostprocessing(plan, userFeatures) {\n    plan.add([].concat(COMMON_FEATURES, HORIZONTAL_FEATURES));\n    plan.setFeatureOverrides(userFeatures);\n  };\n\n  DefaultShaper.assignFeatures = function assignFeatures(plan, glyphs) {\n    // Enable contextual fractions\n    for (var i = 0; i < glyphs.length; i++) {\n      var glyph = glyphs[i];\n\n      if (glyph.codePoints[0] === 0x2044) {\n        // fraction slash\n        var start = i;\n        var end = i + 1; // Apply numerator\n\n        while (start > 0 && unicode.isDigit(glyphs[start - 1].codePoints[0])) {\n          glyphs[start - 1].features.numr = true;\n          glyphs[start - 1].features.frac = true;\n          start--;\n        } // Apply denominator\n\n\n        while (end < glyphs.length && unicode.isDigit(glyphs[end].codePoints[0])) {\n          glyphs[end].features.dnom = true;\n          glyphs[end].features.frac = true;\n          end++;\n        } // Apply fraction slash\n\n\n        glyph.features.frac = true;\n        i = end - 1;\n      }\n    }\n  };\n\n  return DefaultShaper;\n}(), _class$4.zeroMarkWidths = 'AFTER_GPOS', _temp);\nvar trie = new UnicodeTrie(Buffer(\"AAHwAAAAAAAAADgAAf0BAv7tmi1MxDAUx7vtvjhAgcDgkEgEAnmXEBIMCYaEcygEiqBQ4FAkCE4ikUgMiiBJSAgSiUQSDMn9L9eSl6bddddug9t7yS/trevre+3r27pcNxZiG+yCfdCVv/9LeQxOwRm4AJegD27ALbgD9+ABPJF+z+BN/h7yDj5k/VOWX6SdmU5+wLWknggxDxaS8u0qiiX4uiz9XamQ3wzDMAzDMAzDMAzDVI/h959V/v7BMAzDMAzDMLlyNTNiMSdewVxbiA44B4/guz1qW58VYlMI0WsJ0W+N6kXw0spvPtdwhtkwnGM6uLaV4Xyzg3v3PM9DPfQ/sOg4xPWjipy31P8LTqbU304c/cLCUmWJLNB2Uz2U1KTeRKNmKHVMfbJC+/0loTZRH/W5cvEvBJPMbREkWt3FD1NcqXZBSpuE2Ad0PBehPtNrPtIEdYP+hiRt/V1jIiE69X4NT/uVZI3PUHE9bm5M7ePGdZWy951v7Nn6j8v1WWKP3mt6ttnsigx6VN7Vc0VomSSGqW2mGNP1muZPl7LfjNUaKNFtDGVf2fvE9O7VlBS5j333c5p/eeoOqcs1R/hIqDWLJ7TTlksirVT1SI7l8k4Yp+g3jafGcrU1RM6l9th80XOpnlN97bDNY4i4s61B0Si/ipa0uHMl6zqEjlFfCZm/TM8KmzQDjmuTAQ==\",\"base64\"));\nvar FEATURES = ['isol', 'fina', 'fin2', 'fin3', 'medi', 'med2', 'init'];\nvar ShapingClasses = {\n  Non_Joining: 0,\n  Left_Joining: 1,\n  Right_Joining: 2,\n  Dual_Joining: 3,\n  Join_Causing: 3,\n  ALAPH: 4,\n  'DALATH RISH': 5,\n  Transparent: 6\n};\nvar ISOL = 'isol';\nvar FINA = 'fina';\nvar FIN2 = 'fin2';\nvar FIN3 = 'fin3';\nvar MEDI = 'medi';\nvar MED2 = 'med2';\nvar INIT = 'init';\nvar NONE = null; // Each entry is [prevAction, curAction, nextState]\n\nvar STATE_TABLE = [//   Non_Joining,        Left_Joining,       Right_Joining,     Dual_Joining,           ALAPH,            DALATH RISH\n// State 0: prev was U,  not willing to join.\n[[NONE, NONE, 0], [NONE, ISOL, 2], [NONE, ISOL, 1], [NONE, ISOL, 2], [NONE, ISOL, 1], [NONE, ISOL, 6]], // State 1: prev was R or ISOL/ALAPH,  not willing to join.\n[[NONE, NONE, 0], [NONE, ISOL, 2], [NONE, ISOL, 1], [NONE, ISOL, 2], [NONE, FIN2, 5], [NONE, ISOL, 6]], // State 2: prev was D/L in ISOL form,  willing to join.\n[[NONE, NONE, 0], [NONE, ISOL, 2], [INIT, FINA, 1], [INIT, FINA, 3], [INIT, FINA, 4], [INIT, FINA, 6]], // State 3: prev was D in FINA form,  willing to join.\n[[NONE, NONE, 0], [NONE, ISOL, 2], [MEDI, FINA, 1], [MEDI, FINA, 3], [MEDI, FINA, 4], [MEDI, FINA, 6]], // State 4: prev was FINA ALAPH,  not willing to join.\n[[NONE, NONE, 0], [NONE, ISOL, 2], [MED2, ISOL, 1], [MED2, ISOL, 2], [MED2, FIN2, 5], [MED2, ISOL, 6]], // State 5: prev was FIN2/FIN3 ALAPH,  not willing to join.\n[[NONE, NONE, 0], [NONE, ISOL, 2], [ISOL, ISOL, 1], [ISOL, ISOL, 2], [ISOL, FIN2, 5], [ISOL, ISOL, 6]], // State 6: prev was DALATH/RISH,  not willing to join.\n[[NONE, NONE, 0], [NONE, ISOL, 2], [NONE, ISOL, 1], [NONE, ISOL, 2], [NONE, FIN3, 5], [NONE, ISOL, 6]]];\n/**\n * This is a shaper for Arabic, and other cursive scripts.\n * It uses data from ArabicShaping.txt in the Unicode database,\n * compiled to a UnicodeTrie by generate-data.coffee.\n *\n * The shaping state machine was ported from Harfbuzz.\n * https://github.com/behdad/harfbuzz/blob/master/src/hb-ot-shape-complex-arabic.cc\n */\n\nvar ArabicShaper = function (_DefaultShaper) {\n  _inherits(ArabicShaper, _DefaultShaper);\n\n  function ArabicShaper() {\n    _classCallCheck(this, ArabicShaper);\n\n    return _possibleConstructorReturn(this, _DefaultShaper.apply(this, arguments));\n  }\n\n  ArabicShaper.planFeatures = function planFeatures(plan) {\n    plan.add(['ccmp', 'locl']);\n\n    for (var i = 0; i < FEATURES.length; i++) {\n      var feature = FEATURES[i];\n      plan.addStage(feature, false);\n    }\n\n    plan.addStage('mset');\n  };\n\n  ArabicShaper.assignFeatures = function assignFeatures(plan, glyphs) {\n    _DefaultShaper.assignFeatures.call(this, plan, glyphs);\n\n    var prev = -1;\n    var state = 0;\n    var actions = []; // Apply the state machine to map glyphs to features\n\n    for (var i = 0; i < glyphs.length; i++) {\n      var curAction = void 0,\n          prevAction = void 0;\n      var glyph = glyphs[i];\n      var type = getShapingClass(glyph.codePoints[0]);\n\n      if (type === ShapingClasses.Transparent) {\n        actions[i] = NONE;\n        continue;\n      }\n\n      var _STATE_TABLE$state$ty = STATE_TABLE[state][type];\n      prevAction = _STATE_TABLE$state$ty[0];\n      curAction = _STATE_TABLE$state$ty[1];\n      state = _STATE_TABLE$state$ty[2];\n\n      if (prevAction !== NONE && prev !== -1) {\n        actions[prev] = prevAction;\n      }\n\n      actions[i] = curAction;\n      prev = i;\n    } // Apply the chosen features to their respective glyphs\n\n\n    for (var index = 0; index < glyphs.length; index++) {\n      var feature = void 0;\n      var glyph = glyphs[index];\n\n      if (feature = actions[index]) {\n        glyph.features[feature] = true;\n      }\n    }\n  };\n\n  return ArabicShaper;\n}(DefaultShaper);\n\nfunction getShapingClass(codePoint) {\n  var res = trie.get(codePoint);\n\n  if (res) {\n    return res - 1;\n  }\n\n  var category = unicode.getCategory(codePoint);\n\n  if (category === 'Mn' || category === 'Me' || category === 'Cf') {\n    return ShapingClasses.Transparent;\n  }\n\n  return ShapingClasses.Non_Joining;\n}\n\nvar GlyphIterator = function () {\n  function GlyphIterator(glyphs, options) {\n    _classCallCheck(this, GlyphIterator);\n\n    this.glyphs = glyphs;\n    this.reset(options);\n  }\n\n  GlyphIterator.prototype.reset = function reset() {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var index = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    this.options = options;\n    this.flags = options.flags || {};\n    this.markAttachmentType = options.markAttachmentType || 0;\n    this.index = index;\n  };\n\n  GlyphIterator.prototype.shouldIgnore = function shouldIgnore(glyph) {\n    return this.flags.ignoreMarks && glyph.isMark || this.flags.ignoreBaseGlyphs && glyph.isBase || this.flags.ignoreLigatures && glyph.isLigature || this.markAttachmentType && glyph.isMark && glyph.markAttachmentType !== this.markAttachmentType;\n  };\n\n  GlyphIterator.prototype.move = function move(dir) {\n    this.index += dir;\n\n    while (0 <= this.index && this.index < this.glyphs.length && this.shouldIgnore(this.glyphs[this.index])) {\n      this.index += dir;\n    }\n\n    if (0 > this.index || this.index >= this.glyphs.length) {\n      return null;\n    }\n\n    return this.glyphs[this.index];\n  };\n\n  GlyphIterator.prototype.next = function next() {\n    return this.move(+1);\n  };\n\n  GlyphIterator.prototype.prev = function prev() {\n    return this.move(-1);\n  };\n\n  GlyphIterator.prototype.peek = function peek() {\n    var count = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n    var idx = this.index;\n    var res = this.increment(count);\n    this.index = idx;\n    return res;\n  };\n\n  GlyphIterator.prototype.peekIndex = function peekIndex() {\n    var count = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n    var idx = this.index;\n    this.increment(count);\n    var res = this.index;\n    this.index = idx;\n    return res;\n  };\n\n  GlyphIterator.prototype.increment = function increment() {\n    var count = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n    var dir = count < 0 ? -1 : 1;\n    count = Math.abs(count);\n\n    while (count--) {\n      this.move(dir);\n    }\n\n    return this.glyphs[this.index];\n  };\n\n  _createClass(GlyphIterator, [{\n    key: \"cur\",\n    get: function get() {\n      return this.glyphs[this.index] || null;\n    }\n  }]);\n\n  return GlyphIterator;\n}();\n\nvar DEFAULT_SCRIPTS = ['DFLT', 'dflt', 'latn'];\n\nvar OTProcessor = function () {\n  function OTProcessor(font, table) {\n    _classCallCheck(this, OTProcessor);\n\n    this.font = font;\n    this.table = table;\n    this.script = null;\n    this.scriptTag = null;\n    this.language = null;\n    this.languageTag = null;\n    this.features = {};\n    this.lookups = {}; // Setup variation substitutions\n\n    this.variationsIndex = font._variationProcessor ? this.findVariationsIndex(font._variationProcessor.normalizedCoords) : -1; // initialize to default script + language\n\n    this.selectScript(); // current context (set by applyFeatures)\n\n    this.glyphs = [];\n    this.positions = []; // only used by GPOS\n\n    this.ligatureID = 1;\n    this.currentFeature = null;\n  }\n\n  OTProcessor.prototype.findScript = function findScript(script) {\n    if (this.table.scriptList == null) {\n      return null;\n    }\n\n    if (!Array.isArray(script)) {\n      script = [script];\n    }\n\n    for (var _iterator = script, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _getIterator(_iterator);;) {\n      var _ref;\n\n      if (_isArray) {\n        if (_i >= _iterator.length) break;\n        _ref = _iterator[_i++];\n      } else {\n        _i = _iterator.next();\n        if (_i.done) break;\n        _ref = _i.value;\n      }\n\n      var s = _ref;\n\n      for (var _iterator2 = this.table.scriptList, _isArray2 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray2 ? _iterator2 : _getIterator(_iterator2);;) {\n        var _ref2;\n\n        if (_isArray2) {\n          if (_i2 >= _iterator2.length) break;\n          _ref2 = _iterator2[_i2++];\n        } else {\n          _i2 = _iterator2.next();\n          if (_i2.done) break;\n          _ref2 = _i2.value;\n        }\n\n        var entry = _ref2;\n\n        if (entry.tag === s) {\n          return entry;\n        }\n      }\n    }\n\n    return null;\n  };\n\n  OTProcessor.prototype.selectScript = function selectScript(script, language, direction$$) {\n    var changed = false;\n    var entry = void 0;\n\n    if (!this.script || script !== this.scriptTag) {\n      entry = this.findScript(script);\n\n      if (!entry) {\n        entry = this.findScript(DEFAULT_SCRIPTS);\n      }\n\n      if (!entry) {\n        return this.scriptTag;\n      }\n\n      this.scriptTag = entry.tag;\n      this.script = entry.script;\n      this.language = null;\n      this.languageTag = null;\n      changed = true;\n    }\n\n    if (!direction$$ || direction$$ !== this.direction) {\n      this.direction = direction$$ || direction(script);\n    }\n\n    if (language && language.length < 4) {\n      language += ' '.repeat(4 - language.length);\n    }\n\n    if (!language || language !== this.languageTag) {\n      this.language = null;\n\n      for (var _iterator3 = this.script.langSysRecords, _isArray3 = Array.isArray(_iterator3), _i3 = 0, _iterator3 = _isArray3 ? _iterator3 : _getIterator(_iterator3);;) {\n        var _ref3;\n\n        if (_isArray3) {\n          if (_i3 >= _iterator3.length) break;\n          _ref3 = _iterator3[_i3++];\n        } else {\n          _i3 = _iterator3.next();\n          if (_i3.done) break;\n          _ref3 = _i3.value;\n        }\n\n        var lang = _ref3;\n\n        if (lang.tag === language) {\n          this.language = lang.langSys;\n          this.languageTag = lang.tag;\n          break;\n        }\n      }\n\n      if (!this.language) {\n        this.language = this.script.defaultLangSys;\n        this.languageTag = null;\n      }\n\n      changed = true;\n    } // Build a feature lookup table\n\n\n    if (changed) {\n      this.features = {};\n\n      if (this.language) {\n        for (var _iterator4 = this.language.featureIndexes, _isArray4 = Array.isArray(_iterator4), _i4 = 0, _iterator4 = _isArray4 ? _iterator4 : _getIterator(_iterator4);;) {\n          var _ref4;\n\n          if (_isArray4) {\n            if (_i4 >= _iterator4.length) break;\n            _ref4 = _iterator4[_i4++];\n          } else {\n            _i4 = _iterator4.next();\n            if (_i4.done) break;\n            _ref4 = _i4.value;\n          }\n\n          var featureIndex = _ref4;\n          var record = this.table.featureList[featureIndex];\n          var substituteFeature = this.substituteFeatureForVariations(featureIndex);\n          this.features[record.tag] = substituteFeature || record.feature;\n        }\n      }\n    }\n\n    return this.scriptTag;\n  };\n\n  OTProcessor.prototype.lookupsForFeatures = function lookupsForFeatures() {\n    var userFeatures = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    var exclude = arguments[1];\n    var lookups = [];\n\n    for (var _iterator5 = userFeatures, _isArray5 = Array.isArray(_iterator5), _i5 = 0, _iterator5 = _isArray5 ? _iterator5 : _getIterator(_iterator5);;) {\n      var _ref5;\n\n      if (_isArray5) {\n        if (_i5 >= _iterator5.length) break;\n        _ref5 = _iterator5[_i5++];\n      } else {\n        _i5 = _iterator5.next();\n        if (_i5.done) break;\n        _ref5 = _i5.value;\n      }\n\n      var tag = _ref5;\n      var feature = this.features[tag];\n\n      if (!feature) {\n        continue;\n      }\n\n      for (var _iterator6 = feature.lookupListIndexes, _isArray6 = Array.isArray(_iterator6), _i6 = 0, _iterator6 = _isArray6 ? _iterator6 : _getIterator(_iterator6);;) {\n        var _ref6;\n\n        if (_isArray6) {\n          if (_i6 >= _iterator6.length) break;\n          _ref6 = _iterator6[_i6++];\n        } else {\n          _i6 = _iterator6.next();\n          if (_i6.done) break;\n          _ref6 = _i6.value;\n        }\n\n        var lookupIndex = _ref6;\n\n        if (exclude && exclude.indexOf(lookupIndex) !== -1) {\n          continue;\n        }\n\n        lookups.push({\n          feature: tag,\n          index: lookupIndex,\n          lookup: this.table.lookupList.get(lookupIndex)\n        });\n      }\n    }\n\n    lookups.sort(function (a, b) {\n      return a.index - b.index;\n    });\n    return lookups;\n  };\n\n  OTProcessor.prototype.substituteFeatureForVariations = function substituteFeatureForVariations(featureIndex) {\n    if (this.variationsIndex === -1) {\n      return null;\n    }\n\n    var record = this.table.featureVariations.featureVariationRecords[this.variationsIndex];\n    var substitutions = record.featureTableSubstitution.substitutions;\n\n    for (var _iterator7 = substitutions, _isArray7 = Array.isArray(_iterator7), _i7 = 0, _iterator7 = _isArray7 ? _iterator7 : _getIterator(_iterator7);;) {\n      var _ref7;\n\n      if (_isArray7) {\n        if (_i7 >= _iterator7.length) break;\n        _ref7 = _iterator7[_i7++];\n      } else {\n        _i7 = _iterator7.next();\n        if (_i7.done) break;\n        _ref7 = _i7.value;\n      }\n\n      var substitution = _ref7;\n\n      if (substitution.featureIndex === featureIndex) {\n        return substitution.alternateFeatureTable;\n      }\n    }\n\n    return null;\n  };\n\n  OTProcessor.prototype.findVariationsIndex = function findVariationsIndex(coords) {\n    var variations = this.table.featureVariations;\n\n    if (!variations) {\n      return -1;\n    }\n\n    var records = variations.featureVariationRecords;\n\n    for (var i = 0; i < records.length; i++) {\n      var conditions = records[i].conditionSet.conditionTable;\n\n      if (this.variationConditionsMatch(conditions, coords)) {\n        return i;\n      }\n    }\n\n    return -1;\n  };\n\n  OTProcessor.prototype.variationConditionsMatch = function variationConditionsMatch(conditions, coords) {\n    return conditions.every(function (condition) {\n      var coord = condition.axisIndex < coords.length ? coords[condition.axisIndex] : 0;\n      return condition.filterRangeMinValue <= coord && coord <= condition.filterRangeMaxValue;\n    });\n  };\n\n  OTProcessor.prototype.applyFeatures = function applyFeatures(userFeatures, glyphs, advances) {\n    var lookups = this.lookupsForFeatures(userFeatures);\n    this.applyLookups(lookups, glyphs, advances);\n  };\n\n  OTProcessor.prototype.applyLookups = function applyLookups(lookups, glyphs, positions) {\n    this.glyphs = glyphs;\n    this.positions = positions;\n    this.glyphIterator = new GlyphIterator(glyphs);\n\n    for (var _iterator8 = lookups, _isArray8 = Array.isArray(_iterator8), _i8 = 0, _iterator8 = _isArray8 ? _iterator8 : _getIterator(_iterator8);;) {\n      var _ref8;\n\n      if (_isArray8) {\n        if (_i8 >= _iterator8.length) break;\n        _ref8 = _iterator8[_i8++];\n      } else {\n        _i8 = _iterator8.next();\n        if (_i8.done) break;\n        _ref8 = _i8.value;\n      }\n\n      var _ref9 = _ref8,\n          feature = _ref9.feature,\n          lookup = _ref9.lookup;\n      this.currentFeature = feature;\n      this.glyphIterator.reset(lookup.flags);\n\n      while (this.glyphIterator.index < glyphs.length) {\n        if (!(feature in this.glyphIterator.cur.features)) {\n          this.glyphIterator.next();\n          continue;\n        }\n\n        for (var _iterator9 = lookup.subTables, _isArray9 = Array.isArray(_iterator9), _i9 = 0, _iterator9 = _isArray9 ? _iterator9 : _getIterator(_iterator9);;) {\n          var _ref10;\n\n          if (_isArray9) {\n            if (_i9 >= _iterator9.length) break;\n            _ref10 = _iterator9[_i9++];\n          } else {\n            _i9 = _iterator9.next();\n            if (_i9.done) break;\n            _ref10 = _i9.value;\n          }\n\n          var table = _ref10;\n          var res = this.applyLookup(lookup.lookupType, table);\n\n          if (res) {\n            break;\n          }\n        }\n\n        this.glyphIterator.next();\n      }\n    }\n  };\n\n  OTProcessor.prototype.applyLookup = function applyLookup(lookup, table) {\n    throw new Error(\"applyLookup must be implemented by subclasses\");\n  };\n\n  OTProcessor.prototype.applyLookupList = function applyLookupList(lookupRecords) {\n    var options = this.glyphIterator.options;\n    var glyphIndex = this.glyphIterator.index;\n\n    for (var _iterator10 = lookupRecords, _isArray10 = Array.isArray(_iterator10), _i10 = 0, _iterator10 = _isArray10 ? _iterator10 : _getIterator(_iterator10);;) {\n      var _ref11;\n\n      if (_isArray10) {\n        if (_i10 >= _iterator10.length) break;\n        _ref11 = _iterator10[_i10++];\n      } else {\n        _i10 = _iterator10.next();\n        if (_i10.done) break;\n        _ref11 = _i10.value;\n      }\n\n      var lookupRecord = _ref11; // Reset flags and find glyph index for this lookup record\n\n      this.glyphIterator.reset(options, glyphIndex);\n      this.glyphIterator.increment(lookupRecord.sequenceIndex); // Get the lookup and setup flags for subtables\n\n      var lookup = this.table.lookupList.get(lookupRecord.lookupListIndex);\n      this.glyphIterator.reset(lookup.flags, this.glyphIterator.index); // Apply lookup subtables until one matches\n\n      for (var _iterator11 = lookup.subTables, _isArray11 = Array.isArray(_iterator11), _i11 = 0, _iterator11 = _isArray11 ? _iterator11 : _getIterator(_iterator11);;) {\n        var _ref12;\n\n        if (_isArray11) {\n          if (_i11 >= _iterator11.length) break;\n          _ref12 = _iterator11[_i11++];\n        } else {\n          _i11 = _iterator11.next();\n          if (_i11.done) break;\n          _ref12 = _i11.value;\n        }\n\n        var table = _ref12;\n\n        if (this.applyLookup(lookup.lookupType, table)) {\n          break;\n        }\n      }\n    }\n\n    this.glyphIterator.reset(options, glyphIndex);\n    return true;\n  };\n\n  OTProcessor.prototype.coverageIndex = function coverageIndex(coverage, glyph) {\n    if (glyph == null) {\n      glyph = this.glyphIterator.cur.id;\n    }\n\n    switch (coverage.version) {\n      case 1:\n        return coverage.glyphs.indexOf(glyph);\n\n      case 2:\n        for (var _iterator12 = coverage.rangeRecords, _isArray12 = Array.isArray(_iterator12), _i12 = 0, _iterator12 = _isArray12 ? _iterator12 : _getIterator(_iterator12);;) {\n          var _ref13;\n\n          if (_isArray12) {\n            if (_i12 >= _iterator12.length) break;\n            _ref13 = _iterator12[_i12++];\n          } else {\n            _i12 = _iterator12.next();\n            if (_i12.done) break;\n            _ref13 = _i12.value;\n          }\n\n          var range = _ref13;\n\n          if (range.start <= glyph && glyph <= range.end) {\n            return range.startCoverageIndex + glyph - range.start;\n          }\n        }\n\n        break;\n    }\n\n    return -1;\n  };\n\n  OTProcessor.prototype.match = function match(sequenceIndex, sequence, fn, matched) {\n    var pos = this.glyphIterator.index;\n    var glyph = this.glyphIterator.increment(sequenceIndex);\n    var idx = 0;\n\n    while (idx < sequence.length && glyph && fn(sequence[idx], glyph)) {\n      if (matched) {\n        matched.push(this.glyphIterator.index);\n      }\n\n      idx++;\n      glyph = this.glyphIterator.next();\n    }\n\n    this.glyphIterator.index = pos;\n\n    if (idx < sequence.length) {\n      return false;\n    }\n\n    return matched || true;\n  };\n\n  OTProcessor.prototype.sequenceMatches = function sequenceMatches(sequenceIndex, sequence) {\n    return this.match(sequenceIndex, sequence, function (component, glyph) {\n      return component === glyph.id;\n    });\n  };\n\n  OTProcessor.prototype.sequenceMatchIndices = function sequenceMatchIndices(sequenceIndex, sequence) {\n    var _this = this;\n\n    return this.match(sequenceIndex, sequence, function (component, glyph) {\n      // If the current feature doesn't apply to this glyph,\n      if (!(_this.currentFeature in glyph.features)) {\n        return false;\n      }\n\n      return component === glyph.id;\n    }, []);\n  };\n\n  OTProcessor.prototype.coverageSequenceMatches = function coverageSequenceMatches(sequenceIndex, sequence) {\n    var _this2 = this;\n\n    return this.match(sequenceIndex, sequence, function (coverage, glyph) {\n      return _this2.coverageIndex(coverage, glyph.id) >= 0;\n    });\n  };\n\n  OTProcessor.prototype.getClassID = function getClassID(glyph, classDef) {\n    switch (classDef.version) {\n      case 1:\n        // Class array\n        var i = glyph - classDef.startGlyph;\n\n        if (i >= 0 && i < classDef.classValueArray.length) {\n          return classDef.classValueArray[i];\n        }\n\n        break;\n\n      case 2:\n        for (var _iterator13 = classDef.classRangeRecord, _isArray13 = Array.isArray(_iterator13), _i13 = 0, _iterator13 = _isArray13 ? _iterator13 : _getIterator(_iterator13);;) {\n          var _ref14;\n\n          if (_isArray13) {\n            if (_i13 >= _iterator13.length) break;\n            _ref14 = _iterator13[_i13++];\n          } else {\n            _i13 = _iterator13.next();\n            if (_i13.done) break;\n            _ref14 = _i13.value;\n          }\n\n          var range = _ref14;\n\n          if (range.start <= glyph && glyph <= range.end) {\n            return range.class;\n          }\n        }\n\n        break;\n    }\n\n    return 0;\n  };\n\n  OTProcessor.prototype.classSequenceMatches = function classSequenceMatches(sequenceIndex, sequence, classDef) {\n    var _this3 = this;\n\n    return this.match(sequenceIndex, sequence, function (classID, glyph) {\n      return classID === _this3.getClassID(glyph.id, classDef);\n    });\n  };\n\n  OTProcessor.prototype.applyContext = function applyContext(table) {\n    switch (table.version) {\n      case 1:\n        var index = this.coverageIndex(table.coverage);\n\n        if (index === -1) {\n          return false;\n        }\n\n        var set = table.ruleSets[index];\n\n        for (var _iterator14 = set, _isArray14 = Array.isArray(_iterator14), _i14 = 0, _iterator14 = _isArray14 ? _iterator14 : _getIterator(_iterator14);;) {\n          var _ref15;\n\n          if (_isArray14) {\n            if (_i14 >= _iterator14.length) break;\n            _ref15 = _iterator14[_i14++];\n          } else {\n            _i14 = _iterator14.next();\n            if (_i14.done) break;\n            _ref15 = _i14.value;\n          }\n\n          var rule = _ref15;\n\n          if (this.sequenceMatches(1, rule.input)) {\n            return this.applyLookupList(rule.lookupRecords);\n          }\n        }\n\n        break;\n\n      case 2:\n        if (this.coverageIndex(table.coverage) === -1) {\n          return false;\n        }\n\n        index = this.getClassID(this.glyphIterator.cur.id, table.classDef);\n\n        if (index === -1) {\n          return false;\n        }\n\n        set = table.classSet[index];\n\n        for (var _iterator15 = set, _isArray15 = Array.isArray(_iterator15), _i15 = 0, _iterator15 = _isArray15 ? _iterator15 : _getIterator(_iterator15);;) {\n          var _ref16;\n\n          if (_isArray15) {\n            if (_i15 >= _iterator15.length) break;\n            _ref16 = _iterator15[_i15++];\n          } else {\n            _i15 = _iterator15.next();\n            if (_i15.done) break;\n            _ref16 = _i15.value;\n          }\n\n          var _rule = _ref16;\n\n          if (this.classSequenceMatches(1, _rule.classes, table.classDef)) {\n            return this.applyLookupList(_rule.lookupRecords);\n          }\n        }\n\n        break;\n\n      case 3:\n        if (this.coverageSequenceMatches(0, table.coverages)) {\n          return this.applyLookupList(table.lookupRecords);\n        }\n\n        break;\n    }\n\n    return false;\n  };\n\n  OTProcessor.prototype.applyChainingContext = function applyChainingContext(table) {\n    switch (table.version) {\n      case 1:\n        var index = this.coverageIndex(table.coverage);\n\n        if (index === -1) {\n          return false;\n        }\n\n        var set = table.chainRuleSets[index];\n\n        for (var _iterator16 = set, _isArray16 = Array.isArray(_iterator16), _i16 = 0, _iterator16 = _isArray16 ? _iterator16 : _getIterator(_iterator16);;) {\n          var _ref17;\n\n          if (_isArray16) {\n            if (_i16 >= _iterator16.length) break;\n            _ref17 = _iterator16[_i16++];\n          } else {\n            _i16 = _iterator16.next();\n            if (_i16.done) break;\n            _ref17 = _i16.value;\n          }\n\n          var rule = _ref17;\n\n          if (this.sequenceMatches(-rule.backtrack.length, rule.backtrack) && this.sequenceMatches(1, rule.input) && this.sequenceMatches(1 + rule.input.length, rule.lookahead)) {\n            return this.applyLookupList(rule.lookupRecords);\n          }\n        }\n\n        break;\n\n      case 2:\n        if (this.coverageIndex(table.coverage) === -1) {\n          return false;\n        }\n\n        index = this.getClassID(this.glyphIterator.cur.id, table.inputClassDef);\n        var rules = table.chainClassSet[index];\n\n        if (!rules) {\n          return false;\n        }\n\n        for (var _iterator17 = rules, _isArray17 = Array.isArray(_iterator17), _i17 = 0, _iterator17 = _isArray17 ? _iterator17 : _getIterator(_iterator17);;) {\n          var _ref18;\n\n          if (_isArray17) {\n            if (_i17 >= _iterator17.length) break;\n            _ref18 = _iterator17[_i17++];\n          } else {\n            _i17 = _iterator17.next();\n            if (_i17.done) break;\n            _ref18 = _i17.value;\n          }\n\n          var _rule2 = _ref18;\n\n          if (this.classSequenceMatches(-_rule2.backtrack.length, _rule2.backtrack, table.backtrackClassDef) && this.classSequenceMatches(1, _rule2.input, table.inputClassDef) && this.classSequenceMatches(1 + _rule2.input.length, _rule2.lookahead, table.lookaheadClassDef)) {\n            return this.applyLookupList(_rule2.lookupRecords);\n          }\n        }\n\n        break;\n\n      case 3:\n        if (this.coverageSequenceMatches(-table.backtrackGlyphCount, table.backtrackCoverage) && this.coverageSequenceMatches(0, table.inputCoverage) && this.coverageSequenceMatches(table.inputGlyphCount, table.lookaheadCoverage)) {\n          return this.applyLookupList(table.lookupRecords);\n        }\n\n        break;\n    }\n\n    return false;\n  };\n\n  return OTProcessor;\n}();\n\nvar GlyphInfo = function () {\n  function GlyphInfo(font, id) {\n    var codePoints = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n    var features = arguments[3];\n\n    _classCallCheck(this, GlyphInfo);\n\n    this._font = font;\n    this.codePoints = codePoints;\n    this.id = id;\n    this.features = {};\n\n    if (Array.isArray(features)) {\n      for (var i = 0; i < features.length; i++) {\n        var feature = features[i];\n        this.features[feature] = true;\n      }\n    } else if ((typeof features === 'undefined' ? 'undefined' : _typeof(features)) === 'object') {\n      _Object$assign(this.features, features);\n    }\n\n    this.ligatureID = null;\n    this.ligatureComponent = null;\n    this.isLigated = false;\n    this.cursiveAttachment = null;\n    this.markAttachment = null;\n    this.shaperInfo = null;\n    this.substituted = false;\n    this.isMultiplied = false;\n  }\n\n  GlyphInfo.prototype.copy = function copy() {\n    return new GlyphInfo(this._font, this.id, this.codePoints, this.features);\n  };\n\n  _createClass(GlyphInfo, [{\n    key: 'id',\n    get: function get() {\n      return this._id;\n    },\n    set: function set(id) {\n      this._id = id;\n      this.substituted = true;\n      var GDEF = this._font.GDEF;\n\n      if (GDEF && GDEF.glyphClassDef) {\n        // TODO: clean this up\n        var classID = OTProcessor.prototype.getClassID(id, GDEF.glyphClassDef);\n        this.isBase = classID === 1;\n        this.isLigature = classID === 2;\n        this.isMark = classID === 3;\n        this.markAttachmentType = GDEF.markAttachClassDef ? OTProcessor.prototype.getClassID(id, GDEF.markAttachClassDef) : 0;\n      } else {\n        this.isMark = this.codePoints.length > 0 && this.codePoints.every(unicode.isMark);\n        this.isBase = !this.isMark;\n        this.isLigature = this.codePoints.length > 1;\n        this.markAttachmentType = 0;\n      }\n    }\n  }]);\n\n  return GlyphInfo;\n}();\n\nvar _class$5;\n\nvar _temp$1;\n/**\n * This is a shaper for the Hangul script, used by the Korean language.\n * It does the following:\n *   - decompose if unsupported by the font:\n *     <LV>   -> <L,V>\n *     <LVT>  -> <L,V,T>\n *     <LV,T> -> <L,V,T>\n *\n *   - compose if supported by the font:\n *     <L,V>   -> <LV>\n *     <L,V,T> -> <LVT>\n *     <LV,T>  -> <LVT>\n *\n *   - reorder tone marks (S is any valid syllable):\n *     <S, M> -> <M, S>\n *\n *   - apply ljmo, vjmo, and tjmo OpenType features to decomposed Jamo sequences.\n *\n * This logic is based on the following documents:\n *   - http://www.microsoft.com/typography/OpenTypeDev/hangul/intro.htm\n *   - http://ktug.org/~nomos/harfbuzz-hangul/hangulshaper.pdf\n */\n\n\nvar HangulShaper = (_temp$1 = _class$5 = function (_DefaultShaper) {\n  _inherits(HangulShaper, _DefaultShaper);\n\n  function HangulShaper() {\n    _classCallCheck(this, HangulShaper);\n\n    return _possibleConstructorReturn(this, _DefaultShaper.apply(this, arguments));\n  }\n\n  HangulShaper.planFeatures = function planFeatures(plan) {\n    plan.add(['ljmo', 'vjmo', 'tjmo'], false);\n  };\n\n  HangulShaper.assignFeatures = function assignFeatures(plan, glyphs) {\n    var state = 0;\n    var i = 0;\n\n    while (i < glyphs.length) {\n      var action = void 0;\n      var glyph = glyphs[i];\n      var code = glyph.codePoints[0];\n      var type = getType(code);\n      var _STATE_TABLE$state$ty = STATE_TABLE$1[state][type];\n      action = _STATE_TABLE$state$ty[0];\n      state = _STATE_TABLE$state$ty[1];\n\n      switch (action) {\n        case DECOMPOSE:\n          // Decompose the composed syllable if it is not supported by the font.\n          if (!plan.font.hasGlyphForCodePoint(code)) {\n            i = decompose(glyphs, i, plan.font);\n          }\n\n          break;\n\n        case COMPOSE:\n          // Found a decomposed syllable. Try to compose if supported by the font.\n          i = compose(glyphs, i, plan.font);\n          break;\n\n        case TONE_MARK:\n          // Got a valid syllable, followed by a tone mark. Move the tone mark to the beginning of the syllable.\n          reorderToneMark(glyphs, i, plan.font);\n          break;\n\n        case INVALID:\n          // Tone mark has no valid syllable to attach to, so insert a dotted circle\n          i = insertDottedCircle(glyphs, i, plan.font);\n          break;\n      }\n\n      i++;\n    }\n  };\n\n  return HangulShaper;\n}(DefaultShaper), _class$5.zeroMarkWidths = 'NONE', _temp$1);\nvar HANGUL_BASE = 0xac00;\nvar HANGUL_END = 0xd7a4;\nvar HANGUL_COUNT = HANGUL_END - HANGUL_BASE + 1;\nvar L_BASE = 0x1100; // lead\n\nvar V_BASE = 0x1161; // vowel\n\nvar T_BASE = 0x11a7; // trail\n\nvar L_COUNT = 19;\nvar V_COUNT = 21;\nvar T_COUNT = 28;\nvar L_END = L_BASE + L_COUNT - 1;\nvar V_END = V_BASE + V_COUNT - 1;\nvar T_END = T_BASE + T_COUNT - 1;\nvar DOTTED_CIRCLE = 0x25cc;\n\nvar isL = function isL(code) {\n  return 0x1100 <= code && code <= 0x115f || 0xa960 <= code && code <= 0xa97c;\n};\n\nvar isV = function isV(code) {\n  return 0x1160 <= code && code <= 0x11a7 || 0xd7b0 <= code && code <= 0xd7c6;\n};\n\nvar isT = function isT(code) {\n  return 0x11a8 <= code && code <= 0x11ff || 0xd7cb <= code && code <= 0xd7fb;\n};\n\nvar isTone = function isTone(code) {\n  return 0x302e <= code && code <= 0x302f;\n};\n\nvar isLVT = function isLVT(code) {\n  return HANGUL_BASE <= code && code <= HANGUL_END;\n};\n\nvar isLV = function isLV(code) {\n  return code - HANGUL_BASE < HANGUL_COUNT && (code - HANGUL_BASE) % T_COUNT === 0;\n};\n\nvar isCombiningL = function isCombiningL(code) {\n  return L_BASE <= code && code <= L_END;\n};\n\nvar isCombiningV = function isCombiningV(code) {\n  return V_BASE <= code && code <= V_END;\n};\n\nvar isCombiningT = function isCombiningT(code) {\n  return T_BASE + 1 && 1 <= code && code <= T_END;\n}; // Character categories\n\n\nvar X = 0; // Other character\n\nvar L = 1; // Leading consonant\n\nvar V = 2; // Medial vowel\n\nvar T = 3; // Trailing consonant\n\nvar LV = 4; // Composed <LV> syllable\n\nvar LVT = 5; // Composed <LVT> syllable\n\nvar M = 6; // Tone mark\n// This function classifies a character using the above categories.\n\nfunction getType(code) {\n  if (isL(code)) {\n    return L;\n  }\n\n  if (isV(code)) {\n    return V;\n  }\n\n  if (isT(code)) {\n    return T;\n  }\n\n  if (isLV(code)) {\n    return LV;\n  }\n\n  if (isLVT(code)) {\n    return LVT;\n  }\n\n  if (isTone(code)) {\n    return M;\n  }\n\n  return X;\n} // State machine actions\n\n\nvar NO_ACTION = 0;\nvar DECOMPOSE = 1;\nvar COMPOSE = 2;\nvar TONE_MARK = 4;\nvar INVALID = 5; // Build a state machine that accepts valid syllables, and applies actions along the way.\n// The logic this is implementing is documented at the top of the file.\n\nvar STATE_TABLE$1 = [//       X                 L                 V                T                  LV                LVT               M\n// State 0: start state\n[[NO_ACTION, 0], [NO_ACTION, 1], [NO_ACTION, 0], [NO_ACTION, 0], [DECOMPOSE, 2], [DECOMPOSE, 3], [INVALID, 0]], // State 1: <L>\n[[NO_ACTION, 0], [NO_ACTION, 1], [COMPOSE, 2], [NO_ACTION, 0], [DECOMPOSE, 2], [DECOMPOSE, 3], [INVALID, 0]], // State 2: <L,V> or <LV>\n[[NO_ACTION, 0], [NO_ACTION, 1], [NO_ACTION, 0], [COMPOSE, 3], [DECOMPOSE, 2], [DECOMPOSE, 3], [TONE_MARK, 0]], // State 3: <L,V,T> or <LVT>\n[[NO_ACTION, 0], [NO_ACTION, 1], [NO_ACTION, 0], [NO_ACTION, 0], [DECOMPOSE, 2], [DECOMPOSE, 3], [TONE_MARK, 0]]];\n\nfunction getGlyph(font, code, features) {\n  return new GlyphInfo(font, font.glyphForCodePoint(code).id, [code], features);\n}\n\nfunction decompose(glyphs, i, font) {\n  var glyph = glyphs[i];\n  var code = glyph.codePoints[0];\n  var s = code - HANGUL_BASE;\n  var t = T_BASE + s % T_COUNT;\n  s = s / T_COUNT | 0;\n  var l = L_BASE + s / V_COUNT | 0;\n  var v = V_BASE + s % V_COUNT; // Don't decompose if all of the components are not available\n\n  if (!font.hasGlyphForCodePoint(l) || !font.hasGlyphForCodePoint(v) || t !== T_BASE && !font.hasGlyphForCodePoint(t)) {\n    return i;\n  } // Replace the current glyph with decomposed L, V, and T glyphs,\n  // and apply the proper OpenType features to each component.\n\n\n  var ljmo = getGlyph(font, l, glyph.features);\n  ljmo.features.ljmo = true;\n  var vjmo = getGlyph(font, v, glyph.features);\n  vjmo.features.vjmo = true;\n  var insert = [ljmo, vjmo];\n\n  if (t > T_BASE) {\n    var tjmo = getGlyph(font, t, glyph.features);\n    tjmo.features.tjmo = true;\n    insert.push(tjmo);\n  }\n\n  glyphs.splice.apply(glyphs, [i, 1].concat(insert));\n  return i + insert.length - 1;\n}\n\nfunction compose(glyphs, i, font) {\n  var glyph = glyphs[i];\n  var code = glyphs[i].codePoints[0];\n  var type = getType(code);\n  var prev = glyphs[i - 1].codePoints[0];\n  var prevType = getType(prev); // Figure out what type of syllable we're dealing with\n\n  var lv = void 0,\n      ljmo = void 0,\n      vjmo = void 0,\n      tjmo = void 0;\n\n  if (prevType === LV && type === T) {\n    // <LV,T>\n    lv = prev;\n    tjmo = glyph;\n  } else {\n    if (type === V) {\n      // <L,V>\n      ljmo = glyphs[i - 1];\n      vjmo = glyph;\n    } else {\n      // <L,V,T>\n      ljmo = glyphs[i - 2];\n      vjmo = glyphs[i - 1];\n      tjmo = glyph;\n    }\n\n    var l = ljmo.codePoints[0];\n    var v = vjmo.codePoints[0]; // Make sure L and V are combining characters\n\n    if (isCombiningL(l) && isCombiningV(v)) {\n      lv = HANGUL_BASE + ((l - L_BASE) * V_COUNT + (v - V_BASE)) * T_COUNT;\n    }\n  }\n\n  var t = tjmo && tjmo.codePoints[0] || T_BASE;\n\n  if (lv != null && (t === T_BASE || isCombiningT(t))) {\n    var s = lv + (t - T_BASE); // Replace with a composed glyph if supported by the font,\n    // otherwise apply the proper OpenType features to each component.\n\n    if (font.hasGlyphForCodePoint(s)) {\n      var del = prevType === V ? 3 : 2;\n      glyphs.splice(i - del + 1, del, getGlyph(font, s, glyph.features));\n      return i - del + 1;\n    }\n  } // Didn't compose (either a non-combining component or unsupported by font).\n\n\n  if (ljmo) {\n    ljmo.features.ljmo = true;\n  }\n\n  if (vjmo) {\n    vjmo.features.vjmo = true;\n  }\n\n  if (tjmo) {\n    tjmo.features.tjmo = true;\n  }\n\n  if (prevType === LV) {\n    // Sequence was originally <L,V>, which got combined earlier.\n    // Either the T was non-combining, or the LVT glyph wasn't supported.\n    // Decompose the glyph again and apply OT features.\n    decompose(glyphs, i - 1, font);\n    return i + 1;\n  }\n\n  return i;\n}\n\nfunction getLength(code) {\n  switch (getType(code)) {\n    case LV:\n    case LVT:\n      return 1;\n\n    case V:\n      return 2;\n\n    case T:\n      return 3;\n  }\n}\n\nfunction reorderToneMark(glyphs, i, font) {\n  var glyph = glyphs[i];\n  var code = glyphs[i].codePoints[0]; // Move tone mark to the beginning of the previous syllable, unless it is zero width\n\n  if (font.glyphForCodePoint(code).advanceWidth === 0) {\n    return;\n  }\n\n  var prev = glyphs[i - 1].codePoints[0];\n  var len = getLength(prev);\n  glyphs.splice(i, 1);\n  return glyphs.splice(i - len, 0, glyph);\n}\n\nfunction insertDottedCircle(glyphs, i, font) {\n  var glyph = glyphs[i];\n  var code = glyphs[i].codePoints[0];\n\n  if (font.hasGlyphForCodePoint(DOTTED_CIRCLE)) {\n    var dottedCircle = getGlyph(font, DOTTED_CIRCLE, glyph.features); // If the tone mark is zero width, insert the dotted circle before, otherwise after\n\n    var idx = font.glyphForCodePoint(code).advanceWidth === 0 ? i : i + 1;\n    glyphs.splice(idx, 0, dottedCircle);\n    i++;\n  }\n\n  return i;\n}\n\nvar stateTable = [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 2, 3, 4, 5, 6, 7, 8, 9, 0, 10, 11, 11, 12, 13, 14, 15, 16, 17], [0, 0, 0, 18, 19, 20, 21, 22, 23, 0, 24, 0, 0, 25, 26, 0, 0, 27, 0], [0, 0, 0, 28, 29, 30, 31, 32, 33, 0, 34, 0, 0, 35, 36, 0, 0, 37, 0], [0, 0, 0, 38, 5, 7, 7, 8, 9, 0, 10, 0, 0, 0, 13, 0, 0, 16, 0], [0, 39, 0, 0, 0, 40, 41, 0, 9, 0, 10, 0, 0, 0, 42, 0, 39, 0, 0], [0, 0, 0, 0, 43, 44, 44, 8, 9, 0, 0, 0, 0, 12, 43, 0, 0, 0, 0], [0, 0, 0, 0, 43, 44, 44, 8, 9, 0, 0, 0, 0, 0, 43, 0, 0, 0, 0], [0, 0, 0, 45, 46, 47, 48, 49, 9, 0, 10, 0, 0, 0, 42, 0, 0, 0, 0], [0, 0, 0, 0, 0, 50, 0, 0, 51, 0, 10, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 52, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 53, 54, 55, 56, 57, 58, 0, 59, 0, 0, 60, 61, 0, 0, 62, 0], [0, 0, 0, 4, 5, 7, 7, 8, 9, 0, 10, 0, 0, 0, 13, 0, 0, 16, 0], [0, 63, 64, 0, 0, 40, 41, 0, 9, 0, 10, 0, 0, 0, 42, 0, 63, 0, 0], [0, 2, 3, 4, 5, 6, 7, 8, 9, 0, 10, 11, 11, 12, 13, 0, 2, 16, 0], [0, 0, 0, 18, 65, 20, 21, 22, 23, 0, 24, 0, 0, 25, 26, 0, 0, 27, 0], [0, 0, 0, 0, 66, 67, 67, 8, 9, 0, 10, 0, 0, 0, 68, 0, 0, 0, 0], [0, 0, 0, 69, 0, 70, 70, 0, 71, 0, 72, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 73, 19, 74, 74, 22, 23, 0, 24, 0, 0, 0, 26, 0, 0, 27, 0], [0, 75, 0, 0, 0, 76, 77, 0, 23, 0, 24, 0, 0, 0, 78, 0, 75, 0, 0], [0, 0, 0, 0, 79, 80, 80, 22, 23, 0, 0, 0, 0, 25, 79, 0, 0, 0, 0], [0, 0, 0, 18, 19, 20, 74, 22, 23, 0, 24, 0, 0, 25, 26, 0, 0, 27, 0], [0, 0, 0, 81, 82, 83, 84, 85, 23, 0, 24, 0, 0, 0, 78, 0, 0, 0, 0], [0, 0, 0, 0, 0, 86, 0, 0, 87, 0, 24, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 88, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 18, 19, 74, 74, 22, 23, 0, 24, 0, 0, 0, 26, 0, 0, 27, 0], [0, 89, 90, 0, 0, 76, 77, 0, 23, 0, 24, 0, 0, 0, 78, 0, 89, 0, 0], [0, 0, 0, 0, 91, 92, 92, 22, 23, 0, 24, 0, 0, 0, 93, 0, 0, 0, 0], [0, 0, 0, 94, 29, 95, 31, 32, 33, 0, 34, 0, 0, 0, 36, 0, 0, 37, 0], [0, 96, 0, 0, 0, 97, 98, 0, 33, 0, 34, 0, 0, 0, 99, 0, 96, 0, 0], [0, 0, 0, 0, 100, 101, 101, 32, 33, 0, 0, 0, 0, 35, 100, 0, 0, 0, 0], [0, 0, 0, 0, 100, 101, 101, 32, 33, 0, 0, 0, 0, 0, 100, 0, 0, 0, 0], [0, 0, 0, 102, 103, 104, 105, 106, 33, 0, 34, 0, 0, 0, 99, 0, 0, 0, 0], [0, 0, 0, 0, 0, 107, 0, 0, 108, 0, 34, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 109, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 28, 29, 95, 31, 32, 33, 0, 34, 0, 0, 0, 36, 0, 0, 37, 0], [0, 110, 111, 0, 0, 97, 98, 0, 33, 0, 34, 0, 0, 0, 99, 0, 110, 0, 0], [0, 0, 0, 0, 112, 113, 113, 32, 33, 0, 34, 0, 0, 0, 114, 0, 0, 0, 0], [0, 0, 0, 0, 5, 7, 7, 8, 9, 0, 10, 0, 0, 0, 13, 0, 0, 16, 0], [0, 0, 0, 115, 116, 117, 118, 8, 9, 0, 10, 0, 0, 119, 120, 0, 0, 16, 0], [0, 0, 0, 0, 0, 121, 121, 0, 9, 0, 10, 0, 0, 0, 42, 0, 0, 0, 0], [0, 39, 0, 122, 0, 123, 123, 8, 9, 0, 10, 0, 0, 0, 42, 0, 39, 0, 0], [0, 124, 64, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 124, 0, 0], [0, 39, 0, 0, 0, 121, 125, 0, 9, 0, 10, 0, 0, 0, 42, 0, 39, 0, 0], [0, 0, 0, 0, 0, 126, 126, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 46, 47, 48, 49, 9, 0, 10, 0, 0, 0, 42, 0, 0, 0, 0], [0, 0, 0, 0, 0, 47, 47, 49, 9, 0, 10, 0, 0, 0, 42, 0, 0, 0, 0], [0, 0, 0, 0, 0, 127, 127, 49, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 128, 127, 127, 49, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 129, 130, 131, 132, 133, 9, 0, 10, 0, 0, 0, 42, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 10, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 50, 0, 0, 0, 0, 10, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 134, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 135, 54, 56, 56, 57, 58, 0, 59, 0, 0, 0, 61, 0, 0, 62, 0], [0, 136, 0, 0, 0, 137, 138, 0, 58, 0, 59, 0, 0, 0, 139, 0, 136, 0, 0], [0, 0, 0, 0, 140, 141, 141, 57, 58, 0, 0, 0, 0, 60, 140, 0, 0, 0, 0], [0, 0, 0, 0, 140, 141, 141, 57, 58, 0, 0, 0, 0, 0, 140, 0, 0, 0, 0], [0, 0, 0, 142, 143, 144, 145, 146, 58, 0, 59, 0, 0, 0, 139, 0, 0, 0, 0], [0, 0, 0, 0, 0, 147, 0, 0, 148, 0, 59, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 149, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 53, 54, 56, 56, 57, 58, 0, 59, 0, 0, 0, 61, 0, 0, 62, 0], [0, 150, 151, 0, 0, 137, 138, 0, 58, 0, 59, 0, 0, 0, 139, 0, 150, 0, 0], [0, 0, 0, 0, 152, 153, 153, 57, 58, 0, 59, 0, 0, 0, 154, 0, 0, 0, 0], [0, 0, 0, 155, 116, 156, 157, 8, 9, 0, 10, 0, 0, 158, 120, 0, 0, 16, 0], [0, 0, 0, 0, 0, 121, 121, 0, 9, 0, 10, 0, 0, 0, 0, 0, 0, 0, 0], [0, 75, 3, 4, 5, 159, 160, 8, 161, 0, 162, 0, 11, 12, 163, 0, 75, 16, 0], [0, 0, 0, 0, 0, 40, 164, 0, 9, 0, 10, 0, 0, 0, 42, 0, 0, 0, 0], [0, 0, 0, 0, 165, 44, 44, 8, 9, 0, 0, 0, 0, 0, 165, 0, 0, 0, 0], [0, 124, 64, 0, 0, 40, 164, 0, 9, 0, 10, 0, 0, 0, 42, 0, 124, 0, 0], [0, 0, 0, 0, 0, 70, 70, 0, 71, 0, 72, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 71, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 166, 0, 0, 167, 0, 72, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 168, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 19, 74, 74, 22, 23, 0, 24, 0, 0, 0, 26, 0, 0, 27, 0], [0, 0, 0, 0, 79, 80, 80, 22, 23, 0, 0, 0, 0, 0, 79, 0, 0, 0, 0], [0, 0, 0, 169, 170, 171, 172, 22, 23, 0, 24, 0, 0, 173, 174, 0, 0, 27, 0], [0, 0, 0, 0, 0, 175, 175, 0, 23, 0, 24, 0, 0, 0, 78, 0, 0, 0, 0], [0, 75, 0, 176, 0, 177, 177, 22, 23, 0, 24, 0, 0, 0, 78, 0, 75, 0, 0], [0, 178, 90, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 178, 0, 0], [0, 75, 0, 0, 0, 175, 179, 0, 23, 0, 24, 0, 0, 0, 78, 0, 75, 0, 0], [0, 0, 0, 0, 0, 180, 180, 22, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 82, 83, 84, 85, 23, 0, 24, 0, 0, 0, 78, 0, 0, 0, 0], [0, 0, 0, 0, 0, 83, 83, 85, 23, 0, 24, 0, 0, 0, 78, 0, 0, 0, 0], [0, 0, 0, 0, 0, 181, 181, 85, 23, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 182, 181, 181, 85, 23, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 183, 184, 185, 186, 187, 23, 0, 24, 0, 0, 0, 78, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 24, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 86, 0, 0, 0, 0, 24, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 188, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 189, 170, 190, 191, 22, 23, 0, 24, 0, 0, 192, 174, 0, 0, 27, 0], [0, 0, 0, 0, 0, 175, 175, 0, 23, 0, 24, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 76, 193, 0, 23, 0, 24, 0, 0, 0, 78, 0, 0, 0, 0], [0, 0, 0, 0, 194, 80, 80, 22, 23, 0, 0, 0, 0, 0, 194, 0, 0, 0, 0], [0, 178, 90, 0, 0, 76, 193, 0, 23, 0, 24, 0, 0, 0, 78, 0, 178, 0, 0], [0, 0, 0, 0, 29, 95, 31, 32, 33, 0, 34, 0, 0, 0, 36, 0, 0, 37, 0], [0, 0, 0, 0, 100, 101, 101, 32, 33, 0, 0, 0, 0, 0, 100, 0, 0, 0, 0], [0, 0, 0, 195, 196, 197, 198, 32, 33, 0, 34, 0, 0, 199, 200, 0, 0, 37, 0], [0, 0, 0, 0, 0, 201, 201, 0, 33, 0, 34, 0, 0, 0, 99, 0, 0, 0, 0], [0, 96, 0, 202, 0, 203, 203, 32, 33, 0, 34, 0, 0, 0, 99, 0, 96, 0, 0], [0, 204, 111, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 204, 0, 0], [0, 96, 0, 0, 0, 201, 205, 0, 33, 0, 34, 0, 0, 0, 99, 0, 96, 0, 0], [0, 0, 0, 0, 0, 206, 206, 32, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 103, 104, 105, 106, 33, 0, 34, 0, 0, 0, 99, 0, 0, 0, 0], [0, 0, 0, 0, 0, 104, 104, 106, 33, 0, 34, 0, 0, 0, 99, 0, 0, 0, 0], [0, 0, 0, 0, 0, 207, 207, 106, 33, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 208, 207, 207, 106, 33, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 209, 210, 211, 212, 213, 33, 0, 34, 0, 0, 0, 99, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 34, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 107, 0, 0, 0, 0, 34, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 214, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 215, 196, 216, 217, 32, 33, 0, 34, 0, 0, 218, 200, 0, 0, 37, 0], [0, 0, 0, 0, 0, 201, 201, 0, 33, 0, 34, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 97, 219, 0, 33, 0, 34, 0, 0, 0, 99, 0, 0, 0, 0], [0, 0, 0, 0, 220, 101, 101, 32, 33, 0, 0, 0, 0, 0, 220, 0, 0, 0, 0], [0, 204, 111, 0, 0, 97, 219, 0, 33, 0, 34, 0, 0, 0, 99, 0, 204, 0, 0], [0, 0, 0, 221, 116, 222, 222, 8, 9, 0, 10, 0, 0, 0, 120, 0, 0, 16, 0], [0, 223, 0, 0, 0, 40, 224, 0, 9, 0, 10, 0, 0, 0, 42, 0, 223, 0, 0], [0, 0, 0, 0, 225, 44, 44, 8, 9, 0, 0, 0, 0, 119, 225, 0, 0, 0, 0], [0, 0, 0, 115, 116, 117, 222, 8, 9, 0, 10, 0, 0, 119, 120, 0, 0, 16, 0], [0, 0, 0, 115, 116, 222, 222, 8, 9, 0, 10, 0, 0, 0, 120, 0, 0, 16, 0], [0, 226, 64, 0, 0, 40, 224, 0, 9, 0, 10, 0, 0, 0, 42, 0, 226, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 39, 0, 0, 0, 121, 121, 0, 9, 0, 10, 0, 0, 0, 42, 0, 39, 0, 0], [0, 0, 0, 0, 0, 44, 44, 8, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 227, 0, 228, 229, 0, 9, 0, 10, 0, 0, 230, 0, 0, 0, 0, 0], [0, 39, 0, 122, 0, 121, 121, 0, 9, 0, 10, 0, 0, 0, 42, 0, 39, 0, 0], [0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 231, 231, 49, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 232, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 130, 131, 132, 133, 9, 0, 10, 0, 0, 0, 42, 0, 0, 0, 0], [0, 0, 0, 0, 0, 131, 131, 133, 9, 0, 10, 0, 0, 0, 42, 0, 0, 0, 0], [0, 0, 0, 0, 0, 233, 233, 133, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 234, 233, 233, 133, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 235, 236, 237, 238, 239, 9, 0, 10, 0, 0, 0, 42, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 54, 56, 56, 57, 58, 0, 59, 0, 0, 0, 61, 0, 0, 62, 0], [0, 0, 0, 240, 241, 242, 243, 57, 58, 0, 59, 0, 0, 244, 245, 0, 0, 62, 0], [0, 0, 0, 0, 0, 246, 246, 0, 58, 0, 59, 0, 0, 0, 139, 0, 0, 0, 0], [0, 136, 0, 247, 0, 248, 248, 57, 58, 0, 59, 0, 0, 0, 139, 0, 136, 0, 0], [0, 249, 151, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 249, 0, 0], [0, 136, 0, 0, 0, 246, 250, 0, 58, 0, 59, 0, 0, 0, 139, 0, 136, 0, 0], [0, 0, 0, 0, 0, 251, 251, 57, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 143, 144, 145, 146, 58, 0, 59, 0, 0, 0, 139, 0, 0, 0, 0], [0, 0, 0, 0, 0, 144, 144, 146, 58, 0, 59, 0, 0, 0, 139, 0, 0, 0, 0], [0, 0, 0, 0, 0, 252, 252, 146, 58, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 253, 252, 252, 146, 58, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 254, 255, 256, 257, 258, 58, 0, 59, 0, 0, 0, 139, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 59, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 147, 0, 0, 0, 0, 59, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 259, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 260, 241, 261, 262, 57, 58, 0, 59, 0, 0, 263, 245, 0, 0, 62, 0], [0, 0, 0, 0, 0, 246, 246, 0, 58, 0, 59, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 137, 264, 0, 58, 0, 59, 0, 0, 0, 139, 0, 0, 0, 0], [0, 0, 0, 0, 265, 141, 141, 57, 58, 0, 0, 0, 0, 0, 265, 0, 0, 0, 0], [0, 249, 151, 0, 0, 137, 264, 0, 58, 0, 59, 0, 0, 0, 139, 0, 249, 0, 0], [0, 0, 0, 221, 116, 222, 222, 8, 9, 0, 10, 0, 0, 0, 120, 0, 0, 16, 0], [0, 0, 0, 0, 225, 44, 44, 8, 9, 0, 0, 0, 0, 158, 225, 0, 0, 0, 0], [0, 0, 0, 155, 116, 156, 222, 8, 9, 0, 10, 0, 0, 158, 120, 0, 0, 16, 0], [0, 0, 0, 155, 116, 222, 222, 8, 9, 0, 10, 0, 0, 0, 120, 0, 0, 16, 0], [0, 0, 0, 0, 43, 266, 266, 8, 161, 0, 24, 0, 0, 12, 267, 0, 0, 0, 0], [0, 75, 0, 176, 43, 268, 268, 269, 161, 0, 24, 0, 0, 0, 267, 0, 75, 0, 0], [0, 0, 0, 0, 0, 270, 0, 0, 271, 0, 162, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 272, 0, 0, 0, 0, 0, 0, 0, 0], [0, 273, 274, 0, 0, 40, 41, 0, 9, 0, 10, 0, 0, 0, 42, 0, 273, 0, 0], [0, 0, 0, 40, 0, 123, 123, 8, 9, 0, 10, 0, 0, 0, 42, 0, 0, 0, 0], [0, 0, 0, 0, 0, 121, 275, 0, 9, 0, 10, 0, 0, 0, 42, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 72, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 166, 0, 0, 0, 0, 72, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 276, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 277, 170, 278, 278, 22, 23, 0, 24, 0, 0, 0, 174, 0, 0, 27, 0], [0, 279, 0, 0, 0, 76, 280, 0, 23, 0, 24, 0, 0, 0, 78, 0, 279, 0, 0], [0, 0, 0, 0, 281, 80, 80, 22, 23, 0, 0, 0, 0, 173, 281, 0, 0, 0, 0], [0, 0, 0, 169, 170, 171, 278, 22, 23, 0, 24, 0, 0, 173, 174, 0, 0, 27, 0], [0, 0, 0, 169, 170, 278, 278, 22, 23, 0, 24, 0, 0, 0, 174, 0, 0, 27, 0], [0, 282, 90, 0, 0, 76, 280, 0, 23, 0, 24, 0, 0, 0, 78, 0, 282, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 23, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 75, 0, 0, 0, 175, 175, 0, 23, 0, 24, 0, 0, 0, 78, 0, 75, 0, 0], [0, 0, 0, 0, 0, 80, 80, 22, 23, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 283, 0, 284, 285, 0, 23, 0, 24, 0, 0, 286, 0, 0, 0, 0, 0], [0, 75, 0, 176, 0, 175, 175, 0, 23, 0, 24, 0, 0, 0, 78, 0, 75, 0, 0], [0, 0, 0, 0, 0, 0, 0, 22, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 287, 287, 85, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 288, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 184, 185, 186, 187, 23, 0, 24, 0, 0, 0, 78, 0, 0, 0, 0], [0, 0, 0, 0, 0, 185, 185, 187, 23, 0, 24, 0, 0, 0, 78, 0, 0, 0, 0], [0, 0, 0, 0, 0, 289, 289, 187, 23, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 290, 289, 289, 187, 23, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 291, 292, 293, 294, 295, 23, 0, 24, 0, 0, 0, 78, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 277, 170, 278, 278, 22, 23, 0, 24, 0, 0, 0, 174, 0, 0, 27, 0], [0, 0, 0, 0, 281, 80, 80, 22, 23, 0, 0, 0, 0, 192, 281, 0, 0, 0, 0], [0, 0, 0, 189, 170, 190, 278, 22, 23, 0, 24, 0, 0, 192, 174, 0, 0, 27, 0], [0, 0, 0, 189, 170, 278, 278, 22, 23, 0, 24, 0, 0, 0, 174, 0, 0, 27, 0], [0, 0, 0, 76, 0, 177, 177, 22, 23, 0, 24, 0, 0, 0, 78, 0, 0, 0, 0], [0, 0, 0, 0, 0, 175, 296, 0, 23, 0, 24, 0, 0, 0, 78, 0, 0, 0, 0], [0, 0, 0, 297, 196, 298, 298, 32, 33, 0, 34, 0, 0, 0, 200, 0, 0, 37, 0], [0, 299, 0, 0, 0, 97, 300, 0, 33, 0, 34, 0, 0, 0, 99, 0, 299, 0, 0], [0, 0, 0, 0, 301, 101, 101, 32, 33, 0, 0, 0, 0, 199, 301, 0, 0, 0, 0], [0, 0, 0, 195, 196, 197, 298, 32, 33, 0, 34, 0, 0, 199, 200, 0, 0, 37, 0], [0, 0, 0, 195, 196, 298, 298, 32, 33, 0, 34, 0, 0, 0, 200, 0, 0, 37, 0], [0, 302, 111, 0, 0, 97, 300, 0, 33, 0, 34, 0, 0, 0, 99, 0, 302, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 33, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 96, 0, 0, 0, 201, 201, 0, 33, 0, 34, 0, 0, 0, 99, 0, 96, 0, 0], [0, 0, 0, 0, 0, 101, 101, 32, 33, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 303, 0, 304, 305, 0, 33, 0, 34, 0, 0, 306, 0, 0, 0, 0, 0], [0, 96, 0, 202, 0, 201, 201, 0, 33, 0, 34, 0, 0, 0, 99, 0, 96, 0, 0], [0, 0, 0, 0, 0, 0, 0, 32, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 307, 307, 106, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 308, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 210, 211, 212, 213, 33, 0, 34, 0, 0, 0, 99, 0, 0, 0, 0], [0, 0, 0, 0, 0, 211, 211, 213, 33, 0, 34, 0, 0, 0, 99, 0, 0, 0, 0], [0, 0, 0, 0, 0, 309, 309, 213, 33, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 310, 309, 309, 213, 33, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 311, 312, 313, 314, 315, 33, 0, 34, 0, 0, 0, 99, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 297, 196, 298, 298, 32, 33, 0, 34, 0, 0, 0, 200, 0, 0, 37, 0], [0, 0, 0, 0, 301, 101, 101, 32, 33, 0, 0, 0, 0, 218, 301, 0, 0, 0, 0], [0, 0, 0, 215, 196, 216, 298, 32, 33, 0, 34, 0, 0, 218, 200, 0, 0, 37, 0], [0, 0, 0, 215, 196, 298, 298, 32, 33, 0, 34, 0, 0, 0, 200, 0, 0, 37, 0], [0, 0, 0, 97, 0, 203, 203, 32, 33, 0, 34, 0, 0, 0, 99, 0, 0, 0, 0], [0, 0, 0, 0, 0, 201, 316, 0, 33, 0, 34, 0, 0, 0, 99, 0, 0, 0, 0], [0, 0, 0, 0, 116, 222, 222, 8, 9, 0, 10, 0, 0, 0, 120, 0, 0, 16, 0], [0, 0, 0, 0, 225, 44, 44, 8, 9, 0, 0, 0, 0, 0, 225, 0, 0, 0, 0], [0, 0, 0, 317, 318, 319, 320, 8, 9, 0, 10, 0, 0, 321, 322, 0, 0, 16, 0], [0, 223, 0, 323, 0, 123, 123, 8, 9, 0, 10, 0, 0, 0, 42, 0, 223, 0, 0], [0, 223, 0, 0, 0, 121, 324, 0, 9, 0, 10, 0, 0, 0, 42, 0, 223, 0, 0], [0, 0, 0, 325, 318, 326, 327, 8, 9, 0, 10, 0, 0, 328, 322, 0, 0, 16, 0], [0, 0, 0, 64, 0, 121, 121, 0, 9, 0, 10, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 9, 0, 0, 0, 0, 230, 0, 0, 0, 0, 0], [0, 0, 0, 227, 0, 228, 121, 0, 9, 0, 10, 0, 0, 230, 0, 0, 0, 0, 0], [0, 0, 0, 227, 0, 121, 121, 0, 9, 0, 10, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 49, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 46, 0, 0], [0, 0, 0, 0, 0, 329, 329, 133, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 330, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 236, 237, 238, 239, 9, 0, 10, 0, 0, 0, 42, 0, 0, 0, 0], [0, 0, 0, 0, 0, 237, 237, 239, 9, 0, 10, 0, 0, 0, 42, 0, 0, 0, 0], [0, 0, 0, 0, 0, 331, 331, 239, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 332, 331, 331, 239, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 333, 40, 121, 334, 0, 9, 0, 10, 0, 0, 0, 42, 0, 0, 0, 0], [0, 0, 0, 335, 241, 336, 336, 57, 58, 0, 59, 0, 0, 0, 245, 0, 0, 62, 0], [0, 337, 0, 0, 0, 137, 338, 0, 58, 0, 59, 0, 0, 0, 139, 0, 337, 0, 0], [0, 0, 0, 0, 339, 141, 141, 57, 58, 0, 0, 0, 0, 244, 339, 0, 0, 0, 0], [0, 0, 0, 240, 241, 242, 336, 57, 58, 0, 59, 0, 0, 244, 245, 0, 0, 62, 0], [0, 0, 0, 240, 241, 336, 336, 57, 58, 0, 59, 0, 0, 0, 245, 0, 0, 62, 0], [0, 340, 151, 0, 0, 137, 338, 0, 58, 0, 59, 0, 0, 0, 139, 0, 340, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 58, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 136, 0, 0, 0, 246, 246, 0, 58, 0, 59, 0, 0, 0, 139, 0, 136, 0, 0], [0, 0, 0, 0, 0, 141, 141, 57, 58, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 341, 0, 342, 343, 0, 58, 0, 59, 0, 0, 344, 0, 0, 0, 0, 0], [0, 136, 0, 247, 0, 246, 246, 0, 58, 0, 59, 0, 0, 0, 139, 0, 136, 0, 0], [0, 0, 0, 0, 0, 0, 0, 57, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 345, 345, 146, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 346, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 255, 256, 257, 258, 58, 0, 59, 0, 0, 0, 139, 0, 0, 0, 0], [0, 0, 0, 0, 0, 256, 256, 258, 58, 0, 59, 0, 0, 0, 139, 0, 0, 0, 0], [0, 0, 0, 0, 0, 347, 347, 258, 58, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 348, 347, 347, 258, 58, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 349, 350, 351, 352, 353, 58, 0, 59, 0, 0, 0, 139, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 335, 241, 336, 336, 57, 58, 0, 59, 0, 0, 0, 245, 0, 0, 62, 0], [0, 0, 0, 0, 339, 141, 141, 57, 58, 0, 0, 0, 0, 263, 339, 0, 0, 0, 0], [0, 0, 0, 260, 241, 261, 336, 57, 58, 0, 59, 0, 0, 263, 245, 0, 0, 62, 0], [0, 0, 0, 260, 241, 336, 336, 57, 58, 0, 59, 0, 0, 0, 245, 0, 0, 62, 0], [0, 0, 0, 137, 0, 248, 248, 57, 58, 0, 59, 0, 0, 0, 139, 0, 0, 0, 0], [0, 0, 0, 0, 0, 246, 354, 0, 58, 0, 59, 0, 0, 0, 139, 0, 0, 0, 0], [0, 0, 0, 0, 0, 126, 126, 8, 23, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 355, 90, 0, 0, 121, 125, 0, 9, 0, 10, 0, 0, 0, 42, 0, 355, 0, 0], [0, 0, 0, 0, 0, 356, 356, 269, 23, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 357, 358, 359, 360, 361, 161, 0, 162, 0, 0, 0, 362, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 162, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 270, 0, 0, 0, 0, 162, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 363, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 364, 116, 365, 366, 8, 161, 0, 162, 0, 0, 367, 120, 0, 0, 16, 0], [0, 0, 0, 0, 0, 368, 368, 0, 161, 0, 162, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 40, 0, 121, 121, 0, 9, 0, 10, 0, 0, 0, 42, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 170, 278, 278, 22, 23, 0, 24, 0, 0, 0, 174, 0, 0, 27, 0], [0, 0, 0, 0, 281, 80, 80, 22, 23, 0, 0, 0, 0, 0, 281, 0, 0, 0, 0], [0, 0, 0, 369, 370, 371, 372, 22, 23, 0, 24, 0, 0, 373, 374, 0, 0, 27, 0], [0, 279, 0, 375, 0, 177, 177, 22, 23, 0, 24, 0, 0, 0, 78, 0, 279, 0, 0], [0, 279, 0, 0, 0, 175, 376, 0, 23, 0, 24, 0, 0, 0, 78, 0, 279, 0, 0], [0, 0, 0, 377, 370, 378, 379, 22, 23, 0, 24, 0, 0, 380, 374, 0, 0, 27, 0], [0, 0, 0, 90, 0, 175, 175, 0, 23, 0, 24, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 23, 0, 0, 0, 0, 286, 0, 0, 0, 0, 0], [0, 0, 0, 283, 0, 284, 175, 0, 23, 0, 24, 0, 0, 286, 0, 0, 0, 0, 0], [0, 0, 0, 283, 0, 175, 175, 0, 23, 0, 24, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 85, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 82, 0, 0], [0, 0, 0, 0, 0, 381, 381, 187, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 382, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 292, 293, 294, 295, 23, 0, 24, 0, 0, 0, 78, 0, 0, 0, 0], [0, 0, 0, 0, 0, 293, 293, 295, 23, 0, 24, 0, 0, 0, 78, 0, 0, 0, 0], [0, 0, 0, 0, 0, 383, 383, 295, 23, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 384, 383, 383, 295, 23, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 385, 76, 175, 386, 0, 23, 0, 24, 0, 0, 0, 78, 0, 0, 0, 0], [0, 0, 0, 76, 0, 175, 175, 0, 23, 0, 24, 0, 0, 0, 78, 0, 0, 0, 0], [0, 0, 0, 0, 196, 298, 298, 32, 33, 0, 34, 0, 0, 0, 200, 0, 0, 37, 0], [0, 0, 0, 0, 301, 101, 101, 32, 33, 0, 0, 0, 0, 0, 301, 0, 0, 0, 0], [0, 0, 0, 387, 388, 389, 390, 32, 33, 0, 34, 0, 0, 391, 392, 0, 0, 37, 0], [0, 299, 0, 393, 0, 203, 203, 32, 33, 0, 34, 0, 0, 0, 99, 0, 299, 0, 0], [0, 299, 0, 0, 0, 201, 394, 0, 33, 0, 34, 0, 0, 0, 99, 0, 299, 0, 0], [0, 0, 0, 395, 388, 396, 397, 32, 33, 0, 34, 0, 0, 398, 392, 0, 0, 37, 0], [0, 0, 0, 111, 0, 201, 201, 0, 33, 0, 34, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 33, 0, 0, 0, 0, 306, 0, 0, 0, 0, 0], [0, 0, 0, 303, 0, 304, 201, 0, 33, 0, 34, 0, 0, 306, 0, 0, 0, 0, 0], [0, 0, 0, 303, 0, 201, 201, 0, 33, 0, 34, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 106, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 103, 0, 0], [0, 0, 0, 0, 0, 399, 399, 213, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 400, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 312, 313, 314, 315, 33, 0, 34, 0, 0, 0, 99, 0, 0, 0, 0], [0, 0, 0, 0, 0, 313, 313, 315, 33, 0, 34, 0, 0, 0, 99, 0, 0, 0, 0], [0, 0, 0, 0, 0, 401, 401, 315, 33, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 402, 401, 401, 315, 33, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 403, 97, 201, 404, 0, 33, 0, 34, 0, 0, 0, 99, 0, 0, 0, 0], [0, 0, 0, 97, 0, 201, 201, 0, 33, 0, 34, 0, 0, 0, 99, 0, 0, 0, 0], [0, 0, 0, 405, 318, 406, 406, 8, 9, 0, 10, 0, 0, 0, 322, 0, 0, 16, 0], [0, 407, 0, 0, 0, 40, 408, 0, 9, 0, 10, 0, 0, 0, 42, 0, 407, 0, 0], [0, 0, 0, 0, 409, 44, 44, 8, 9, 0, 0, 0, 0, 321, 409, 0, 0, 0, 0], [0, 0, 0, 317, 318, 319, 406, 8, 9, 0, 10, 0, 0, 321, 322, 0, 0, 16, 0], [0, 0, 0, 317, 318, 406, 406, 8, 9, 0, 10, 0, 0, 0, 322, 0, 0, 16, 0], [0, 410, 64, 0, 0, 40, 408, 0, 9, 0, 10, 0, 0, 0, 42, 0, 410, 0, 0], [0, 223, 0, 0, 0, 121, 121, 0, 9, 0, 10, 0, 0, 0, 42, 0, 223, 0, 0], [0, 223, 0, 323, 0, 121, 121, 0, 9, 0, 10, 0, 0, 0, 42, 0, 223, 0, 0], [0, 0, 0, 405, 318, 406, 406, 8, 9, 0, 10, 0, 0, 0, 322, 0, 0, 16, 0], [0, 0, 0, 0, 409, 44, 44, 8, 9, 0, 0, 0, 0, 328, 409, 0, 0, 0, 0], [0, 0, 0, 325, 318, 326, 406, 8, 9, 0, 10, 0, 0, 328, 322, 0, 0, 16, 0], [0, 0, 0, 325, 318, 406, 406, 8, 9, 0, 10, 0, 0, 0, 322, 0, 0, 16, 0], [0, 0, 0, 0, 0, 0, 0, 133, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 130, 0, 0], [0, 0, 0, 0, 0, 411, 411, 239, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 412, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 40, 121, 334, 0, 9, 0, 10, 0, 0, 0, 42, 0, 0, 0, 0], [0, 0, 0, 0, 413, 0, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 241, 336, 336, 57, 58, 0, 59, 0, 0, 0, 245, 0, 0, 62, 0], [0, 0, 0, 0, 339, 141, 141, 57, 58, 0, 0, 0, 0, 0, 339, 0, 0, 0, 0], [0, 0, 0, 414, 415, 416, 417, 57, 58, 0, 59, 0, 0, 418, 419, 0, 0, 62, 0], [0, 337, 0, 420, 0, 248, 248, 57, 58, 0, 59, 0, 0, 0, 139, 0, 337, 0, 0], [0, 337, 0, 0, 0, 246, 421, 0, 58, 0, 59, 0, 0, 0, 139, 0, 337, 0, 0], [0, 0, 0, 422, 415, 423, 424, 57, 58, 0, 59, 0, 0, 425, 419, 0, 0, 62, 0], [0, 0, 0, 151, 0, 246, 246, 0, 58, 0, 59, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 58, 0, 0, 0, 0, 344, 0, 0, 0, 0, 0], [0, 0, 0, 341, 0, 342, 246, 0, 58, 0, 59, 0, 0, 344, 0, 0, 0, 0, 0], [0, 0, 0, 341, 0, 246, 246, 0, 58, 0, 59, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 146, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 143, 0, 0], [0, 0, 0, 0, 0, 426, 426, 258, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 427, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 350, 351, 352, 353, 58, 0, 59, 0, 0, 0, 139, 0, 0, 0, 0], [0, 0, 0, 0, 0, 351, 351, 353, 58, 0, 59, 0, 0, 0, 139, 0, 0, 0, 0], [0, 0, 0, 0, 0, 428, 428, 353, 58, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 429, 428, 428, 353, 58, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 430, 137, 246, 431, 0, 58, 0, 59, 0, 0, 0, 139, 0, 0, 0, 0], [0, 0, 0, 137, 0, 246, 246, 0, 58, 0, 59, 0, 0, 0, 139, 0, 0, 0, 0], [0, 0, 0, 432, 116, 433, 434, 8, 161, 0, 162, 0, 0, 435, 120, 0, 0, 16, 0], [0, 0, 0, 0, 0, 180, 180, 269, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 358, 359, 360, 361, 161, 0, 162, 0, 0, 0, 362, 0, 0, 0, 0], [0, 0, 0, 0, 0, 359, 359, 361, 161, 0, 162, 0, 0, 0, 362, 0, 0, 0, 0], [0, 0, 0, 0, 0, 436, 436, 361, 161, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 437, 436, 436, 361, 161, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 438, 439, 440, 441, 442, 161, 0, 162, 0, 0, 0, 362, 0, 0, 0, 0], [0, 443, 274, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 443, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 444, 116, 445, 445, 8, 161, 0, 162, 0, 0, 0, 120, 0, 0, 16, 0], [0, 0, 0, 0, 225, 44, 44, 8, 161, 0, 0, 0, 0, 367, 225, 0, 0, 0, 0], [0, 0, 0, 364, 116, 365, 445, 8, 161, 0, 162, 0, 0, 367, 120, 0, 0, 16, 0], [0, 0, 0, 364, 116, 445, 445, 8, 161, 0, 162, 0, 0, 0, 120, 0, 0, 16, 0], [0, 0, 0, 0, 0, 0, 0, 0, 161, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 446, 370, 447, 447, 22, 23, 0, 24, 0, 0, 0, 374, 0, 0, 27, 0], [0, 448, 0, 0, 0, 76, 449, 0, 23, 0, 24, 0, 0, 0, 78, 0, 448, 0, 0], [0, 0, 0, 0, 450, 80, 80, 22, 23, 0, 0, 0, 0, 373, 450, 0, 0, 0, 0], [0, 0, 0, 369, 370, 371, 447, 22, 23, 0, 24, 0, 0, 373, 374, 0, 0, 27, 0], [0, 0, 0, 369, 370, 447, 447, 22, 23, 0, 24, 0, 0, 0, 374, 0, 0, 27, 0], [0, 451, 90, 0, 0, 76, 449, 0, 23, 0, 24, 0, 0, 0, 78, 0, 451, 0, 0], [0, 279, 0, 0, 0, 175, 175, 0, 23, 0, 24, 0, 0, 0, 78, 0, 279, 0, 0], [0, 279, 0, 375, 0, 175, 175, 0, 23, 0, 24, 0, 0, 0, 78, 0, 279, 0, 0], [0, 0, 0, 446, 370, 447, 447, 22, 23, 0, 24, 0, 0, 0, 374, 0, 0, 27, 0], [0, 0, 0, 0, 450, 80, 80, 22, 23, 0, 0, 0, 0, 380, 450, 0, 0, 0, 0], [0, 0, 0, 377, 370, 378, 447, 22, 23, 0, 24, 0, 0, 380, 374, 0, 0, 27, 0], [0, 0, 0, 377, 370, 447, 447, 22, 23, 0, 24, 0, 0, 0, 374, 0, 0, 27, 0], [0, 0, 0, 0, 0, 0, 0, 187, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 184, 0, 0], [0, 0, 0, 0, 0, 452, 452, 295, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 453, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 76, 175, 386, 0, 23, 0, 24, 0, 0, 0, 78, 0, 0, 0, 0], [0, 0, 0, 0, 454, 0, 0, 0, 23, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 455, 388, 456, 456, 32, 33, 0, 34, 0, 0, 0, 392, 0, 0, 37, 0], [0, 457, 0, 0, 0, 97, 458, 0, 33, 0, 34, 0, 0, 0, 99, 0, 457, 0, 0], [0, 0, 0, 0, 459, 101, 101, 32, 33, 0, 0, 0, 0, 391, 459, 0, 0, 0, 0], [0, 0, 0, 387, 388, 389, 456, 32, 33, 0, 34, 0, 0, 391, 392, 0, 0, 37, 0], [0, 0, 0, 387, 388, 456, 456, 32, 33, 0, 34, 0, 0, 0, 392, 0, 0, 37, 0], [0, 460, 111, 0, 0, 97, 458, 0, 33, 0, 34, 0, 0, 0, 99, 0, 460, 0, 0], [0, 299, 0, 0, 0, 201, 201, 0, 33, 0, 34, 0, 0, 0, 99, 0, 299, 0, 0], [0, 299, 0, 393, 0, 201, 201, 0, 33, 0, 34, 0, 0, 0, 99, 0, 299, 0, 0], [0, 0, 0, 455, 388, 456, 456, 32, 33, 0, 34, 0, 0, 0, 392, 0, 0, 37, 0], [0, 0, 0, 0, 459, 101, 101, 32, 33, 0, 0, 0, 0, 398, 459, 0, 0, 0, 0], [0, 0, 0, 395, 388, 396, 456, 32, 33, 0, 34, 0, 0, 398, 392, 0, 0, 37, 0], [0, 0, 0, 395, 388, 456, 456, 32, 33, 0, 34, 0, 0, 0, 392, 0, 0, 37, 0], [0, 0, 0, 0, 0, 0, 0, 213, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 210, 0, 0], [0, 0, 0, 0, 0, 461, 461, 315, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 462, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 97, 201, 404, 0, 33, 0, 34, 0, 0, 0, 99, 0, 0, 0, 0], [0, 0, 0, 0, 463, 0, 0, 0, 33, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 318, 406, 406, 8, 9, 0, 10, 0, 0, 0, 322, 0, 0, 16, 0], [0, 0, 0, 0, 409, 44, 44, 8, 9, 0, 0, 0, 0, 0, 409, 0, 0, 0, 0], [0, 0, 0, 464, 465, 466, 467, 8, 9, 0, 10, 0, 0, 468, 469, 0, 0, 16, 0], [0, 407, 0, 470, 0, 123, 123, 8, 9, 0, 10, 0, 0, 0, 42, 0, 407, 0, 0], [0, 407, 0, 0, 0, 121, 471, 0, 9, 0, 10, 0, 0, 0, 42, 0, 407, 0, 0], [0, 0, 0, 472, 465, 473, 474, 8, 9, 0, 10, 0, 0, 475, 469, 0, 0, 16, 0], [0, 0, 0, 0, 0, 0, 0, 239, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 236, 0, 0], [0, 0, 0, 0, 0, 0, 476, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 477, 415, 478, 478, 57, 58, 0, 59, 0, 0, 0, 419, 0, 0, 62, 0], [0, 479, 0, 0, 0, 137, 480, 0, 58, 0, 59, 0, 0, 0, 139, 0, 479, 0, 0], [0, 0, 0, 0, 481, 141, 141, 57, 58, 0, 0, 0, 0, 418, 481, 0, 0, 0, 0], [0, 0, 0, 414, 415, 416, 478, 57, 58, 0, 59, 0, 0, 418, 419, 0, 0, 62, 0], [0, 0, 0, 414, 415, 478, 478, 57, 58, 0, 59, 0, 0, 0, 419, 0, 0, 62, 0], [0, 482, 151, 0, 0, 137, 480, 0, 58, 0, 59, 0, 0, 0, 139, 0, 482, 0, 0], [0, 337, 0, 0, 0, 246, 246, 0, 58, 0, 59, 0, 0, 0, 139, 0, 337, 0, 0], [0, 337, 0, 420, 0, 246, 246, 0, 58, 0, 59, 0, 0, 0, 139, 0, 337, 0, 0], [0, 0, 0, 477, 415, 478, 478, 57, 58, 0, 59, 0, 0, 0, 419, 0, 0, 62, 0], [0, 0, 0, 0, 481, 141, 141, 57, 58, 0, 0, 0, 0, 425, 481, 0, 0, 0, 0], [0, 0, 0, 422, 415, 423, 478, 57, 58, 0, 59, 0, 0, 425, 419, 0, 0, 62, 0], [0, 0, 0, 422, 415, 478, 478, 57, 58, 0, 59, 0, 0, 0, 419, 0, 0, 62, 0], [0, 0, 0, 0, 0, 0, 0, 258, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0], [0, 0, 0, 0, 0, 483, 483, 353, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 484, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 137, 246, 431, 0, 58, 0, 59, 0, 0, 0, 139, 0, 0, 0, 0], [0, 0, 0, 0, 485, 0, 0, 0, 58, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 444, 116, 445, 445, 8, 161, 0, 162, 0, 0, 0, 120, 0, 0, 16, 0], [0, 0, 0, 0, 225, 44, 44, 8, 161, 0, 0, 0, 0, 435, 225, 0, 0, 0, 0], [0, 0, 0, 432, 116, 433, 445, 8, 161, 0, 162, 0, 0, 435, 120, 0, 0, 16, 0], [0, 0, 0, 432, 116, 445, 445, 8, 161, 0, 162, 0, 0, 0, 120, 0, 0, 16, 0], [0, 0, 0, 0, 0, 486, 486, 361, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 487, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 439, 440, 441, 442, 161, 0, 162, 0, 0, 0, 362, 0, 0, 0, 0], [0, 0, 0, 0, 0, 440, 440, 442, 161, 0, 162, 0, 0, 0, 362, 0, 0, 0, 0], [0, 0, 0, 0, 0, 488, 488, 442, 161, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 489, 488, 488, 442, 161, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 490, 491, 492, 493, 494, 161, 0, 162, 0, 0, 0, 362, 0, 0, 0, 0], [0, 0, 0, 495, 0, 496, 497, 0, 161, 0, 162, 0, 0, 498, 0, 0, 0, 0, 0], [0, 0, 0, 0, 116, 445, 445, 8, 161, 0, 162, 0, 0, 0, 120, 0, 0, 16, 0], [0, 0, 0, 0, 225, 44, 44, 8, 161, 0, 0, 0, 0, 0, 225, 0, 0, 0, 0], [0, 0, 0, 0, 370, 447, 447, 22, 23, 0, 24, 0, 0, 0, 374, 0, 0, 27, 0], [0, 0, 0, 0, 450, 80, 80, 22, 23, 0, 0, 0, 0, 0, 450, 0, 0, 0, 0], [0, 0, 0, 499, 500, 501, 502, 22, 23, 0, 24, 0, 0, 503, 504, 0, 0, 27, 0], [0, 448, 0, 505, 0, 177, 177, 22, 23, 0, 24, 0, 0, 0, 78, 0, 448, 0, 0], [0, 448, 0, 0, 0, 175, 506, 0, 23, 0, 24, 0, 0, 0, 78, 0, 448, 0, 0], [0, 0, 0, 507, 500, 508, 509, 22, 23, 0, 24, 0, 0, 510, 504, 0, 0, 27, 0], [0, 0, 0, 0, 0, 0, 0, 295, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 292, 0, 0], [0, 0, 0, 0, 0, 0, 511, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 388, 456, 456, 32, 33, 0, 34, 0, 0, 0, 392, 0, 0, 37, 0], [0, 0, 0, 0, 459, 101, 101, 32, 33, 0, 0, 0, 0, 0, 459, 0, 0, 0, 0], [0, 0, 0, 512, 513, 514, 515, 32, 33, 0, 34, 0, 0, 516, 517, 0, 0, 37, 0], [0, 457, 0, 518, 0, 203, 203, 32, 33, 0, 34, 0, 0, 0, 99, 0, 457, 0, 0], [0, 457, 0, 0, 0, 201, 519, 0, 33, 0, 34, 0, 0, 0, 99, 0, 457, 0, 0], [0, 0, 0, 520, 513, 521, 522, 32, 33, 0, 34, 0, 0, 523, 517, 0, 0, 37, 0], [0, 0, 0, 0, 0, 0, 0, 315, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 312, 0, 0], [0, 0, 0, 0, 0, 0, 524, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 525, 465, 526, 526, 8, 9, 0, 10, 0, 0, 0, 469, 0, 0, 16, 0], [0, 527, 0, 0, 0, 40, 528, 0, 9, 0, 10, 0, 0, 0, 42, 0, 527, 0, 0], [0, 0, 0, 0, 529, 44, 44, 8, 9, 0, 0, 0, 0, 468, 529, 0, 0, 0, 0], [0, 0, 0, 464, 465, 466, 526, 8, 9, 0, 10, 0, 0, 468, 469, 0, 0, 16, 0], [0, 0, 0, 464, 465, 526, 526, 8, 9, 0, 10, 0, 0, 0, 469, 0, 0, 16, 0], [0, 530, 64, 0, 0, 40, 528, 0, 9, 0, 10, 0, 0, 0, 42, 0, 530, 0, 0], [0, 407, 0, 0, 0, 121, 121, 0, 9, 0, 10, 0, 0, 0, 42, 0, 407, 0, 0], [0, 407, 0, 470, 0, 121, 121, 0, 9, 0, 10, 0, 0, 0, 42, 0, 407, 0, 0], [0, 0, 0, 525, 465, 526, 526, 8, 9, 0, 10, 0, 0, 0, 469, 0, 0, 16, 0], [0, 0, 0, 0, 529, 44, 44, 8, 9, 0, 0, 0, 0, 475, 529, 0, 0, 0, 0], [0, 0, 0, 472, 465, 473, 526, 8, 9, 0, 10, 0, 0, 475, 469, 0, 0, 16, 0], [0, 0, 0, 472, 465, 526, 526, 8, 9, 0, 10, 0, 0, 0, 469, 0, 0, 16, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 40, 0, 0], [0, 0, 0, 0, 415, 478, 478, 57, 58, 0, 59, 0, 0, 0, 419, 0, 0, 62, 0], [0, 0, 0, 0, 481, 141, 141, 57, 58, 0, 0, 0, 0, 0, 481, 0, 0, 0, 0], [0, 0, 0, 531, 532, 533, 534, 57, 58, 0, 59, 0, 0, 535, 536, 0, 0, 62, 0], [0, 479, 0, 537, 0, 248, 248, 57, 58, 0, 59, 0, 0, 0, 139, 0, 479, 0, 0], [0, 479, 0, 0, 0, 246, 538, 0, 58, 0, 59, 0, 0, 0, 139, 0, 479, 0, 0], [0, 0, 0, 539, 532, 540, 541, 57, 58, 0, 59, 0, 0, 542, 536, 0, 0, 62, 0], [0, 0, 0, 0, 0, 0, 0, 353, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 350, 0, 0], [0, 0, 0, 0, 0, 0, 543, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 361, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 358, 0, 0], [0, 0, 0, 0, 0, 544, 544, 442, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 545, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 491, 492, 493, 494, 161, 0, 162, 0, 0, 0, 362, 0, 0, 0, 0], [0, 0, 0, 0, 0, 492, 492, 494, 161, 0, 162, 0, 0, 0, 362, 0, 0, 0, 0], [0, 0, 0, 0, 0, 546, 546, 494, 161, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 547, 546, 546, 494, 161, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 548, 549, 368, 550, 0, 161, 0, 162, 0, 0, 0, 362, 0, 0, 0, 0], [0, 0, 0, 274, 0, 368, 368, 0, 161, 0, 162, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 161, 0, 0, 0, 0, 498, 0, 0, 0, 0, 0], [0, 0, 0, 495, 0, 496, 368, 0, 161, 0, 162, 0, 0, 498, 0, 0, 0, 0, 0], [0, 0, 0, 495, 0, 368, 368, 0, 161, 0, 162, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 551, 500, 552, 552, 22, 23, 0, 24, 0, 0, 0, 504, 0, 0, 27, 0], [0, 553, 0, 0, 0, 76, 554, 0, 23, 0, 24, 0, 0, 0, 78, 0, 553, 0, 0], [0, 0, 0, 0, 555, 80, 80, 22, 23, 0, 0, 0, 0, 503, 555, 0, 0, 0, 0], [0, 0, 0, 499, 500, 501, 552, 22, 23, 0, 24, 0, 0, 503, 504, 0, 0, 27, 0], [0, 0, 0, 499, 500, 552, 552, 22, 23, 0, 24, 0, 0, 0, 504, 0, 0, 27, 0], [0, 556, 90, 0, 0, 76, 554, 0, 23, 0, 24, 0, 0, 0, 78, 0, 556, 0, 0], [0, 448, 0, 0, 0, 175, 175, 0, 23, 0, 24, 0, 0, 0, 78, 0, 448, 0, 0], [0, 448, 0, 505, 0, 175, 175, 0, 23, 0, 24, 0, 0, 0, 78, 0, 448, 0, 0], [0, 0, 0, 551, 500, 552, 552, 22, 23, 0, 24, 0, 0, 0, 504, 0, 0, 27, 0], [0, 0, 0, 0, 555, 80, 80, 22, 23, 0, 0, 0, 0, 510, 555, 0, 0, 0, 0], [0, 0, 0, 507, 500, 508, 552, 22, 23, 0, 24, 0, 0, 510, 504, 0, 0, 27, 0], [0, 0, 0, 507, 500, 552, 552, 22, 23, 0, 24, 0, 0, 0, 504, 0, 0, 27, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 76, 0, 0], [0, 0, 0, 557, 513, 558, 558, 32, 33, 0, 34, 0, 0, 0, 517, 0, 0, 37, 0], [0, 559, 0, 0, 0, 97, 560, 0, 33, 0, 34, 0, 0, 0, 99, 0, 559, 0, 0], [0, 0, 0, 0, 561, 101, 101, 32, 33, 0, 0, 0, 0, 516, 561, 0, 0, 0, 0], [0, 0, 0, 512, 513, 514, 558, 32, 33, 0, 34, 0, 0, 516, 517, 0, 0, 37, 0], [0, 0, 0, 512, 513, 558, 558, 32, 33, 0, 34, 0, 0, 0, 517, 0, 0, 37, 0], [0, 562, 111, 0, 0, 97, 560, 0, 33, 0, 34, 0, 0, 0, 99, 0, 562, 0, 0], [0, 457, 0, 0, 0, 201, 201, 0, 33, 0, 34, 0, 0, 0, 99, 0, 457, 0, 0], [0, 457, 0, 518, 0, 201, 201, 0, 33, 0, 34, 0, 0, 0, 99, 0, 457, 0, 0], [0, 0, 0, 557, 513, 558, 558, 32, 33, 0, 34, 0, 0, 0, 517, 0, 0, 37, 0], [0, 0, 0, 0, 561, 101, 101, 32, 33, 0, 0, 0, 0, 523, 561, 0, 0, 0, 0], [0, 0, 0, 520, 513, 521, 558, 32, 33, 0, 34, 0, 0, 523, 517, 0, 0, 37, 0], [0, 0, 0, 520, 513, 558, 558, 32, 33, 0, 34, 0, 0, 0, 517, 0, 0, 37, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 97, 0, 0], [0, 0, 0, 0, 465, 526, 526, 8, 9, 0, 10, 0, 0, 0, 469, 0, 0, 16, 0], [0, 0, 0, 0, 529, 44, 44, 8, 9, 0, 0, 0, 0, 0, 529, 0, 0, 0, 0], [0, 0, 0, 563, 66, 564, 565, 8, 9, 0, 10, 0, 0, 566, 68, 0, 0, 16, 0], [0, 527, 0, 567, 0, 123, 123, 8, 9, 0, 10, 0, 0, 0, 42, 0, 527, 0, 0], [0, 527, 0, 0, 0, 121, 568, 0, 9, 0, 10, 0, 0, 0, 42, 0, 527, 0, 0], [0, 0, 0, 569, 66, 570, 571, 8, 9, 0, 10, 0, 0, 572, 68, 0, 0, 16, 0], [0, 0, 0, 573, 532, 574, 574, 57, 58, 0, 59, 0, 0, 0, 536, 0, 0, 62, 0], [0, 575, 0, 0, 0, 137, 576, 0, 58, 0, 59, 0, 0, 0, 139, 0, 575, 0, 0], [0, 0, 0, 0, 577, 141, 141, 57, 58, 0, 0, 0, 0, 535, 577, 0, 0, 0, 0], [0, 0, 0, 531, 532, 533, 574, 57, 58, 0, 59, 0, 0, 535, 536, 0, 0, 62, 0], [0, 0, 0, 531, 532, 574, 574, 57, 58, 0, 59, 0, 0, 0, 536, 0, 0, 62, 0], [0, 578, 151, 0, 0, 137, 576, 0, 58, 0, 59, 0, 0, 0, 139, 0, 578, 0, 0], [0, 479, 0, 0, 0, 246, 246, 0, 58, 0, 59, 0, 0, 0, 139, 0, 479, 0, 0], [0, 479, 0, 537, 0, 246, 246, 0, 58, 0, 59, 0, 0, 0, 139, 0, 479, 0, 0], [0, 0, 0, 573, 532, 574, 574, 57, 58, 0, 59, 0, 0, 0, 536, 0, 0, 62, 0], [0, 0, 0, 0, 577, 141, 141, 57, 58, 0, 0, 0, 0, 542, 577, 0, 0, 0, 0], [0, 0, 0, 539, 532, 540, 574, 57, 58, 0, 59, 0, 0, 542, 536, 0, 0, 62, 0], [0, 0, 0, 539, 532, 574, 574, 57, 58, 0, 59, 0, 0, 0, 536, 0, 0, 62, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 137, 0, 0], [0, 0, 0, 0, 0, 0, 0, 442, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 439, 0, 0], [0, 0, 0, 0, 0, 579, 579, 494, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 580, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 549, 368, 550, 0, 161, 0, 162, 0, 0, 0, 362, 0, 0, 0, 0], [0, 0, 0, 0, 0, 368, 368, 0, 161, 0, 162, 0, 0, 0, 362, 0, 0, 0, 0], [0, 0, 0, 0, 581, 0, 0, 0, 161, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 500, 552, 552, 22, 23, 0, 24, 0, 0, 0, 504, 0, 0, 27, 0], [0, 0, 0, 0, 555, 80, 80, 22, 23, 0, 0, 0, 0, 0, 555, 0, 0, 0, 0], [0, 0, 0, 582, 91, 583, 584, 22, 23, 0, 24, 0, 0, 585, 93, 0, 0, 27, 0], [0, 553, 0, 586, 0, 177, 177, 22, 23, 0, 24, 0, 0, 0, 78, 0, 553, 0, 0], [0, 553, 0, 0, 0, 175, 587, 0, 23, 0, 24, 0, 0, 0, 78, 0, 553, 0, 0], [0, 0, 0, 588, 91, 589, 590, 22, 23, 0, 24, 0, 0, 591, 93, 0, 0, 27, 0], [0, 0, 0, 0, 513, 558, 558, 32, 33, 0, 34, 0, 0, 0, 517, 0, 0, 37, 0], [0, 0, 0, 0, 561, 101, 101, 32, 33, 0, 0, 0, 0, 0, 561, 0, 0, 0, 0], [0, 0, 0, 592, 112, 593, 594, 32, 33, 0, 34, 0, 0, 595, 114, 0, 0, 37, 0], [0, 559, 0, 596, 0, 203, 203, 32, 33, 0, 34, 0, 0, 0, 99, 0, 559, 0, 0], [0, 559, 0, 0, 0, 201, 597, 0, 33, 0, 34, 0, 0, 0, 99, 0, 559, 0, 0], [0, 0, 0, 598, 112, 599, 600, 32, 33, 0, 34, 0, 0, 601, 114, 0, 0, 37, 0], [0, 0, 0, 602, 66, 67, 67, 8, 9, 0, 10, 0, 0, 0, 68, 0, 0, 16, 0], [0, 0, 0, 0, 165, 44, 44, 8, 9, 0, 0, 0, 0, 566, 165, 0, 0, 0, 0], [0, 0, 0, 563, 66, 564, 67, 8, 9, 0, 10, 0, 0, 566, 68, 0, 0, 16, 0], [0, 0, 0, 563, 66, 67, 67, 8, 9, 0, 10, 0, 0, 0, 68, 0, 0, 16, 0], [0, 527, 0, 0, 0, 121, 121, 0, 9, 0, 10, 0, 0, 0, 42, 0, 527, 0, 0], [0, 527, 0, 567, 0, 121, 121, 0, 9, 0, 10, 0, 0, 0, 42, 0, 527, 0, 0], [0, 0, 0, 602, 66, 67, 67, 8, 9, 0, 10, 0, 0, 0, 68, 0, 0, 16, 0], [0, 0, 0, 0, 165, 44, 44, 8, 9, 0, 0, 0, 0, 572, 165, 0, 0, 0, 0], [0, 0, 0, 569, 66, 570, 67, 8, 9, 0, 10, 0, 0, 572, 68, 0, 0, 16, 0], [0, 0, 0, 569, 66, 67, 67, 8, 9, 0, 10, 0, 0, 0, 68, 0, 0, 16, 0], [0, 0, 0, 0, 532, 574, 574, 57, 58, 0, 59, 0, 0, 0, 536, 0, 0, 62, 0], [0, 0, 0, 0, 577, 141, 141, 57, 58, 0, 0, 0, 0, 0, 577, 0, 0, 0, 0], [0, 0, 0, 603, 152, 604, 605, 57, 58, 0, 59, 0, 0, 606, 154, 0, 0, 62, 0], [0, 575, 0, 607, 0, 248, 248, 57, 58, 0, 59, 0, 0, 0, 139, 0, 575, 0, 0], [0, 575, 0, 0, 0, 246, 608, 0, 58, 0, 59, 0, 0, 0, 139, 0, 575, 0, 0], [0, 0, 0, 609, 152, 610, 611, 57, 58, 0, 59, 0, 0, 612, 154, 0, 0, 62, 0], [0, 0, 0, 0, 0, 0, 0, 494, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 491, 0, 0], [0, 0, 0, 0, 0, 0, 613, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 614, 91, 92, 92, 22, 23, 0, 24, 0, 0, 0, 93, 0, 0, 27, 0], [0, 0, 0, 0, 194, 80, 80, 22, 23, 0, 0, 0, 0, 585, 194, 0, 0, 0, 0], [0, 0, 0, 582, 91, 583, 92, 22, 23, 0, 24, 0, 0, 585, 93, 0, 0, 27, 0], [0, 0, 0, 582, 91, 92, 92, 22, 23, 0, 24, 0, 0, 0, 93, 0, 0, 27, 0], [0, 553, 0, 0, 0, 175, 175, 0, 23, 0, 24, 0, 0, 0, 78, 0, 553, 0, 0], [0, 553, 0, 586, 0, 175, 175, 0, 23, 0, 24, 0, 0, 0, 78, 0, 553, 0, 0], [0, 0, 0, 614, 91, 92, 92, 22, 23, 0, 24, 0, 0, 0, 93, 0, 0, 27, 0], [0, 0, 0, 0, 194, 80, 80, 22, 23, 0, 0, 0, 0, 591, 194, 0, 0, 0, 0], [0, 0, 0, 588, 91, 589, 92, 22, 23, 0, 24, 0, 0, 591, 93, 0, 0, 27, 0], [0, 0, 0, 588, 91, 92, 92, 22, 23, 0, 24, 0, 0, 0, 93, 0, 0, 27, 0], [0, 0, 0, 615, 112, 113, 113, 32, 33, 0, 34, 0, 0, 0, 114, 0, 0, 37, 0], [0, 0, 0, 0, 220, 101, 101, 32, 33, 0, 0, 0, 0, 595, 220, 0, 0, 0, 0], [0, 0, 0, 592, 112, 593, 113, 32, 33, 0, 34, 0, 0, 595, 114, 0, 0, 37, 0], [0, 0, 0, 592, 112, 113, 113, 32, 33, 0, 34, 0, 0, 0, 114, 0, 0, 37, 0], [0, 559, 0, 0, 0, 201, 201, 0, 33, 0, 34, 0, 0, 0, 99, 0, 559, 0, 0], [0, 559, 0, 596, 0, 201, 201, 0, 33, 0, 34, 0, 0, 0, 99, 0, 559, 0, 0], [0, 0, 0, 615, 112, 113, 113, 32, 33, 0, 34, 0, 0, 0, 114, 0, 0, 37, 0], [0, 0, 0, 0, 220, 101, 101, 32, 33, 0, 0, 0, 0, 601, 220, 0, 0, 0, 0], [0, 0, 0, 598, 112, 599, 113, 32, 33, 0, 34, 0, 0, 601, 114, 0, 0, 37, 0], [0, 0, 0, 598, 112, 113, 113, 32, 33, 0, 34, 0, 0, 0, 114, 0, 0, 37, 0], [0, 0, 0, 0, 66, 67, 67, 8, 9, 0, 10, 0, 0, 0, 68, 0, 0, 16, 0], [0, 0, 0, 616, 152, 153, 153, 57, 58, 0, 59, 0, 0, 0, 154, 0, 0, 62, 0], [0, 0, 0, 0, 265, 141, 141, 57, 58, 0, 0, 0, 0, 606, 265, 0, 0, 0, 0], [0, 0, 0, 603, 152, 604, 153, 57, 58, 0, 59, 0, 0, 606, 154, 0, 0, 62, 0], [0, 0, 0, 603, 152, 153, 153, 57, 58, 0, 59, 0, 0, 0, 154, 0, 0, 62, 0], [0, 575, 0, 0, 0, 246, 246, 0, 58, 0, 59, 0, 0, 0, 139, 0, 575, 0, 0], [0, 575, 0, 607, 0, 246, 246, 0, 58, 0, 59, 0, 0, 0, 139, 0, 575, 0, 0], [0, 0, 0, 616, 152, 153, 153, 57, 58, 0, 59, 0, 0, 0, 154, 0, 0, 62, 0], [0, 0, 0, 0, 265, 141, 141, 57, 58, 0, 0, 0, 0, 612, 265, 0, 0, 0, 0], [0, 0, 0, 609, 152, 610, 153, 57, 58, 0, 59, 0, 0, 612, 154, 0, 0, 62, 0], [0, 0, 0, 609, 152, 153, 153, 57, 58, 0, 59, 0, 0, 0, 154, 0, 0, 62, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 549, 0, 0], [0, 0, 0, 0, 91, 92, 92, 22, 23, 0, 24, 0, 0, 0, 93, 0, 0, 27, 0], [0, 0, 0, 0, 112, 113, 113, 32, 33, 0, 34, 0, 0, 0, 114, 0, 0, 37, 0], [0, 0, 0, 0, 152, 153, 153, 57, 58, 0, 59, 0, 0, 0, 154, 0, 0, 62, 0]];\nvar accepting = [false, true, true, true, true, true, false, false, true, true, true, true, true, true, true, true, true, true, true, true, false, true, true, true, true, true, true, true, true, true, false, true, true, true, true, true, true, true, true, true, true, true, false, true, false, true, true, false, false, true, true, true, true, true, true, false, false, true, true, true, true, true, true, true, true, true, true, false, true, true, false, true, true, true, false, true, true, true, false, true, false, true, true, false, false, true, true, true, true, true, true, true, false, true, true, false, true, true, true, false, true, false, true, true, false, false, true, true, true, true, true, true, true, false, true, true, true, false, true, true, true, false, true, false, true, true, false, false, false, true, true, false, false, true, true, true, true, true, true, false, true, false, true, true, false, false, true, true, true, true, true, true, true, false, true, true, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, false, true, true, true, false, true, false, true, true, false, false, false, true, true, false, false, true, true, true, false, true, true, true, true, true, true, false, true, true, true, false, true, false, true, true, false, false, false, true, true, false, false, true, true, true, false, true, true, true, true, true, false, true, true, true, true, true, false, true, true, false, false, false, false, true, true, false, false, true, true, true, false, true, true, true, false, true, false, true, true, false, false, false, true, true, false, false, true, true, true, false, true, true, true, true, false, true, false, true, true, true, true, true, true, true, true, true, false, true, true, true, true, true, false, true, true, false, false, false, false, true, true, false, false, true, true, true, false, true, true, true, true, true, false, true, true, false, false, false, false, true, true, false, false, true, true, true, true, false, true, true, true, true, true, true, false, true, true, false, false, false, false, true, false, true, false, true, true, true, true, true, false, true, true, false, false, false, false, true, true, false, false, true, true, true, false, true, true, false, false, true, false, true, true, false, true, true, false, true, true, false, true, true, true, true, true, true, false, true, true, false, false, false, false, true, false, true, true, false, true, true, true, true, true, true, false, true, true, false, false, false, false, true, false, true, false, true, true, true, true, false, false, false, true, true, false, true, true, true, true, true, true, false, true, true, false, false, false, false, true, false, true, false, true, true, false, false, true, true, false, false, true, true, true, false, true, false, true, true, true, true, false, false, false, true, false, true, true, true, true, false, false, false, true, true, false, true, true, true, true, true, true, false, true, true, false, true, false, true, true, true, true, false, false, false, false, false, false, false, true, true, false, false, true, true, false, true, true, true, true, false, true, true, true, true, true, true, false, true, true, false, true, true, false, true, true, true, true, true, true, false, true, true, false, true, false, true, true, true, true, true, true, false, true, true, true, true, true, true, false, true, true, false, false, false, false, false, true, true, false, true, false, true, true, true, true, true, false, true, true, true, true, true, false, true, true, true, true, true, false, true, true, true, false, true, true, true, true, false, false, false, true, false, true, true, true, true, true, false, true, true, true, false, true, true, true, true, true, false, true, true, true, true, false, true, true, true, true, true, false, true, true, false, true, true, true];\nvar tags = [[], [\"broken_cluster\"], [\"consonant_syllable\"], [\"vowel_syllable\"], [\"broken_cluster\"], [\"broken_cluster\"], [], [], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"standalone_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"consonant_syllable\"], [\"broken_cluster\"], [\"symbol_cluster\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"vowel_syllable\"], [\"vowel_syllable\"], [], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [], [\"broken_cluster\"], [], [\"broken_cluster\"], [\"broken_cluster\"], [], [], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [], [], [\"standalone_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"consonant_syllable\", \"broken_cluster\"], [\"broken_cluster\"], [], [\"broken_cluster\"], [\"symbol_cluster\"], [], [\"symbol_cluster\"], [\"symbol_cluster\"], [\"consonant_syllable\"], [], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [], [\"consonant_syllable\"], [], [\"consonant_syllable\"], [\"consonant_syllable\"], [], [], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [], [\"consonant_syllable\"], [\"vowel_syllable\"], [], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"vowel_syllable\"], [], [\"vowel_syllable\"], [], [\"vowel_syllable\"], [\"vowel_syllable\"], [], [], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"vowel_syllable\"], [], [\"vowel_syllable\"], [\"broken_cluster\"], [\"broken_cluster\"], [], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [], [\"broken_cluster\"], [], [\"broken_cluster\"], [\"broken_cluster\"], [], [], [], [\"broken_cluster\"], [\"broken_cluster\"], [], [], [\"broken_cluster\"], [\"broken_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [], [\"standalone_cluster\"], [], [\"standalone_cluster\"], [\"standalone_cluster\"], [], [], [\"standalone_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [], [\"standalone_cluster\"], [\"broken_cluster\"], [], [\"broken_cluster\"], [\"broken_cluster\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"consonant_syllable\", \"broken_cluster\"], [\"consonant_syllable\", \"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"symbol_cluster\"], [\"symbol_cluster\"], [\"symbol_cluster\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [], [\"consonant_syllable\"], [], [\"consonant_syllable\"], [\"consonant_syllable\"], [], [], [], [\"consonant_syllable\"], [\"consonant_syllable\"], [], [], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"vowel_syllable\"], [\"vowel_syllable\"], [], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"vowel_syllable\"], [], [\"vowel_syllable\"], [], [\"vowel_syllable\"], [\"vowel_syllable\"], [], [], [], [\"vowel_syllable\"], [\"vowel_syllable\"], [], [], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"vowel_syllable\"], [], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"broken_cluster\"], [], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [], [\"broken_cluster\"], [\"broken_cluster\"], [], [], [], [], [\"broken_cluster\"], [\"broken_cluster\"], [], [], [\"broken_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [], [\"standalone_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [], [\"standalone_cluster\"], [], [\"standalone_cluster\"], [\"standalone_cluster\"], [], [], [], [\"standalone_cluster\"], [\"standalone_cluster\"], [], [], [\"standalone_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [], [\"standalone_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [], [\"broken_cluster\"], [], [\"consonant_syllable\", \"broken_cluster\"], [\"consonant_syllable\", \"broken_cluster\"], [\"consonant_syllable\", \"broken_cluster\"], [\"consonant_syllable\", \"broken_cluster\"], [\"consonant_syllable\", \"broken_cluster\"], [\"consonant_syllable\", \"broken_cluster\"], [\"broken_cluster\"], [\"symbol_cluster\"], [\"consonant_syllable\"], [], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [], [\"consonant_syllable\"], [\"consonant_syllable\"], [], [], [], [], [\"consonant_syllable\"], [\"consonant_syllable\"], [], [], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"vowel_syllable\"], [], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"vowel_syllable\"], [], [\"vowel_syllable\"], [\"vowel_syllable\"], [], [], [], [], [\"vowel_syllable\"], [\"vowel_syllable\"], [], [], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"broken_cluster\"], [\"broken_cluster\"], [], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [], [\"broken_cluster\"], [\"broken_cluster\"], [], [], [], [], [\"broken_cluster\"], [], [\"standalone_cluster\"], [], [\"standalone_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [], [\"standalone_cluster\"], [\"standalone_cluster\"], [], [], [], [], [\"standalone_cluster\"], [\"standalone_cluster\"], [], [], [\"standalone_cluster\"], [\"standalone_cluster\"], [\"consonant_syllable\", \"broken_cluster\"], [], [\"consonant_syllable\", \"broken_cluster\"], [\"consonant_syllable\", \"broken_cluster\"], [], [], [\"consonant_syllable\", \"broken_cluster\"], [], [\"consonant_syllable\", \"broken_cluster\"], [\"consonant_syllable\", \"broken_cluster\"], [], [\"consonant_syllable\", \"broken_cluster\"], [\"consonant_syllable\", \"broken_cluster\"], [], [\"consonant_syllable\"], [\"consonant_syllable\"], [], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [], [\"consonant_syllable\"], [\"consonant_syllable\"], [], [], [], [], [\"consonant_syllable\"], [], [\"vowel_syllable\"], [\"vowel_syllable\"], [], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"vowel_syllable\"], [], [\"vowel_syllable\"], [\"vowel_syllable\"], [], [], [], [], [\"vowel_syllable\"], [], [\"broken_cluster\"], [], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [], [], [], [\"standalone_cluster\"], [\"standalone_cluster\"], [], [\"standalone_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [], [\"standalone_cluster\"], [\"standalone_cluster\"], [], [], [], [], [\"standalone_cluster\"], [], [\"consonant_syllable\", \"broken_cluster\"], [], [\"consonant_syllable\", \"broken_cluster\"], [\"consonant_syllable\", \"broken_cluster\"], [], [], [\"consonant_syllable\", \"broken_cluster\"], [\"consonant_syllable\", \"broken_cluster\"], [], [], [\"consonant_syllable\", \"broken_cluster\"], [\"consonant_syllable\", \"broken_cluster\"], [\"consonant_syllable\", \"broken_cluster\"], [], [\"consonant_syllable\"], [], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [], [], [], [\"vowel_syllable\"], [], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"vowel_syllable\"], [], [], [], [\"broken_cluster\"], [\"broken_cluster\"], [], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [], [\"broken_cluster\"], [\"broken_cluster\"], [], [\"standalone_cluster\"], [], [\"standalone_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [], [], [], [], [], [], [], [\"consonant_syllable\", \"broken_cluster\"], [\"consonant_syllable\", \"broken_cluster\"], [], [], [\"consonant_syllable\", \"broken_cluster\"], [\"consonant_syllable\", \"broken_cluster\"], [], [\"consonant_syllable\", \"broken_cluster\"], [\"consonant_syllable\", \"broken_cluster\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [], [\"consonant_syllable\"], [\"consonant_syllable\"], [], [\"vowel_syllable\"], [\"vowel_syllable\"], [], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"vowel_syllable\"], [], [\"vowel_syllable\"], [\"vowel_syllable\"], [], [\"broken_cluster\"], [], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [], [\"standalone_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [], [\"standalone_cluster\"], [\"standalone_cluster\"], [], [], [], [], [], [\"consonant_syllable\", \"broken_cluster\"], [\"consonant_syllable\", \"broken_cluster\"], [], [\"consonant_syllable\"], [], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"vowel_syllable\"], [], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"broken_cluster\"], [], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [], [\"broken_cluster\"], [\"broken_cluster\"], [\"standalone_cluster\"], [], [\"standalone_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [], [], [], [\"consonant_syllable\"], [], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"vowel_syllable\"], [], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"vowel_syllable\"], [], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"broken_cluster\"], [\"standalone_cluster\"], [], [\"standalone_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [], [\"standalone_cluster\"], [\"standalone_cluster\"], [], [\"consonant_syllable\"], [\"vowel_syllable\"], [\"standalone_cluster\"]];\nvar indicMachine = {\n  stateTable: stateTable,\n  accepting: accepting,\n  tags: tags\n};\nvar categories = [\"O\", \"IND\", \"S\", \"GB\", \"B\", \"FM\", \"CGJ\", \"VMAbv\", \"VMPst\", \"VAbv\", \"VPst\", \"CMBlw\", \"VPre\", \"VBlw\", \"H\", \"VMBlw\", \"CMAbv\", \"MBlw\", \"CS\", \"R\", \"SUB\", \"MPst\", \"MPre\", \"FAbv\", \"FPst\", \"FBlw\", \"null\", \"SMAbv\", \"SMBlw\", \"VMPre\", \"ZWNJ\", \"ZWJ\", \"WJ\", \"M\", \"VS\", \"N\", \"HN\", \"MAbv\"];\nvar decompositions$1 = {\n  \"2507\": [2503, 2494],\n  \"2508\": [2503, 2519],\n  \"2888\": [2887, 2902],\n  \"2891\": [2887, 2878],\n  \"2892\": [2887, 2903],\n  \"3018\": [3014, 3006],\n  \"3019\": [3015, 3006],\n  \"3020\": [3014, 3031],\n  \"3144\": [3142, 3158],\n  \"3264\": [3263, 3285],\n  \"3271\": [3270, 3285],\n  \"3272\": [3270, 3286],\n  \"3274\": [3270, 3266],\n  \"3275\": [3270, 3266, 3285],\n  \"3402\": [3398, 3390],\n  \"3403\": [3399, 3390],\n  \"3404\": [3398, 3415],\n  \"3546\": [3545, 3530],\n  \"3548\": [3545, 3535],\n  \"3549\": [3545, 3535, 3530],\n  \"3550\": [3545, 3551],\n  \"3635\": [3661, 3634],\n  \"3763\": [3789, 3762],\n  \"3955\": [3953, 3954],\n  \"3957\": [3953, 3956],\n  \"3958\": [4018, 3968],\n  \"3959\": [4018, 3953, 3968],\n  \"3960\": [4019, 3968],\n  \"3961\": [4019, 3953, 3968],\n  \"3969\": [3953, 3968],\n  \"6971\": [6970, 6965],\n  \"6973\": [6972, 6965],\n  \"6976\": [6974, 6965],\n  \"6977\": [6975, 6965],\n  \"6979\": [6978, 6965],\n  \"69934\": [69937, 69927],\n  \"69935\": [69938, 69927],\n  \"70475\": [70471, 70462],\n  \"70476\": [70471, 70487],\n  \"70843\": [70841, 70842],\n  \"70844\": [70841, 70832],\n  \"70846\": [70841, 70845],\n  \"71098\": [71096, 71087],\n  \"71099\": [71097, 71087]\n};\nvar stateTable$1 = [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [2, 2, 3, 4, 4, 5, 0, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 0, 17, 18, 11, 19, 20, 21, 22, 0, 0, 0, 23, 0, 0, 2, 0, 0, 24, 0, 25], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 26, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 27, 28, 0, 0, 0, 0, 0, 27, 0, 0, 0], [0, 0, 0, 0, 0, 29, 0, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 0, 0, 41, 35, 42, 43, 44, 45, 0, 0, 0, 46, 0, 0, 0, 0, 39, 0, 0, 47], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 5, 0, 6, 7, 0, 0, 0, 0, 0, 0, 14, 0, 0, 0, 0, 0, 0, 0, 20, 21, 22, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 5, 0, 0, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 20, 21, 22, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 5, 0, 6, 7, 8, 9, 0, 0, 12, 0, 14, 0, 0, 0, 0, 0, 0, 0, 20, 21, 22, 0, 0, 0, 23, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 5, 0, 6, 7, 0, 9, 0, 0, 0, 0, 14, 0, 0, 0, 0, 0, 0, 0, 20, 21, 22, 0, 0, 0, 23, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 5, 0, 6, 7, 8, 9, 10, 11, 12, 13, 14, 0, 16, 0, 0, 18, 11, 19, 20, 21, 22, 0, 0, 0, 23, 0, 0, 0, 0, 0, 0, 0, 25], [0, 0, 0, 0, 0, 5, 0, 6, 7, 8, 9, 0, 11, 12, 0, 14, 0, 0, 0, 0, 0, 0, 0, 20, 21, 22, 0, 0, 0, 23, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 5, 0, 6, 7, 0, 9, 0, 0, 12, 0, 14, 0, 0, 0, 0, 0, 0, 0, 20, 21, 22, 0, 0, 0, 23, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 18, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 5, 0, 0, 7, 0, 0, 0, 0, 0, 0, 14, 0, 0, 0, 0, 0, 0, 0, 20, 21, 22, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 5, 0, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 0, 0, 18, 11, 19, 20, 21, 22, 0, 0, 0, 23, 0, 0, 0, 0, 0, 0, 0, 25], [0, 0, 0, 0, 0, 5, 0, 6, 7, 8, 9, 0, 11, 12, 0, 14, 0, 0, 0, 0, 0, 11, 0, 20, 21, 22, 0, 0, 0, 23, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 4, 4, 5, 0, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 0, 0, 18, 11, 19, 20, 21, 22, 0, 0, 0, 23, 0, 0, 0, 0, 0, 0, 0, 25], [0, 0, 0, 0, 0, 5, 0, 6, 7, 8, 9, 48, 11, 12, 13, 14, 48, 16, 0, 0, 18, 11, 19, 20, 21, 22, 0, 0, 0, 23, 0, 0, 0, 0, 49, 0, 0, 25], [0, 0, 0, 0, 0, 5, 0, 6, 7, 8, 9, 0, 11, 12, 0, 14, 0, 16, 0, 0, 0, 11, 0, 20, 21, 22, 0, 0, 0, 23, 0, 0, 0, 0, 0, 0, 0, 25], [0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 20, 21, 22, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 21, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 21, 22, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 5, 0, 6, 7, 0, 0, 0, 0, 0, 0, 14, 0, 0, 0, 0, 0, 0, 0, 20, 21, 22, 0, 0, 0, 23, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 50, 0, 51, 0], [0, 0, 0, 0, 0, 5, 0, 6, 7, 8, 9, 0, 11, 12, 0, 14, 0, 16, 0, 0, 0, 11, 0, 20, 21, 22, 0, 0, 0, 23, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 27, 28, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 28, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 29, 0, 30, 31, 0, 0, 0, 0, 0, 0, 38, 0, 0, 0, 0, 0, 0, 0, 43, 44, 45, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 29, 0, 0, 31, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 43, 44, 45, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 29, 0, 30, 31, 32, 33, 0, 0, 36, 0, 38, 0, 0, 0, 0, 0, 0, 0, 43, 44, 45, 0, 0, 0, 46, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 29, 0, 30, 31, 0, 33, 0, 0, 0, 0, 38, 0, 0, 0, 0, 0, 0, 0, 43, 44, 45, 0, 0, 0, 46, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 29, 0, 30, 31, 32, 33, 34, 35, 36, 37, 38, 0, 40, 0, 0, 41, 35, 42, 43, 44, 45, 0, 0, 0, 46, 0, 0, 0, 0, 0, 0, 0, 47], [0, 0, 0, 0, 0, 29, 0, 30, 31, 32, 33, 0, 35, 36, 0, 38, 0, 0, 0, 0, 0, 0, 0, 43, 44, 45, 0, 0, 0, 46, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 29, 0, 30, 31, 0, 33, 0, 0, 36, 0, 38, 0, 0, 0, 0, 0, 0, 0, 43, 44, 45, 0, 0, 0, 46, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 41, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 29, 0, 0, 31, 0, 0, 0, 0, 0, 0, 38, 0, 0, 0, 0, 0, 0, 0, 43, 44, 45, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 29, 0, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 0, 0, 41, 35, 42, 43, 44, 45, 0, 0, 0, 46, 0, 0, 0, 0, 0, 0, 0, 47], [0, 0, 0, 0, 0, 29, 0, 30, 31, 32, 33, 0, 35, 36, 0, 38, 0, 0, 0, 0, 0, 35, 0, 43, 44, 45, 0, 0, 0, 46, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 29, 0, 30, 31, 32, 33, 52, 35, 36, 37, 38, 52, 40, 0, 0, 41, 35, 42, 43, 44, 45, 0, 0, 0, 46, 0, 0, 0, 0, 53, 0, 0, 47], [0, 0, 0, 0, 0, 29, 0, 30, 31, 32, 33, 0, 35, 36, 0, 38, 0, 40, 0, 0, 0, 35, 0, 43, 44, 45, 0, 0, 0, 46, 0, 0, 0, 0, 0, 0, 0, 47], [0, 0, 0, 0, 0, 29, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 43, 44, 45, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 29, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 44, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 29, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 44, 45, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 29, 0, 30, 31, 0, 0, 0, 0, 0, 0, 38, 0, 0, 0, 0, 0, 0, 0, 43, 44, 45, 0, 0, 0, 46, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 29, 0, 30, 31, 32, 33, 0, 35, 36, 0, 38, 0, 40, 0, 0, 0, 35, 0, 43, 44, 45, 0, 0, 0, 46, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 5, 0, 6, 7, 8, 9, 48, 11, 12, 13, 14, 0, 16, 0, 0, 18, 11, 19, 20, 21, 22, 0, 0, 0, 23, 0, 0, 0, 0, 0, 0, 0, 25], [0, 0, 0, 0, 0, 5, 0, 6, 7, 8, 9, 48, 11, 12, 13, 14, 48, 16, 0, 0, 18, 11, 19, 20, 21, 22, 0, 0, 0, 23, 0, 0, 0, 0, 0, 0, 0, 25], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 51, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 54, 0, 0], [0, 0, 0, 0, 0, 29, 0, 30, 31, 32, 33, 52, 35, 36, 37, 38, 0, 40, 0, 0, 41, 35, 42, 43, 44, 45, 0, 0, 0, 46, 0, 0, 0, 0, 0, 0, 0, 47], [0, 0, 0, 0, 0, 29, 0, 30, 31, 32, 33, 52, 35, 36, 37, 38, 52, 40, 0, 0, 41, 35, 42, 43, 44, 45, 0, 0, 0, 46, 0, 0, 0, 0, 0, 0, 0, 47], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 50, 0, 51, 0]];\nvar accepting$1 = [false, true, true, true, true, true, true, true, true, true, true, true, true, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true];\nvar tags$1 = [[], [\"broken_cluster\"], [\"independent_cluster\"], [\"symbol_cluster\"], [\"standard_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"numeral_cluster\"], [\"broken_cluster\"], [\"independent_cluster\"], [\"symbol_cluster\"], [\"symbol_cluster\"], [\"standard_cluster\"], [\"standard_cluster\"], [\"standard_cluster\"], [\"standard_cluster\"], [\"standard_cluster\"], [\"standard_cluster\"], [\"standard_cluster\"], [\"standard_cluster\"], [\"virama_terminated_cluster\"], [\"standard_cluster\"], [\"standard_cluster\"], [\"standard_cluster\"], [\"standard_cluster\"], [\"standard_cluster\"], [\"standard_cluster\"], [\"standard_cluster\"], [\"standard_cluster\"], [\"standard_cluster\"], [\"standard_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"numeral_cluster\"], [\"number_joiner_terminated_cluster\"], [\"standard_cluster\"], [\"standard_cluster\"], [\"numeral_cluster\"]];\nvar useData = {\n  categories: categories,\n  decompositions: decompositions$1,\n  stateTable: stateTable$1,\n  accepting: accepting$1,\n  tags: tags$1\n}; // Cateories used in the OpenType spec:\n// https://www.microsoft.com/typography/otfntdev/devanot/shaping.aspx\n\nvar CATEGORIES = {\n  X: 1 << 0,\n  C: 1 << 1,\n  V: 1 << 2,\n  N: 1 << 3,\n  H: 1 << 4,\n  ZWNJ: 1 << 5,\n  ZWJ: 1 << 6,\n  M: 1 << 7,\n  SM: 1 << 8,\n  VD: 1 << 9,\n  A: 1 << 10,\n  Placeholder: 1 << 11,\n  Dotted_Circle: 1 << 12,\n  RS: 1 << 13,\n  // Register Shifter, used in Khmer OT spec.\n  Coeng: 1 << 14,\n  // Khmer-style Virama.\n  Repha: 1 << 15,\n  // Atomically-encoded logical or visual repha.\n  Ra: 1 << 16,\n  CM: 1 << 17,\n  // Consonant-Medial.\n  Symbol: 1 << 18 // Avagraha, etc that take marks (SM,A,VD).\n\n}; // Visual positions in a syllable from left to right.\n\nvar POSITIONS = {\n  Start: 1 << 0,\n  Ra_To_Become_Reph: 1 << 1,\n  Pre_M: 1 << 2,\n  Pre_C: 1 << 3,\n  Base_C: 1 << 4,\n  After_Main: 1 << 5,\n  Above_C: 1 << 6,\n  Before_Sub: 1 << 7,\n  Below_C: 1 << 8,\n  After_Sub: 1 << 9,\n  Before_Post: 1 << 10,\n  Post_C: 1 << 11,\n  After_Post: 1 << 12,\n  Final_C: 1 << 13,\n  SMVD: 1 << 14,\n  End: 1 << 15\n};\nvar CONSONANT_FLAGS = CATEGORIES.C | CATEGORIES.Ra | CATEGORIES.CM | CATEGORIES.V | CATEGORIES.Placeholder | CATEGORIES.Dotted_Circle;\nvar JOINER_FLAGS = CATEGORIES.ZWJ | CATEGORIES.ZWNJ;\nvar HALANT_OR_COENG_FLAGS = CATEGORIES.H | CATEGORIES.Coeng;\nvar INDIC_CONFIGS = {\n  Default: {\n    hasOldSpec: false,\n    virama: 0,\n    basePos: 'Last',\n    rephPos: POSITIONS.Before_Post,\n    rephMode: 'Implicit',\n    blwfMode: 'Pre_And_Post'\n  },\n  Devanagari: {\n    hasOldSpec: true,\n    virama: 0x094D,\n    basePos: 'Last',\n    rephPos: POSITIONS.Before_Post,\n    rephMode: 'Implicit',\n    blwfMode: 'Pre_And_Post'\n  },\n  Bengali: {\n    hasOldSpec: true,\n    virama: 0x09CD,\n    basePos: 'Last',\n    rephPos: POSITIONS.After_Sub,\n    rephMode: 'Implicit',\n    blwfMode: 'Pre_And_Post'\n  },\n  Gurmukhi: {\n    hasOldSpec: true,\n    virama: 0x0A4D,\n    basePos: 'Last',\n    rephPos: POSITIONS.Before_Sub,\n    rephMode: 'Implicit',\n    blwfMode: 'Pre_And_Post'\n  },\n  Gujarati: {\n    hasOldSpec: true,\n    virama: 0x0ACD,\n    basePos: 'Last',\n    rephPos: POSITIONS.Before_Post,\n    rephMode: 'Implicit',\n    blwfMode: 'Pre_And_Post'\n  },\n  Oriya: {\n    hasOldSpec: true,\n    virama: 0x0B4D,\n    basePos: 'Last',\n    rephPos: POSITIONS.After_Main,\n    rephMode: 'Implicit',\n    blwfMode: 'Pre_And_Post'\n  },\n  Tamil: {\n    hasOldSpec: true,\n    virama: 0x0BCD,\n    basePos: 'Last',\n    rephPos: POSITIONS.After_Post,\n    rephMode: 'Implicit',\n    blwfMode: 'Pre_And_Post'\n  },\n  Telugu: {\n    hasOldSpec: true,\n    virama: 0x0C4D,\n    basePos: 'Last',\n    rephPos: POSITIONS.After_Post,\n    rephMode: 'Explicit',\n    blwfMode: 'Post_Only'\n  },\n  Kannada: {\n    hasOldSpec: true,\n    virama: 0x0CCD,\n    basePos: 'Last',\n    rephPos: POSITIONS.After_Post,\n    rephMode: 'Implicit',\n    blwfMode: 'Post_Only'\n  },\n  Malayalam: {\n    hasOldSpec: true,\n    virama: 0x0D4D,\n    basePos: 'Last',\n    rephPos: POSITIONS.After_Main,\n    rephMode: 'Log_Repha',\n    blwfMode: 'Pre_And_Post'\n  },\n  // Handled by UniversalShaper\n  // Sinhala: {\n  //   hasOldSpec: false,\n  //   virama: 0x0DCA,\n  //   basePos: 'Last_Sinhala',\n  //   rephPos: POSITIONS.After_Main,\n  //   rephMode: 'Explicit',\n  //   blwfMode: 'Pre_And_Post'\n  // },\n  Khmer: {\n    hasOldSpec: false,\n    virama: 0x17D2,\n    basePos: 'First',\n    rephPos: POSITIONS.Ra_To_Become_Reph,\n    rephMode: 'Vis_Repha',\n    blwfMode: 'Pre_And_Post'\n  }\n}; // Additional decompositions that aren't in Unicode\n\nvar INDIC_DECOMPOSITIONS = {\n  // Khmer\n  0x17BE: [0x17C1, 0x17BE],\n  0x17BF: [0x17C1, 0x17BF],\n  0x17C0: [0x17C1, 0x17C0],\n  0x17C4: [0x17C1, 0x17C4],\n  0x17C5: [0x17C1, 0x17C5]\n};\n\nvar _class$6;\n\nvar _temp$2;\n\nvar decompositions = useData.decompositions;\nvar trie$1 = new UnicodeTrie(Buffer(\"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\",\"base64\"));\nvar stateMachine = new StateMachine(indicMachine);\n/**\n * The IndicShaper supports indic scripts e.g. Devanagari, Kannada, etc.\n * Based on code from Harfbuzz: https://github.com/behdad/harfbuzz/blob/master/src/hb-ot-shape-complex-indic.cc\n */\n\nvar IndicShaper = (_temp$2 = _class$6 = function (_DefaultShaper) {\n  _inherits(IndicShaper, _DefaultShaper);\n\n  function IndicShaper() {\n    _classCallCheck(this, IndicShaper);\n\n    return _possibleConstructorReturn(this, _DefaultShaper.apply(this, arguments));\n  }\n\n  IndicShaper.planFeatures = function planFeatures(plan) {\n    plan.addStage(setupSyllables);\n    plan.addStage(['locl', 'ccmp']);\n    plan.addStage(initialReordering);\n    plan.addStage('nukt');\n    plan.addStage('akhn');\n    plan.addStage('rphf', false);\n    plan.addStage('rkrf');\n    plan.addStage('pref', false);\n    plan.addStage('blwf', false);\n    plan.addStage('abvf', false);\n    plan.addStage('half', false);\n    plan.addStage('pstf', false);\n    plan.addStage('vatu');\n    plan.addStage('cjct');\n    plan.addStage('cfar', false);\n    plan.addStage(finalReordering);\n    plan.addStage({\n      local: ['init'],\n      global: ['pres', 'abvs', 'blws', 'psts', 'haln', 'dist', 'abvm', 'blwm', 'calt', 'clig']\n    }); // Setup the indic config for the selected script\n\n    plan.unicodeScript = fromOpenType(plan.script);\n    plan.indicConfig = INDIC_CONFIGS[plan.unicodeScript] || INDIC_CONFIGS.Default;\n    plan.isOldSpec = plan.indicConfig.hasOldSpec && plan.script[plan.script.length - 1] !== '2'; // TODO: turn off kern (Khmer) and liga features.\n  };\n\n  IndicShaper.assignFeatures = function assignFeatures(plan, glyphs) {\n    var _loop = function _loop(i) {\n      var codepoint = glyphs[i].codePoints[0];\n      var d = INDIC_DECOMPOSITIONS[codepoint] || decompositions[codepoint];\n\n      if (d) {\n        var decomposed = d.map(function (c) {\n          var g = plan.font.glyphForCodePoint(c);\n          return new GlyphInfo(plan.font, g.id, [c], glyphs[i].features);\n        });\n        glyphs.splice.apply(glyphs, [i, 1].concat(decomposed));\n      }\n    }; // Decompose split matras\n    // TODO: do this in a more general unicode normalizer\n\n\n    for (var i = glyphs.length - 1; i >= 0; i--) {\n      _loop(i);\n    }\n  };\n\n  return IndicShaper;\n}(DefaultShaper), _class$6.zeroMarkWidths = 'NONE', _temp$2);\n\nfunction indicCategory(glyph) {\n  return trie$1.get(glyph.codePoints[0]) >> 8;\n}\n\nfunction indicPosition(glyph) {\n  return 1 << (trie$1.get(glyph.codePoints[0]) & 0xff);\n}\n\nvar IndicInfo = function IndicInfo(category, position, syllableType, syllable) {\n  _classCallCheck(this, IndicInfo);\n\n  this.category = category;\n  this.position = position;\n  this.syllableType = syllableType;\n  this.syllable = syllable;\n};\n\nfunction setupSyllables(font, glyphs) {\n  var syllable = 0;\n  var last = 0;\n\n  for (var _iterator = stateMachine.match(glyphs.map(indicCategory)), _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _getIterator(_iterator);;) {\n    var _ref;\n\n    if (_isArray) {\n      if (_i >= _iterator.length) break;\n      _ref = _iterator[_i++];\n    } else {\n      _i = _iterator.next();\n      if (_i.done) break;\n      _ref = _i.value;\n    }\n\n    var _ref2 = _ref,\n        start = _ref2[0],\n        end = _ref2[1],\n        tags = _ref2[2];\n\n    if (start > last) {\n      ++syllable;\n\n      for (var _i2 = last; _i2 < start; _i2++) {\n        glyphs[_i2].shaperInfo = new IndicInfo(CATEGORIES.X, POSITIONS.End, 'non_indic_cluster', syllable);\n      }\n    }\n\n    ++syllable; // Create shaper info\n\n    for (var _i3 = start; _i3 <= end; _i3++) {\n      glyphs[_i3].shaperInfo = new IndicInfo(1 << indicCategory(glyphs[_i3]), indicPosition(glyphs[_i3]), tags[0], syllable);\n    }\n\n    last = end + 1;\n  }\n\n  if (last < glyphs.length) {\n    ++syllable;\n\n    for (var i = last; i < glyphs.length; i++) {\n      glyphs[i].shaperInfo = new IndicInfo(CATEGORIES.X, POSITIONS.End, 'non_indic_cluster', syllable);\n    }\n  }\n}\n\nfunction isConsonant(glyph) {\n  return glyph.shaperInfo.category & CONSONANT_FLAGS;\n}\n\nfunction isJoiner(glyph) {\n  return glyph.shaperInfo.category & JOINER_FLAGS;\n}\n\nfunction isHalantOrCoeng(glyph) {\n  return glyph.shaperInfo.category & HALANT_OR_COENG_FLAGS;\n}\n\nfunction wouldSubstitute(glyphs, feature) {\n  for (var _iterator2 = glyphs, _isArray2 = Array.isArray(_iterator2), _i4 = 0, _iterator2 = _isArray2 ? _iterator2 : _getIterator(_iterator2);;) {\n    var _glyph$features;\n\n    var _ref3;\n\n    if (_isArray2) {\n      if (_i4 >= _iterator2.length) break;\n      _ref3 = _iterator2[_i4++];\n    } else {\n      _i4 = _iterator2.next();\n      if (_i4.done) break;\n      _ref3 = _i4.value;\n    }\n\n    var glyph = _ref3;\n    glyph.features = (_glyph$features = {}, _glyph$features[feature] = true, _glyph$features);\n  }\n\n  var GSUB = glyphs[0]._font._layoutEngine.engine.GSUBProcessor;\n  GSUB.applyFeatures([feature], glyphs);\n  return glyphs.length === 1;\n}\n\nfunction consonantPosition(font, consonant, virama) {\n  var glyphs = [virama, consonant, virama];\n\n  if (wouldSubstitute(glyphs.slice(0, 2), 'blwf') || wouldSubstitute(glyphs.slice(1, 3), 'blwf')) {\n    return POSITIONS.Below_C;\n  } else if (wouldSubstitute(glyphs.slice(0, 2), 'pstf') || wouldSubstitute(glyphs.slice(1, 3), 'pstf')) {\n    return POSITIONS.Post_C;\n  } else if (wouldSubstitute(glyphs.slice(0, 2), 'pref') || wouldSubstitute(glyphs.slice(1, 3), 'pref')) {\n    return POSITIONS.Post_C;\n  }\n\n  return POSITIONS.Base_C;\n}\n\nfunction initialReordering(font, glyphs, plan) {\n  var indicConfig = plan.indicConfig;\n  var features = font._layoutEngine.engine.GSUBProcessor.features;\n  var dottedCircle = font.glyphForCodePoint(0x25cc).id;\n  var virama = font.glyphForCodePoint(indicConfig.virama).id;\n\n  if (virama) {\n    var info = new GlyphInfo(font, virama, [indicConfig.virama]);\n\n    for (var i = 0; i < glyphs.length; i++) {\n      if (glyphs[i].shaperInfo.position === POSITIONS.Base_C) {\n        glyphs[i].shaperInfo.position = consonantPosition(font, glyphs[i].copy(), info);\n      }\n    }\n  }\n\n  for (var start = 0, end = nextSyllable(glyphs, 0); start < glyphs.length; start = end, end = nextSyllable(glyphs, start)) {\n    var _glyphs$start$shaperI = glyphs[start].shaperInfo,\n        category = _glyphs$start$shaperI.category,\n        syllableType = _glyphs$start$shaperI.syllableType;\n\n    if (syllableType === 'symbol_cluster' || syllableType === 'non_indic_cluster') {\n      continue;\n    }\n\n    if (syllableType === 'broken_cluster' && dottedCircle) {\n      var g = new GlyphInfo(font, dottedCircle, [0x25cc]);\n      g.shaperInfo = new IndicInfo(1 << indicCategory(g), indicPosition(g), glyphs[start].shaperInfo.syllableType, glyphs[start].shaperInfo.syllable); // Insert after possible Repha.\n\n      var _i5 = start;\n\n      while (_i5 < end && glyphs[_i5].shaperInfo.category === CATEGORIES.Repha) {\n        _i5++;\n      }\n\n      glyphs.splice(_i5++, 0, g);\n      end++;\n    } // 1. Find base consonant:\n    //\n    // The shaping engine finds the base consonant of the syllable, using the\n    // following algorithm: starting from the end of the syllable, move backwards\n    // until a consonant is found that does not have a below-base or post-base\n    // form (post-base forms have to follow below-base forms), or that is not a\n    // pre-base reordering Ra, or arrive at the first consonant. The consonant\n    // stopped at will be the base.\n\n\n    var base = end;\n    var limit = start;\n    var hasReph = false; // If the syllable starts with Ra + Halant (in a script that has Reph)\n    // and has more than one consonant, Ra is excluded from candidates for\n    // base consonants.\n\n    if (indicConfig.rephPos !== POSITIONS.Ra_To_Become_Reph && features.rphf && start + 3 <= end && (indicConfig.rephMode === 'Implicit' && !isJoiner(glyphs[start + 2]) || indicConfig.rephMode === 'Explicit' && glyphs[start + 2].shaperInfo.category === CATEGORIES.ZWJ)) {\n      // See if it matches the 'rphf' feature.\n      var _g = [glyphs[start].copy(), glyphs[start + 1].copy(), glyphs[start + 2].copy()];\n\n      if (wouldSubstitute(_g.slice(0, 2), 'rphf') || indicConfig.rephMode === 'Explicit' && wouldSubstitute(_g, 'rphf')) {\n        limit += 2;\n\n        while (limit < end && isJoiner(glyphs[limit])) {\n          limit++;\n        }\n\n        base = start;\n        hasReph = true;\n      }\n    } else if (indicConfig.rephMode === 'Log_Repha' && glyphs[start].shaperInfo.category === CATEGORIES.Repha) {\n      limit++;\n\n      while (limit < end && isJoiner(glyphs[limit])) {\n        limit++;\n      }\n\n      base = start;\n      hasReph = true;\n    }\n\n    switch (indicConfig.basePos) {\n      case 'Last':\n        {\n          // starting from the end of the syllable, move backwards\n          var _i6 = end;\n          var seenBelow = false;\n\n          do {\n            var _info = glyphs[--_i6].shaperInfo; // until a consonant is found\n\n            if (isConsonant(glyphs[_i6])) {\n              // that does not have a below-base or post-base form\n              // (post-base forms have to follow below-base forms),\n              if (_info.position !== POSITIONS.Below_C && (_info.position !== POSITIONS.Post_C || seenBelow)) {\n                base = _i6;\n                break;\n              } // or that is not a pre-base reordering Ra,\n              //\n              // IMPLEMENTATION NOTES:\n              //\n              // Our pre-base reordering Ra's are marked POS_POST_C, so will be skipped\n              // by the logic above already.\n              //\n              // or arrive at the first consonant. The consonant stopped at will\n              // be the base.\n\n\n              if (_info.position === POSITIONS.Below_C) {\n                seenBelow = true;\n              }\n\n              base = _i6;\n            } else if (start < _i6 && _info.category === CATEGORIES.ZWJ && glyphs[_i6 - 1].shaperInfo.category === CATEGORIES.H) {\n              // A ZWJ after a Halant stops the base search, and requests an explicit\n              // half form.\n              // A ZWJ before a Halant, requests a subjoined form instead, and hence\n              // search continues.  This is particularly important for Bengali\n              // sequence Ra,H,Ya that should form Ya-Phalaa by subjoining Ya.\n              break;\n            }\n          } while (_i6 > limit);\n\n          break;\n        }\n\n      case 'First':\n        {\n          // The first consonant is always the base.\n          base = start; // Mark all subsequent consonants as below.\n\n          for (var _i7 = base + 1; _i7 < end; _i7++) {\n            if (isConsonant(glyphs[_i7])) {\n              glyphs[_i7].shaperInfo.position = POSITIONS.Below_C;\n            }\n          }\n        }\n    } // If the syllable starts with Ra + Halant (in a script that has Reph)\n    // and has more than one consonant, Ra is excluded from candidates for\n    // base consonants.\n    //\n    //  Only do this for unforced Reph. (ie. not for Ra,H,ZWJ)\n\n\n    if (hasReph && base === start && limit - base <= 2) {\n      hasReph = false;\n    } // 2. Decompose and reorder Matras:\n    //\n    // Each matra and any syllable modifier sign in the cluster are moved to the\n    // appropriate position relative to the consonant(s) in the cluster. The\n    // shaping engine decomposes two- or three-part matras into their constituent\n    // parts before any repositioning. Matra characters are classified by which\n    // consonant in a conjunct they have affinity for and are reordered to the\n    // following positions:\n    //\n    //   o Before first half form in the syllable\n    //   o After subjoined consonants\n    //   o After post-form consonant\n    //   o After main consonant (for above marks)\n    //\n    // IMPLEMENTATION NOTES:\n    //\n    // The normalize() routine has already decomposed matras for us, so we don't\n    // need to worry about that.\n    // 3.  Reorder marks to canonical order:\n    //\n    // Adjacent nukta and halant or nukta and vedic sign are always repositioned\n    // if necessary, so that the nukta is first.\n    //\n    // IMPLEMENTATION NOTES:\n    //\n    // We don't need to do this: the normalize() routine already did this for us.\n    // Reorder characters\n\n\n    for (var _i8 = start; _i8 < base; _i8++) {\n      var _info2 = glyphs[_i8].shaperInfo;\n      _info2.position = Math.min(POSITIONS.Pre_C, _info2.position);\n    }\n\n    if (base < end) {\n      glyphs[base].shaperInfo.position = POSITIONS.Base_C;\n    } // Mark final consonants.  A final consonant is one appearing after a matra,\n    // like in Khmer.\n\n\n    for (var _i9 = base + 1; _i9 < end; _i9++) {\n      if (glyphs[_i9].shaperInfo.category === CATEGORIES.M) {\n        for (var j = _i9 + 1; j < end; j++) {\n          if (isConsonant(glyphs[j])) {\n            glyphs[j].shaperInfo.position = POSITIONS.Final_C;\n            break;\n          }\n        }\n\n        break;\n      }\n    } // Handle beginning Ra\n\n\n    if (hasReph) {\n      glyphs[start].shaperInfo.position = POSITIONS.Ra_To_Become_Reph;\n    } // For old-style Indic script tags, move the first post-base Halant after\n    // last consonant.\n    //\n    // Reports suggest that in some scripts Uniscribe does this only if there\n    // is *not* a Halant after last consonant already (eg. Kannada), while it\n    // does it unconditionally in other scripts (eg. Malayalam).  We don't\n    // currently know about other scripts, so we single out Malayalam for now.\n    //\n    // Kannada test case:\n    // U+0C9A,U+0CCD,U+0C9A,U+0CCD\n    // With some versions of Lohit Kannada.\n    // https://bugs.freedesktop.org/show_bug.cgi?id=59118\n    //\n    // Malayalam test case:\n    // U+0D38,U+0D4D,U+0D31,U+0D4D,U+0D31,U+0D4D\n    // With lohit-ttf-20121122/Lohit-Malayalam.ttf\n\n\n    if (plan.isOldSpec) {\n      var disallowDoubleHalants = plan.unicodeScript !== 'Malayalam';\n\n      for (var _i10 = base + 1; _i10 < end; _i10++) {\n        if (glyphs[_i10].shaperInfo.category === CATEGORIES.H) {\n          var _j = void 0;\n\n          for (_j = end - 1; _j > _i10; _j--) {\n            if (isConsonant(glyphs[_j]) || disallowDoubleHalants && glyphs[_j].shaperInfo.category === CATEGORIES.H) {\n              break;\n            }\n          }\n\n          if (glyphs[_j].shaperInfo.category !== CATEGORIES.H && _j > _i10) {\n            // Move Halant to after last consonant.\n            var t = glyphs[_i10];\n            glyphs.splice.apply(glyphs, [_i10, 0].concat(glyphs.splice(_i10 + 1, _j - _i10)));\n            glyphs[_j] = t;\n          }\n\n          break;\n        }\n      }\n    } // Attach misc marks to previous char to move with them.\n\n\n    var lastPos = POSITIONS.Start;\n\n    for (var _i11 = start; _i11 < end; _i11++) {\n      var _info3 = glyphs[_i11].shaperInfo;\n\n      if (_info3.category & (JOINER_FLAGS | CATEGORIES.N | CATEGORIES.RS | CATEGORIES.CM | HALANT_OR_COENG_FLAGS & _info3.category)) {\n        _info3.position = lastPos;\n\n        if (_info3.category === CATEGORIES.H && _info3.position === POSITIONS.Pre_M) {\n          // Uniscribe doesn't move the Halant with Left Matra.\n          // TEST: U+092B,U+093F,U+094DE\n          // We follow.  This is important for the Sinhala\n          // U+0DDA split matra since it decomposes to U+0DD9,U+0DCA\n          // where U+0DD9 is a left matra and U+0DCA is the virama.\n          // We don't want to move the virama with the left matra.\n          // TEST: U+0D9A,U+0DDA\n          for (var _j2 = _i11; _j2 > start; _j2--) {\n            if (glyphs[_j2 - 1].shaperInfo.position !== POSITIONS.Pre_M) {\n              _info3.position = glyphs[_j2 - 1].shaperInfo.position;\n              break;\n            }\n          }\n        }\n      } else if (_info3.position !== POSITIONS.SMVD) {\n        lastPos = _info3.position;\n      }\n    } // For post-base consonants let them own anything before them\n    // since the last consonant or matra.\n\n\n    var last = base;\n\n    for (var _i12 = base + 1; _i12 < end; _i12++) {\n      if (isConsonant(glyphs[_i12])) {\n        for (var _j3 = last + 1; _j3 < _i12; _j3++) {\n          if (glyphs[_j3].shaperInfo.position < POSITIONS.SMVD) {\n            glyphs[_j3].shaperInfo.position = glyphs[_i12].shaperInfo.position;\n          }\n        }\n\n        last = _i12;\n      } else if (glyphs[_i12].shaperInfo.category === CATEGORIES.M) {\n        last = _i12;\n      }\n    }\n\n    var arr = glyphs.slice(start, end);\n    arr.sort(function (a, b) {\n      return a.shaperInfo.position - b.shaperInfo.position;\n    });\n    glyphs.splice.apply(glyphs, [start, arr.length].concat(arr)); // Find base again\n\n    for (var _i13 = start; _i13 < end; _i13++) {\n      if (glyphs[_i13].shaperInfo.position === POSITIONS.Base_C) {\n        base = _i13;\n        break;\n      }\n    } // Setup features now\n    // Reph\n\n\n    for (var _i14 = start; _i14 < end && glyphs[_i14].shaperInfo.position === POSITIONS.Ra_To_Become_Reph; _i14++) {\n      glyphs[_i14].features.rphf = true;\n    } // Pre-base\n\n\n    var blwf = !plan.isOldSpec && indicConfig.blwfMode === 'Pre_And_Post';\n\n    for (var _i15 = start; _i15 < base; _i15++) {\n      glyphs[_i15].features.half = true;\n\n      if (blwf) {\n        glyphs[_i15].features.blwf = true;\n      }\n    } // Post-base\n\n\n    for (var _i16 = base + 1; _i16 < end; _i16++) {\n      glyphs[_i16].features.abvf = true;\n      glyphs[_i16].features.pstf = true;\n      glyphs[_i16].features.blwf = true;\n    }\n\n    if (plan.isOldSpec && plan.unicodeScript === 'Devanagari') {\n      // Old-spec eye-lash Ra needs special handling.  From the\n      // spec:\n      //\n      // \"The feature 'below-base form' is applied to consonants\n      // having below-base forms and following the base consonant.\n      // The exception is vattu, which may appear below half forms\n      // as well as below the base glyph. The feature 'below-base\n      // form' will be applied to all such occurrences of Ra as well.\"\n      //\n      // Test case: U+0924,U+094D,U+0930,U+094d,U+0915\n      // with Sanskrit 2003 font.\n      //\n      // However, note that Ra,Halant,ZWJ is the correct way to\n      // request eyelash form of Ra, so we wouldbn't inhibit it\n      // in that sequence.\n      //\n      // Test case: U+0924,U+094D,U+0930,U+094d,U+200D,U+0915\n      for (var _i17 = start; _i17 + 1 < base; _i17++) {\n        if (glyphs[_i17].shaperInfo.category === CATEGORIES.Ra && glyphs[_i17 + 1].shaperInfo.category === CATEGORIES.H && (_i17 + 1 === base || glyphs[_i17 + 2].shaperInfo.category === CATEGORIES.ZWJ)) {\n          glyphs[_i17].features.blwf = true;\n          glyphs[_i17 + 1].features.blwf = true;\n        }\n      }\n    }\n\n    var prefLen = 2;\n\n    if (features.pref && base + prefLen < end) {\n      // Find a Halant,Ra sequence and mark it for pre-base reordering processing.\n      for (var _i18 = base + 1; _i18 + prefLen - 1 < end; _i18++) {\n        var _g2 = [glyphs[_i18].copy(), glyphs[_i18 + 1].copy()];\n\n        if (wouldSubstitute(_g2, 'pref')) {\n          for (var _j4 = 0; _j4 < prefLen; _j4++) {\n            glyphs[_i18++].features.pref = true;\n          } // Mark the subsequent stuff with 'cfar'.  Used in Khmer.\n          // Read the feature spec.\n          // This allows distinguishing the following cases with MS Khmer fonts:\n          // U+1784,U+17D2,U+179A,U+17D2,U+1782\n          // U+1784,U+17D2,U+1782,U+17D2,U+179A\n\n\n          if (features.cfar) {\n            for (; _i18 < end; _i18++) {\n              glyphs[_i18].features.cfar = true;\n            }\n          }\n\n          break;\n        }\n      }\n    } // Apply ZWJ/ZWNJ effects\n\n\n    for (var _i19 = start + 1; _i19 < end; _i19++) {\n      if (isJoiner(glyphs[_i19])) {\n        var nonJoiner = glyphs[_i19].shaperInfo.category === CATEGORIES.ZWNJ;\n        var _j5 = _i19;\n\n        do {\n          _j5--; // ZWJ/ZWNJ should disable CJCT.  They do that by simply\n          // being there, since we don't skip them for the CJCT\n          // feature (ie. F_MANUAL_ZWJ)\n          // A ZWNJ disables HALF.\n\n          if (nonJoiner) {\n            delete glyphs[_j5].features.half;\n          }\n        } while (_j5 > start && !isConsonant(glyphs[_j5]));\n      }\n    }\n  }\n}\n\nfunction finalReordering(font, glyphs, plan) {\n  var indicConfig = plan.indicConfig;\n  var features = font._layoutEngine.engine.GSUBProcessor.features;\n\n  for (var start = 0, end = nextSyllable(glyphs, 0); start < glyphs.length; start = end, end = nextSyllable(glyphs, start)) {\n    // 4. Final reordering:\n    //\n    // After the localized forms and basic shaping forms GSUB features have been\n    // applied (see below), the shaping engine performs some final glyph\n    // reordering before applying all the remaining font features to the entire\n    // cluster.\n    var tryPref = !!features.pref; // Find base again\n\n    var base = start;\n\n    for (; base < end; base++) {\n      if (glyphs[base].shaperInfo.position >= POSITIONS.Base_C) {\n        if (tryPref && base + 1 < end) {\n          for (var i = base + 1; i < end; i++) {\n            if (glyphs[i].features.pref) {\n              if (!(glyphs[i].substituted && glyphs[i].isLigated && !glyphs[i].isMultiplied)) {\n                // Ok, this was a 'pref' candidate but didn't form any.\n                // Base is around here...\n                base = i;\n\n                while (base < end && isHalantOrCoeng(glyphs[base])) {\n                  base++;\n                }\n\n                glyphs[base].shaperInfo.position = POSITIONS.BASE_C;\n                tryPref = false;\n              }\n\n              break;\n            }\n          }\n        } // For Malayalam, skip over unformed below- (but NOT post-) forms.\n\n\n        if (plan.unicodeScript === 'Malayalam') {\n          for (var _i20 = base + 1; _i20 < end; _i20++) {\n            while (_i20 < end && isJoiner(glyphs[_i20])) {\n              _i20++;\n            }\n\n            if (_i20 === end || !isHalantOrCoeng(glyphs[_i20])) {\n              break;\n            }\n\n            _i20++; // Skip halant.\n\n            while (_i20 < end && isJoiner(glyphs[_i20])) {\n              _i20++;\n            }\n\n            if (_i20 < end && isConsonant(glyphs[_i20]) && glyphs[_i20].shaperInfo.position === POSITIONS.Below_C) {\n              base = _i20;\n              glyphs[base].shaperInfo.position = POSITIONS.Base_C;\n            }\n          }\n        }\n\n        if (start < base && glyphs[base].shaperInfo.position > POSITIONS.Base_C) {\n          base--;\n        }\n\n        break;\n      }\n    }\n\n    if (base === end && start < base && glyphs[base - 1].shaperInfo.category === CATEGORIES.ZWJ) {\n      base--;\n    }\n\n    if (base < end) {\n      while (start < base && glyphs[base].shaperInfo.category & (CATEGORIES.N | HALANT_OR_COENG_FLAGS)) {\n        base--;\n      }\n    } // o Reorder matras:\n    //\n    // If a pre-base matra character had been reordered before applying basic\n    // features, the glyph can be moved closer to the main consonant based on\n    // whether half-forms had been formed. Actual position for the matra is\n    // defined as “after last standalone halant glyph, after initial matra\n    // position and before the main consonant”. If ZWJ or ZWNJ follow this\n    // halant, position is moved after it.\n    //\n\n\n    if (start + 1 < end && start < base) {\n      // Otherwise there can't be any pre-base matra characters.\n      // If we lost track of base, alas, position before last thingy.\n      var newPos = base === end ? base - 2 : base - 1; // Malayalam / Tamil do not have \"half\" forms or explicit virama forms.\n      // The glyphs formed by 'half' are Chillus or ligated explicit viramas.\n      // We want to position matra after them.\n\n      if (plan.unicodeScript !== 'Malayalam' && plan.unicodeScript !== 'Tamil') {\n        while (newPos > start && !(glyphs[newPos].shaperInfo.category & (CATEGORIES.M | HALANT_OR_COENG_FLAGS))) {\n          newPos--;\n        } // If we found no Halant we are done.\n        // Otherwise only proceed if the Halant does\n        // not belong to the Matra itself!\n\n\n        if (isHalantOrCoeng(glyphs[newPos]) && glyphs[newPos].shaperInfo.position !== POSITIONS.Pre_M) {\n          // If ZWJ or ZWNJ follow this halant, position is moved after it.\n          if (newPos + 1 < end && isJoiner(glyphs[newPos + 1])) {\n            newPos++;\n          }\n        } else {\n          newPos = start; // No move.\n        }\n      }\n\n      if (start < newPos && glyphs[newPos].shaperInfo.position !== POSITIONS.Pre_M) {\n        // Now go see if there's actually any matras...\n        for (var _i21 = newPos; _i21 > start; _i21--) {\n          if (glyphs[_i21 - 1].shaperInfo.position === POSITIONS.Pre_M) {\n            var oldPos = _i21 - 1;\n\n            if (oldPos < base && base <= newPos) {\n              // Shouldn't actually happen.\n              base--;\n            }\n\n            var tmp = glyphs[oldPos];\n            glyphs.splice.apply(glyphs, [oldPos, 0].concat(glyphs.splice(oldPos + 1, newPos - oldPos)));\n            glyphs[newPos] = tmp;\n            newPos--;\n          }\n        }\n      }\n    } // o Reorder reph:\n    //\n    // Reph’s original position is always at the beginning of the syllable,\n    // (i.e. it is not reordered at the character reordering stage). However,\n    // it will be reordered according to the basic-forms shaping results.\n    // Possible positions for reph, depending on the script, are; after main,\n    // before post-base consonant forms, and after post-base consonant forms.\n    // Two cases:\n    //\n    // - If repha is encoded as a sequence of characters (Ra,H or Ra,H,ZWJ), then\n    //   we should only move it if the sequence ligated to the repha form.\n    //\n    // - If repha is encoded separately and in the logical position, we should only\n    //   move it if it did NOT ligate.  If it ligated, it's probably the font trying\n    //   to make it work without the reordering.\n\n\n    if (start + 1 < end && glyphs[start].shaperInfo.position === POSITIONS.Ra_To_Become_Reph && glyphs[start].shaperInfo.category === CATEGORIES.Repha !== (glyphs[start].isLigated && !glyphs[start].isMultiplied)) {\n      var newRephPos = void 0;\n      var rephPos = indicConfig.rephPos;\n      var found = false; // 1. If reph should be positioned after post-base consonant forms,\n      //    proceed to step 5.\n\n      if (rephPos !== POSITIONS.After_Post) {\n        //  2. If the reph repositioning class is not after post-base: target\n        //     position is after the first explicit halant glyph between the\n        //     first post-reph consonant and last main consonant. If ZWJ or ZWNJ\n        //     are following this halant, position is moved after it. If such\n        //     position is found, this is the target position. Otherwise,\n        //     proceed to the next step.\n        //\n        //     Note: in old-implementation fonts, where classifications were\n        //     fixed in shaping engine, there was no case where reph position\n        //     will be found on this step.\n        newRephPos = start + 1;\n\n        while (newRephPos < base && !isHalantOrCoeng(glyphs[newRephPos])) {\n          newRephPos++;\n        }\n\n        if (newRephPos < base && isHalantOrCoeng(glyphs[newRephPos])) {\n          // ->If ZWJ or ZWNJ are following this halant, position is moved after it.\n          if (newRephPos + 1 < base && isJoiner(glyphs[newRephPos + 1])) {\n            newRephPos++;\n          }\n\n          found = true;\n        } // 3. If reph should be repositioned after the main consonant: find the\n        //    first consonant not ligated with main, or find the first\n        //    consonant that is not a potential pre-base reordering Ra.\n\n\n        if (!found && rephPos === POSITIONS.After_Main) {\n          newRephPos = base;\n\n          while (newRephPos + 1 < end && glyphs[newRephPos + 1].shaperInfo.position <= POSITIONS.After_Main) {\n            newRephPos++;\n          }\n\n          found = newRephPos < end;\n        } // 4. If reph should be positioned before post-base consonant, find\n        //    first post-base classified consonant not ligated with main. If no\n        //    consonant is found, the target position should be before the\n        //    first matra, syllable modifier sign or vedic sign.\n        //\n        // This is our take on what step 4 is trying to say (and failing, BADLY).\n\n\n        if (!found && rephPos === POSITIONS.After_Sub) {\n          newRephPos = base;\n\n          while (newRephPos + 1 < end && !(glyphs[newRephPos + 1].shaperInfo.position & (POSITIONS.Post_C | POSITIONS.After_Post | POSITIONS.SMVD))) {\n            newRephPos++;\n          }\n\n          found = newRephPos < end;\n        }\n      } //  5. If no consonant is found in steps 3 or 4, move reph to a position\n      //     immediately before the first post-base matra, syllable modifier\n      //     sign or vedic sign that has a reordering class after the intended\n      //     reph position. For example, if the reordering position for reph\n      //     is post-main, it will skip above-base matras that also have a\n      //     post-main position.\n\n\n      if (!found) {\n        // Copied from step 2.\n        newRephPos = start + 1;\n\n        while (newRephPos < base && !isHalantOrCoeng(glyphs[newRephPos])) {\n          newRephPos++;\n        }\n\n        if (newRephPos < base && isHalantOrCoeng(glyphs[newRephPos])) {\n          // ->If ZWJ or ZWNJ are following this halant, position is moved after it.\n          if (newRephPos + 1 < base && isJoiner(glyphs[newRephPos + 1])) {\n            newRephPos++;\n          }\n\n          found = true;\n        }\n      } // 6. Otherwise, reorder reph to the end of the syllable.\n\n\n      if (!found) {\n        newRephPos = end - 1;\n\n        while (newRephPos > start && glyphs[newRephPos].shaperInfo.position === POSITIONS.SMVD) {\n          newRephPos--;\n        } // If the Reph is to be ending up after a Matra,Halant sequence,\n        // position it before that Halant so it can interact with the Matra.\n        // However, if it's a plain Consonant,Halant we shouldn't do that.\n        // Uniscribe doesn't do this.\n        // TEST: U+0930,U+094D,U+0915,U+094B,U+094D\n\n\n        if (isHalantOrCoeng(glyphs[newRephPos])) {\n          for (var _i22 = base + 1; _i22 < newRephPos; _i22++) {\n            if (glyphs[_i22].shaperInfo.category === CATEGORIES.M) {\n              newRephPos--;\n            }\n          }\n        }\n      }\n\n      var reph = glyphs[start];\n      glyphs.splice.apply(glyphs, [start, 0].concat(glyphs.splice(start + 1, newRephPos - start)));\n      glyphs[newRephPos] = reph;\n\n      if (start < base && base <= newRephPos) {\n        base--;\n      }\n    } // o Reorder pre-base reordering consonants:\n    //\n    // If a pre-base reordering consonant is found, reorder it according to\n    // the following rules:\n\n\n    if (tryPref && base + 1 < end) {\n      for (var _i23 = base + 1; _i23 < end; _i23++) {\n        if (glyphs[_i23].features.pref) {\n          // 1. Only reorder a glyph produced by substitution during application\n          //    of the <pref> feature. (Note that a font may shape a Ra consonant with\n          //    the feature generally but block it in certain contexts.)\n          // Note: We just check that something got substituted.  We don't check that\n          // the <pref> feature actually did it...\n          //\n          // Reorder pref only if it ligated.\n          if (glyphs[_i23].isLigated && !glyphs[_i23].isMultiplied) {\n            // 2. Try to find a target position the same way as for pre-base matra.\n            //    If it is found, reorder pre-base consonant glyph.\n            //\n            // 3. If position is not found, reorder immediately before main\n            //    consonant.\n            var _newPos = base; // Malayalam / Tamil do not have \"half\" forms or explicit virama forms.\n            // The glyphs formed by 'half' are Chillus or ligated explicit viramas.\n            // We want to position matra after them.\n\n            if (plan.unicodeScript !== 'Malayalam' && plan.unicodeScript !== 'Tamil') {\n              while (_newPos > start && !(glyphs[_newPos - 1].shaperInfo.category & (CATEGORIES.M | HALANT_OR_COENG_FLAGS))) {\n                _newPos--;\n              } // In Khmer coeng model, a H,Ra can go *after* matras.  If it goes after a\n              // split matra, it should be reordered to *before* the left part of such matra.\n\n\n              if (_newPos > start && glyphs[_newPos - 1].shaperInfo.category === CATEGORIES.M) {\n                var _oldPos2 = _i23;\n\n                for (var j = base + 1; j < _oldPos2; j++) {\n                  if (glyphs[j].shaperInfo.category === CATEGORIES.M) {\n                    _newPos--;\n                    break;\n                  }\n                }\n              }\n            }\n\n            if (_newPos > start && isHalantOrCoeng(glyphs[_newPos - 1])) {\n              // -> If ZWJ or ZWNJ follow this halant, position is moved after it.\n              if (_newPos < end && isJoiner(glyphs[_newPos])) {\n                _newPos++;\n              }\n            }\n\n            var _oldPos = _i23;\n            var _tmp = glyphs[_oldPos];\n            glyphs.splice.apply(glyphs, [_newPos + 1, 0].concat(glyphs.splice(_newPos, _oldPos - _newPos)));\n            glyphs[_newPos] = _tmp;\n\n            if (_newPos <= base && base < _oldPos) {\n              base++;\n            }\n          }\n\n          break;\n        }\n      }\n    } // Apply 'init' to the Left Matra if it's a word start.\n\n\n    if (glyphs[start].shaperInfo.position === POSITIONS.Pre_M && (!start || !/Cf|Mn/.test(unicode.getCategory(glyphs[start - 1].codePoints[0])))) {\n      glyphs[start].features.init = true;\n    }\n  }\n}\n\nfunction nextSyllable(glyphs, start) {\n  if (start >= glyphs.length) return start;\n  var syllable = glyphs[start].shaperInfo.syllable;\n\n  while (++start < glyphs.length && glyphs[start].shaperInfo.syllable === syllable) {}\n\n  return start;\n}\n\nvar _class$7;\n\nvar _temp$3;\n\nvar categories$1 = useData.categories;\nvar decompositions$2 = useData.decompositions;\nvar trie$2 = new UnicodeTrie(Buffer(\"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\",\"base64\"));\nvar stateMachine$1 = new StateMachine(useData);\n/**\n * This shaper is an implementation of the Universal Shaping Engine, which\n * uses Unicode data to shape a number of scripts without a dedicated shaping engine.\n * See https://www.microsoft.com/typography/OpenTypeDev/USE/intro.htm.\n */\n\nvar UniversalShaper = (_temp$3 = _class$7 = function (_DefaultShaper) {\n  _inherits(UniversalShaper, _DefaultShaper);\n\n  function UniversalShaper() {\n    _classCallCheck(this, UniversalShaper);\n\n    return _possibleConstructorReturn(this, _DefaultShaper.apply(this, arguments));\n  }\n\n  UniversalShaper.planFeatures = function planFeatures(plan) {\n    plan.addStage(setupSyllables$1); // Default glyph pre-processing group\n\n    plan.addStage(['locl', 'ccmp', 'nukt', 'akhn']); // Reordering group\n\n    plan.addStage(clearSubstitutionFlags);\n    plan.addStage(['rphf'], false);\n    plan.addStage(recordRphf);\n    plan.addStage(clearSubstitutionFlags);\n    plan.addStage(['pref']);\n    plan.addStage(recordPref); // Orthographic unit shaping group\n\n    plan.addStage(['rkrf', 'abvf', 'blwf', 'half', 'pstf', 'vatu', 'cjct']);\n    plan.addStage(reorder); // Topographical features\n    // Scripts that need this are handled by the Arabic shaper, not implemented here for now.\n    // plan.addStage(['isol', 'init', 'medi', 'fina', 'med2', 'fin2', 'fin3'], false);\n    // Standard topographic presentation and positional feature application\n\n    plan.addStage(['abvs', 'blws', 'pres', 'psts', 'dist', 'abvm', 'blwm']);\n  };\n\n  UniversalShaper.assignFeatures = function assignFeatures(plan, glyphs) {\n    var _loop = function _loop(i) {\n      var codepoint = glyphs[i].codePoints[0];\n\n      if (decompositions$2[codepoint]) {\n        var decomposed = decompositions$2[codepoint].map(function (c) {\n          var g = plan.font.glyphForCodePoint(c);\n          return new GlyphInfo(plan.font, g.id, [c], glyphs[i].features);\n        });\n        glyphs.splice.apply(glyphs, [i, 1].concat(decomposed));\n      }\n    }; // Decompose split vowels\n    // TODO: do this in a more general unicode normalizer\n\n\n    for (var i = glyphs.length - 1; i >= 0; i--) {\n      _loop(i);\n    }\n  };\n\n  return UniversalShaper;\n}(DefaultShaper), _class$7.zeroMarkWidths = 'BEFORE_GPOS', _temp$3);\n\nfunction useCategory(glyph) {\n  return trie$2.get(glyph.codePoints[0]);\n}\n\nvar USEInfo = function USEInfo(category, syllableType, syllable) {\n  _classCallCheck(this, USEInfo);\n\n  this.category = category;\n  this.syllableType = syllableType;\n  this.syllable = syllable;\n};\n\nfunction setupSyllables$1(font, glyphs) {\n  var syllable = 0;\n\n  for (var _iterator = stateMachine$1.match(glyphs.map(useCategory)), _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _getIterator(_iterator);;) {\n    var _ref;\n\n    if (_isArray) {\n      if (_i >= _iterator.length) break;\n      _ref = _iterator[_i++];\n    } else {\n      _i = _iterator.next();\n      if (_i.done) break;\n      _ref = _i.value;\n    }\n\n    var _ref2 = _ref,\n        start = _ref2[0],\n        end = _ref2[1],\n        tags = _ref2[2];\n    ++syllable; // Create shaper info\n\n    for (var i = start; i <= end; i++) {\n      glyphs[i].shaperInfo = new USEInfo(categories$1[useCategory(glyphs[i])], tags[0], syllable);\n    } // Assign rphf feature\n\n\n    var limit = glyphs[start].shaperInfo.category === 'R' ? 1 : Math.min(3, end - start);\n\n    for (var _i2 = start; _i2 < start + limit; _i2++) {\n      glyphs[_i2].features.rphf = true;\n    }\n  }\n}\n\nfunction clearSubstitutionFlags(font, glyphs) {\n  for (var _iterator2 = glyphs, _isArray2 = Array.isArray(_iterator2), _i3 = 0, _iterator2 = _isArray2 ? _iterator2 : _getIterator(_iterator2);;) {\n    var _ref3;\n\n    if (_isArray2) {\n      if (_i3 >= _iterator2.length) break;\n      _ref3 = _iterator2[_i3++];\n    } else {\n      _i3 = _iterator2.next();\n      if (_i3.done) break;\n      _ref3 = _i3.value;\n    }\n\n    var glyph = _ref3;\n    glyph.substituted = false;\n  }\n}\n\nfunction recordRphf(font, glyphs) {\n  for (var _iterator3 = glyphs, _isArray3 = Array.isArray(_iterator3), _i4 = 0, _iterator3 = _isArray3 ? _iterator3 : _getIterator(_iterator3);;) {\n    var _ref4;\n\n    if (_isArray3) {\n      if (_i4 >= _iterator3.length) break;\n      _ref4 = _iterator3[_i4++];\n    } else {\n      _i4 = _iterator3.next();\n      if (_i4.done) break;\n      _ref4 = _i4.value;\n    }\n\n    var glyph = _ref4;\n\n    if (glyph.substituted && glyph.features.rphf) {\n      // Mark a substituted repha.\n      glyph.shaperInfo.category = 'R';\n    }\n  }\n}\n\nfunction recordPref(font, glyphs) {\n  for (var _iterator4 = glyphs, _isArray4 = Array.isArray(_iterator4), _i5 = 0, _iterator4 = _isArray4 ? _iterator4 : _getIterator(_iterator4);;) {\n    var _ref5;\n\n    if (_isArray4) {\n      if (_i5 >= _iterator4.length) break;\n      _ref5 = _iterator4[_i5++];\n    } else {\n      _i5 = _iterator4.next();\n      if (_i5.done) break;\n      _ref5 = _i5.value;\n    }\n\n    var glyph = _ref5;\n\n    if (glyph.substituted) {\n      // Mark a substituted pref as VPre, as they behave the same way.\n      glyph.shaperInfo.category = 'VPre';\n    }\n  }\n}\n\nfunction reorder(font, glyphs) {\n  var dottedCircle = font.glyphForCodePoint(0x25cc).id;\n\n  for (var start = 0, end = nextSyllable$1(glyphs, 0); start < glyphs.length; start = end, end = nextSyllable$1(glyphs, start)) {\n    var i = void 0,\n        j = void 0;\n    var info = glyphs[start].shaperInfo;\n    var type = info.syllableType; // Only a few syllable types need reordering.\n\n    if (type !== 'virama_terminated_cluster' && type !== 'standard_cluster' && type !== 'broken_cluster') {\n      continue;\n    } // Insert a dotted circle glyph in broken clusters.\n\n\n    if (type === 'broken_cluster' && dottedCircle) {\n      var g = new GlyphInfo(font, dottedCircle, [0x25cc]);\n      g.shaperInfo = info; // Insert after possible Repha.\n\n      for (i = start; i < end && glyphs[i].shaperInfo.category === 'R'; i++) {}\n\n      glyphs.splice(++i, 0, g);\n      end++;\n    } // Move things forward.\n\n\n    if (info.category === 'R' && end - start > 1) {\n      // Got a repha. Reorder it to after first base, before first halant.\n      for (i = start + 1; i < end; i++) {\n        info = glyphs[i].shaperInfo;\n\n        if (isBase(info) || isHalant(glyphs[i])) {\n          // If we hit a halant, move before it; otherwise it's a base: move to it's\n          // place, and shift things in between backward.\n          if (isHalant(glyphs[i])) {\n            i--;\n          }\n\n          glyphs.splice.apply(glyphs, [start, 0].concat(glyphs.splice(start + 1, i - start), [glyphs[i]]));\n          break;\n        }\n      }\n    } // Move things back.\n\n\n    for (i = start, j = end; i < end; i++) {\n      info = glyphs[i].shaperInfo;\n\n      if (isBase(info) || isHalant(glyphs[i])) {\n        // If we hit a halant, move after it; otherwise it's a base: move to it's\n        // place, and shift things in between backward.\n        j = isHalant(glyphs[i]) ? i + 1 : i;\n      } else if ((info.category === 'VPre' || info.category === 'VMPre') && j < i) {\n        glyphs.splice.apply(glyphs, [j, 1, glyphs[i]].concat(glyphs.splice(j, i - j)));\n      }\n    }\n  }\n}\n\nfunction nextSyllable$1(glyphs, start) {\n  if (start >= glyphs.length) return start;\n  var syllable = glyphs[start].shaperInfo.syllable;\n\n  while (++start < glyphs.length && glyphs[start].shaperInfo.syllable === syllable) {}\n\n  return start;\n}\n\nfunction isHalant(glyph) {\n  return glyph.shaperInfo.category === 'H' && !glyph.isLigated;\n}\n\nfunction isBase(info) {\n  return info.category === 'B' || info.category === 'GB';\n}\n\nvar SHAPERS = {\n  arab: ArabicShaper,\n  // Arabic\n  mong: ArabicShaper,\n  // Mongolian\n  syrc: ArabicShaper,\n  // Syriac\n  'nko ': ArabicShaper,\n  // N'Ko\n  phag: ArabicShaper,\n  // Phags Pa\n  mand: ArabicShaper,\n  // Mandaic\n  mani: ArabicShaper,\n  // Manichaean\n  phlp: ArabicShaper,\n  // Psalter Pahlavi\n  hang: HangulShaper,\n  // Hangul\n  bng2: IndicShaper,\n  // Bengali\n  beng: IndicShaper,\n  // Bengali\n  dev2: IndicShaper,\n  // Devanagari\n  deva: IndicShaper,\n  // Devanagari\n  gjr2: IndicShaper,\n  // Gujarati\n  gujr: IndicShaper,\n  // Gujarati\n  guru: IndicShaper,\n  // Gurmukhi\n  gur2: IndicShaper,\n  // Gurmukhi\n  knda: IndicShaper,\n  // Kannada\n  knd2: IndicShaper,\n  // Kannada\n  mlm2: IndicShaper,\n  // Malayalam\n  mlym: IndicShaper,\n  // Malayalam\n  ory2: IndicShaper,\n  // Oriya\n  orya: IndicShaper,\n  // Oriya\n  taml: IndicShaper,\n  // Tamil\n  tml2: IndicShaper,\n  // Tamil\n  telu: IndicShaper,\n  // Telugu\n  tel2: IndicShaper,\n  // Telugu\n  khmr: IndicShaper,\n  // Khmer\n  bali: UniversalShaper,\n  // Balinese\n  batk: UniversalShaper,\n  // Batak\n  brah: UniversalShaper,\n  // Brahmi\n  bugi: UniversalShaper,\n  // Buginese\n  buhd: UniversalShaper,\n  // Buhid\n  cakm: UniversalShaper,\n  // Chakma\n  cham: UniversalShaper,\n  // Cham\n  dupl: UniversalShaper,\n  // Duployan\n  egyp: UniversalShaper,\n  // Egyptian Hieroglyphs\n  gran: UniversalShaper,\n  // Grantha\n  hano: UniversalShaper,\n  // Hanunoo\n  java: UniversalShaper,\n  // Javanese\n  kthi: UniversalShaper,\n  // Kaithi\n  kali: UniversalShaper,\n  // Kayah Li\n  khar: UniversalShaper,\n  // Kharoshthi\n  khoj: UniversalShaper,\n  // Khojki\n  sind: UniversalShaper,\n  // Khudawadi\n  lepc: UniversalShaper,\n  // Lepcha\n  limb: UniversalShaper,\n  // Limbu\n  mahj: UniversalShaper,\n  // Mahajani\n  // mand: UniversalShaper, // Mandaic\n  // mani: UniversalShaper, // Manichaean\n  mtei: UniversalShaper,\n  // Meitei Mayek\n  modi: UniversalShaper,\n  // Modi\n  // mong: UniversalShaper, // Mongolian\n  // 'nko ': UniversalShaper, // N’Ko\n  hmng: UniversalShaper,\n  // Pahawh Hmong\n  // phag: UniversalShaper, // Phags-pa\n  // phlp: UniversalShaper, // Psalter Pahlavi\n  rjng: UniversalShaper,\n  // Rejang\n  saur: UniversalShaper,\n  // Saurashtra\n  shrd: UniversalShaper,\n  // Sharada\n  sidd: UniversalShaper,\n  // Siddham\n  sinh: UniversalShaper,\n  // Sinhala\n  sund: UniversalShaper,\n  // Sundanese\n  sylo: UniversalShaper,\n  // Syloti Nagri\n  tglg: UniversalShaper,\n  // Tagalog\n  tagb: UniversalShaper,\n  // Tagbanwa\n  tale: UniversalShaper,\n  // Tai Le\n  lana: UniversalShaper,\n  // Tai Tham\n  tavt: UniversalShaper,\n  // Tai Viet\n  takr: UniversalShaper,\n  // Takri\n  tibt: UniversalShaper,\n  // Tibetan\n  tfng: UniversalShaper,\n  // Tifinagh\n  tirh: UniversalShaper,\n  // Tirhuta\n  latn: DefaultShaper,\n  // Latin\n  DFLT: DefaultShaper // Default\n\n};\n\nfunction choose(script) {\n  if (!Array.isArray(script)) {\n    script = [script];\n  }\n\n  for (var _iterator = script, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _getIterator(_iterator);;) {\n    var _ref;\n\n    if (_isArray) {\n      if (_i >= _iterator.length) break;\n      _ref = _iterator[_i++];\n    } else {\n      _i = _iterator.next();\n      if (_i.done) break;\n      _ref = _i.value;\n    }\n\n    var s = _ref;\n    var shaper = SHAPERS[s];\n\n    if (shaper) {\n      return shaper;\n    }\n  }\n\n  return DefaultShaper;\n}\n\nvar GSUBProcessor = function (_OTProcessor) {\n  _inherits(GSUBProcessor, _OTProcessor);\n\n  function GSUBProcessor() {\n    _classCallCheck(this, GSUBProcessor);\n\n    return _possibleConstructorReturn(this, _OTProcessor.apply(this, arguments));\n  }\n\n  GSUBProcessor.prototype.applyLookup = function applyLookup(lookupType, table) {\n    var _this2 = this;\n\n    switch (lookupType) {\n      case 1:\n        {\n          // Single Substitution\n          var index = this.coverageIndex(table.coverage);\n\n          if (index === -1) {\n            return false;\n          }\n\n          var glyph = this.glyphIterator.cur;\n\n          switch (table.version) {\n            case 1:\n              glyph.id = glyph.id + table.deltaGlyphID & 0xffff;\n              break;\n\n            case 2:\n              glyph.id = table.substitute.get(index);\n              break;\n          }\n\n          return true;\n        }\n\n      case 2:\n        {\n          // Multiple Substitution\n          var _index = this.coverageIndex(table.coverage);\n\n          if (_index !== -1) {\n            var _glyphs;\n\n            var sequence = table.sequences.get(_index);\n\n            if (sequence.length === 0) {\n              // If the sequence length is zero, delete the glyph.\n              // The OpenType spec disallows this, but seems like Harfbuzz and Uniscribe allow it.\n              this.glyphs.splice(this.glyphIterator.index, 1);\n              return true;\n            }\n\n            this.glyphIterator.cur.id = sequence[0];\n            this.glyphIterator.cur.ligatureComponent = 0;\n            var features = this.glyphIterator.cur.features;\n            var curGlyph = this.glyphIterator.cur;\n            var replacement = sequence.slice(1).map(function (gid, i) {\n              var glyph = new GlyphInfo(_this2.font, gid, undefined, features);\n              glyph.shaperInfo = curGlyph.shaperInfo;\n              glyph.isLigated = curGlyph.isLigated;\n              glyph.ligatureComponent = i + 1;\n              glyph.substituted = true;\n              glyph.isMultiplied = true;\n              return glyph;\n            });\n\n            (_glyphs = this.glyphs).splice.apply(_glyphs, [this.glyphIterator.index + 1, 0].concat(replacement));\n\n            return true;\n          }\n\n          return false;\n        }\n\n      case 3:\n        {\n          // Alternate Substitution\n          var _index2 = this.coverageIndex(table.coverage);\n\n          if (_index2 !== -1) {\n            var USER_INDEX = 0; // TODO\n\n            this.glyphIterator.cur.id = table.alternateSet.get(_index2)[USER_INDEX];\n            return true;\n          }\n\n          return false;\n        }\n\n      case 4:\n        {\n          // Ligature Substitution\n          var _index3 = this.coverageIndex(table.coverage);\n\n          if (_index3 === -1) {\n            return false;\n          }\n\n          for (var _iterator = table.ligatureSets.get(_index3), _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _getIterator(_iterator);;) {\n            var _ref;\n\n            if (_isArray) {\n              if (_i >= _iterator.length) break;\n              _ref = _iterator[_i++];\n            } else {\n              _i = _iterator.next();\n              if (_i.done) break;\n              _ref = _i.value;\n            }\n\n            var ligature = _ref;\n            var matched = this.sequenceMatchIndices(1, ligature.components);\n\n            if (!matched) {\n              continue;\n            }\n\n            var _curGlyph = this.glyphIterator.cur; // Concatenate all of the characters the new ligature will represent\n\n            var characters = _curGlyph.codePoints.slice();\n\n            for (var _iterator2 = matched, _isArray2 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray2 ? _iterator2 : _getIterator(_iterator2);;) {\n              var _ref2;\n\n              if (_isArray2) {\n                if (_i2 >= _iterator2.length) break;\n                _ref2 = _iterator2[_i2++];\n              } else {\n                _i2 = _iterator2.next();\n                if (_i2.done) break;\n                _ref2 = _i2.value;\n              }\n\n              var _index4 = _ref2;\n              characters.push.apply(characters, this.glyphs[_index4].codePoints);\n            } // Create the replacement ligature glyph\n\n\n            var ligatureGlyph = new GlyphInfo(this.font, ligature.glyph, characters, _curGlyph.features);\n            ligatureGlyph.shaperInfo = _curGlyph.shaperInfo;\n            ligatureGlyph.isLigated = true;\n            ligatureGlyph.substituted = true; // From Harfbuzz:\n            // - If it *is* a mark ligature, we don't allocate a new ligature id, and leave\n            //   the ligature to keep its old ligature id.  This will allow it to attach to\n            //   a base ligature in GPOS.  Eg. if the sequence is: LAM,LAM,SHADDA,FATHA,HEH,\n            //   and LAM,LAM,HEH for a ligature, they will leave SHADDA and FATHA with a\n            //   ligature id and component value of 2.  Then if SHADDA,FATHA form a ligature\n            //   later, we don't want them to lose their ligature id/component, otherwise\n            //   GPOS will fail to correctly position the mark ligature on top of the\n            //   LAM,LAM,HEH ligature. See https://bugzilla.gnome.org/show_bug.cgi?id=676343\n            //\n            // - If a ligature is formed of components that some of which are also ligatures\n            //   themselves, and those ligature components had marks attached to *their*\n            //   components, we have to attach the marks to the new ligature component\n            //   positions!  Now *that*'s tricky!  And these marks may be following the\n            //   last component of the whole sequence, so we should loop forward looking\n            //   for them and update them.\n            //\n            //   Eg. the sequence is LAM,LAM,SHADDA,FATHA,HEH, and the font first forms a\n            //   'calt' ligature of LAM,HEH, leaving the SHADDA and FATHA with a ligature\n            //   id and component == 1.  Now, during 'liga', the LAM and the LAM-HEH ligature\n            //   form a LAM-LAM-HEH ligature.  We need to reassign the SHADDA and FATHA to\n            //   the new ligature with a component value of 2.\n            //\n            //   This in fact happened to a font...  See https://bugzilla.gnome.org/show_bug.cgi?id=437633\n\n            var isMarkLigature = _curGlyph.isMark;\n\n            for (var i = 0; i < matched.length && isMarkLigature; i++) {\n              isMarkLigature = this.glyphs[matched[i]].isMark;\n            }\n\n            ligatureGlyph.ligatureID = isMarkLigature ? null : this.ligatureID++;\n            var lastLigID = _curGlyph.ligatureID;\n            var lastNumComps = _curGlyph.codePoints.length;\n            var curComps = lastNumComps;\n            var idx = this.glyphIterator.index + 1; // Set ligatureID and ligatureComponent on glyphs that were skipped in the matched sequence.\n            // This allows GPOS to attach marks to the correct ligature components.\n\n            for (var _iterator3 = matched, _isArray3 = Array.isArray(_iterator3), _i3 = 0, _iterator3 = _isArray3 ? _iterator3 : _getIterator(_iterator3);;) {\n              var _ref3;\n\n              if (_isArray3) {\n                if (_i3 >= _iterator3.length) break;\n                _ref3 = _iterator3[_i3++];\n              } else {\n                _i3 = _iterator3.next();\n                if (_i3.done) break;\n                _ref3 = _i3.value;\n              }\n\n              var matchIndex = _ref3; // Don't assign new ligature components for mark ligatures (see above)\n\n              if (isMarkLigature) {\n                idx = matchIndex;\n              } else {\n                while (idx < matchIndex) {\n                  var ligatureComponent = curComps - lastNumComps + Math.min(this.glyphs[idx].ligatureComponent || 1, lastNumComps);\n                  this.glyphs[idx].ligatureID = ligatureGlyph.ligatureID;\n                  this.glyphs[idx].ligatureComponent = ligatureComponent;\n                  idx++;\n                }\n              }\n\n              lastLigID = this.glyphs[idx].ligatureID;\n              lastNumComps = this.glyphs[idx].codePoints.length;\n              curComps += lastNumComps;\n              idx++; // skip base glyph\n            } // Adjust ligature components for any marks following\n\n\n            if (lastLigID && !isMarkLigature) {\n              for (var _i4 = idx; _i4 < this.glyphs.length; _i4++) {\n                if (this.glyphs[_i4].ligatureID === lastLigID) {\n                  var ligatureComponent = curComps - lastNumComps + Math.min(this.glyphs[_i4].ligatureComponent || 1, lastNumComps);\n                  this.glyphs[_i4].ligatureComponent = ligatureComponent;\n                } else {\n                  break;\n                }\n              }\n            } // Delete the matched glyphs, and replace the current glyph with the ligature glyph\n\n\n            for (var _i5 = matched.length - 1; _i5 >= 0; _i5--) {\n              this.glyphs.splice(matched[_i5], 1);\n            }\n\n            this.glyphs[this.glyphIterator.index] = ligatureGlyph;\n            return true;\n          }\n\n          return false;\n        }\n\n      case 5:\n        // Contextual Substitution\n        return this.applyContext(table);\n\n      case 6:\n        // Chaining Contextual Substitution\n        return this.applyChainingContext(table);\n\n      case 7:\n        // Extension Substitution\n        return this.applyLookup(table.lookupType, table.extension);\n\n      default:\n        throw new Error('GSUB lookupType ' + lookupType + ' is not supported');\n    }\n  };\n\n  return GSUBProcessor;\n}(OTProcessor);\n\nvar GPOSProcessor = function (_OTProcessor) {\n  _inherits(GPOSProcessor, _OTProcessor);\n\n  function GPOSProcessor() {\n    _classCallCheck(this, GPOSProcessor);\n\n    return _possibleConstructorReturn(this, _OTProcessor.apply(this, arguments));\n  }\n\n  GPOSProcessor.prototype.applyPositionValue = function applyPositionValue(sequenceIndex, value) {\n    var position = this.positions[this.glyphIterator.peekIndex(sequenceIndex)];\n\n    if (value.xAdvance != null) {\n      position.xAdvance += value.xAdvance;\n    }\n\n    if (value.yAdvance != null) {\n      position.yAdvance += value.yAdvance;\n    }\n\n    if (value.xPlacement != null) {\n      position.xOffset += value.xPlacement;\n    }\n\n    if (value.yPlacement != null) {\n      position.yOffset += value.yPlacement;\n    } // Adjustments for font variations\n\n\n    var variationProcessor = this.font._variationProcessor;\n    var variationStore = this.font.GDEF && this.font.GDEF.itemVariationStore;\n\n    if (variationProcessor && variationStore) {\n      if (value.xPlaDevice) {\n        position.xOffset += variationProcessor.getDelta(variationStore, value.xPlaDevice.a, value.xPlaDevice.b);\n      }\n\n      if (value.yPlaDevice) {\n        position.yOffset += variationProcessor.getDelta(variationStore, value.yPlaDevice.a, value.yPlaDevice.b);\n      }\n\n      if (value.xAdvDevice) {\n        position.xAdvance += variationProcessor.getDelta(variationStore, value.xAdvDevice.a, value.xAdvDevice.b);\n      }\n\n      if (value.yAdvDevice) {\n        position.yAdvance += variationProcessor.getDelta(variationStore, value.yAdvDevice.a, value.yAdvDevice.b);\n      }\n    } // TODO: device tables\n\n  };\n\n  GPOSProcessor.prototype.applyLookup = function applyLookup(lookupType, table) {\n    switch (lookupType) {\n      case 1:\n        {\n          // Single positioning value\n          var index = this.coverageIndex(table.coverage);\n\n          if (index === -1) {\n            return false;\n          }\n\n          switch (table.version) {\n            case 1:\n              this.applyPositionValue(0, table.value);\n              break;\n\n            case 2:\n              this.applyPositionValue(0, table.values.get(index));\n              break;\n          }\n\n          return true;\n        }\n\n      case 2:\n        {\n          // Pair Adjustment Positioning\n          var nextGlyph = this.glyphIterator.peek();\n\n          if (!nextGlyph) {\n            return false;\n          }\n\n          var _index = this.coverageIndex(table.coverage);\n\n          if (_index === -1) {\n            return false;\n          }\n\n          switch (table.version) {\n            case 1:\n              // Adjustments for glyph pairs\n              var set = table.pairSets.get(_index);\n\n              for (var _iterator = set, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _getIterator(_iterator);;) {\n                var _ref;\n\n                if (_isArray) {\n                  if (_i >= _iterator.length) break;\n                  _ref = _iterator[_i++];\n                } else {\n                  _i = _iterator.next();\n                  if (_i.done) break;\n                  _ref = _i.value;\n                }\n\n                var _pair = _ref;\n\n                if (_pair.secondGlyph === nextGlyph.id) {\n                  this.applyPositionValue(0, _pair.value1);\n                  this.applyPositionValue(1, _pair.value2);\n                  return true;\n                }\n              }\n\n              return false;\n\n            case 2:\n              // Class pair adjustment\n              var class1 = this.getClassID(this.glyphIterator.cur.id, table.classDef1);\n              var class2 = this.getClassID(nextGlyph.id, table.classDef2);\n\n              if (class1 === -1 || class2 === -1) {\n                return false;\n              }\n\n              var pair = table.classRecords.get(class1).get(class2);\n              this.applyPositionValue(0, pair.value1);\n              this.applyPositionValue(1, pair.value2);\n              return true;\n          }\n        }\n\n      case 3:\n        {\n          // Cursive Attachment Positioning\n          var nextIndex = this.glyphIterator.peekIndex();\n          var _nextGlyph = this.glyphs[nextIndex];\n\n          if (!_nextGlyph) {\n            return false;\n          }\n\n          var curRecord = table.entryExitRecords[this.coverageIndex(table.coverage)];\n\n          if (!curRecord || !curRecord.exitAnchor) {\n            return false;\n          }\n\n          var nextRecord = table.entryExitRecords[this.coverageIndex(table.coverage, _nextGlyph.id)];\n\n          if (!nextRecord || !nextRecord.entryAnchor) {\n            return false;\n          }\n\n          var entry = this.getAnchor(nextRecord.entryAnchor);\n          var exit = this.getAnchor(curRecord.exitAnchor);\n          var cur = this.positions[this.glyphIterator.index];\n          var next = this.positions[nextIndex];\n\n          switch (this.direction) {\n            case 'ltr':\n              cur.xAdvance = exit.x + cur.xOffset;\n              var d = entry.x + next.xOffset;\n              next.xAdvance -= d;\n              next.xOffset -= d;\n              break;\n\n            case 'rtl':\n              d = exit.x + cur.xOffset;\n              cur.xAdvance -= d;\n              cur.xOffset -= d;\n              next.xAdvance = entry.x + next.xOffset;\n              break;\n          }\n\n          if (this.glyphIterator.flags.rightToLeft) {\n            this.glyphIterator.cur.cursiveAttachment = nextIndex;\n            cur.yOffset = entry.y - exit.y;\n          } else {\n            _nextGlyph.cursiveAttachment = this.glyphIterator.index;\n            cur.yOffset = exit.y - entry.y;\n          }\n\n          return true;\n        }\n\n      case 4:\n        {\n          // Mark to base positioning\n          var markIndex = this.coverageIndex(table.markCoverage);\n\n          if (markIndex === -1) {\n            return false;\n          } // search backward for a base glyph\n\n\n          var baseGlyphIndex = this.glyphIterator.index;\n\n          while (--baseGlyphIndex >= 0 && (this.glyphs[baseGlyphIndex].isMark || this.glyphs[baseGlyphIndex].ligatureComponent > 0)) {}\n\n          if (baseGlyphIndex < 0) {\n            return false;\n          }\n\n          var baseIndex = this.coverageIndex(table.baseCoverage, this.glyphs[baseGlyphIndex].id);\n\n          if (baseIndex === -1) {\n            return false;\n          }\n\n          var markRecord = table.markArray[markIndex];\n          var baseAnchor = table.baseArray[baseIndex][markRecord.class];\n          this.applyAnchor(markRecord, baseAnchor, baseGlyphIndex);\n          return true;\n        }\n\n      case 5:\n        {\n          // Mark to ligature positioning\n          var _markIndex = this.coverageIndex(table.markCoverage);\n\n          if (_markIndex === -1) {\n            return false;\n          } // search backward for a base glyph\n\n\n          var _baseGlyphIndex = this.glyphIterator.index;\n\n          while (--_baseGlyphIndex >= 0 && this.glyphs[_baseGlyphIndex].isMark) {}\n\n          if (_baseGlyphIndex < 0) {\n            return false;\n          }\n\n          var ligIndex = this.coverageIndex(table.ligatureCoverage, this.glyphs[_baseGlyphIndex].id);\n\n          if (ligIndex === -1) {\n            return false;\n          }\n\n          var ligAttach = table.ligatureArray[ligIndex];\n          var markGlyph = this.glyphIterator.cur;\n          var ligGlyph = this.glyphs[_baseGlyphIndex];\n          var compIndex = ligGlyph.ligatureID && ligGlyph.ligatureID === markGlyph.ligatureID && markGlyph.ligatureComponent > 0 ? Math.min(markGlyph.ligatureComponent, ligGlyph.codePoints.length) - 1 : ligGlyph.codePoints.length - 1;\n          var _markRecord = table.markArray[_markIndex];\n          var _baseAnchor = ligAttach[compIndex][_markRecord.class];\n          this.applyAnchor(_markRecord, _baseAnchor, _baseGlyphIndex);\n          return true;\n        }\n\n      case 6:\n        {\n          // Mark to mark positioning\n          var mark1Index = this.coverageIndex(table.mark1Coverage);\n\n          if (mark1Index === -1) {\n            return false;\n          } // get the previous mark to attach to\n\n\n          var prevIndex = this.glyphIterator.peekIndex(-1);\n          var prev = this.glyphs[prevIndex];\n\n          if (!prev || !prev.isMark) {\n            return false;\n          }\n\n          var _cur = this.glyphIterator.cur; // The following logic was borrowed from Harfbuzz\n\n          var good = false;\n\n          if (_cur.ligatureID === prev.ligatureID) {\n            if (!_cur.ligatureID) {\n              // Marks belonging to the same base\n              good = true;\n            } else if (_cur.ligatureComponent === prev.ligatureComponent) {\n              // Marks belonging to the same ligature component\n              good = true;\n            }\n          } else {\n            // If ligature ids don't match, it may be the case that one of the marks\n            // itself is a ligature, in which case match.\n            if (_cur.ligatureID && !_cur.ligatureComponent || prev.ligatureID && !prev.ligatureComponent) {\n              good = true;\n            }\n          }\n\n          if (!good) {\n            return false;\n          }\n\n          var mark2Index = this.coverageIndex(table.mark2Coverage, prev.id);\n\n          if (mark2Index === -1) {\n            return false;\n          }\n\n          var _markRecord2 = table.mark1Array[mark1Index];\n          var _baseAnchor2 = table.mark2Array[mark2Index][_markRecord2.class];\n          this.applyAnchor(_markRecord2, _baseAnchor2, prevIndex);\n          return true;\n        }\n\n      case 7:\n        // Contextual positioning\n        return this.applyContext(table);\n\n      case 8:\n        // Chaining contextual positioning\n        return this.applyChainingContext(table);\n\n      case 9:\n        // Extension positioning\n        return this.applyLookup(table.lookupType, table.extension);\n\n      default:\n        throw new Error('Unsupported GPOS table: ' + lookupType);\n    }\n  };\n\n  GPOSProcessor.prototype.applyAnchor = function applyAnchor(markRecord, baseAnchor, baseGlyphIndex) {\n    var baseCoords = this.getAnchor(baseAnchor);\n    var markCoords = this.getAnchor(markRecord.markAnchor);\n    var basePos = this.positions[baseGlyphIndex];\n    var markPos = this.positions[this.glyphIterator.index];\n    markPos.xOffset = baseCoords.x - markCoords.x;\n    markPos.yOffset = baseCoords.y - markCoords.y;\n    this.glyphIterator.cur.markAttachment = baseGlyphIndex;\n  };\n\n  GPOSProcessor.prototype.getAnchor = function getAnchor(anchor) {\n    // TODO: contour point, device tables\n    var x = anchor.xCoordinate;\n    var y = anchor.yCoordinate; // Adjustments for font variations\n\n    var variationProcessor = this.font._variationProcessor;\n    var variationStore = this.font.GDEF && this.font.GDEF.itemVariationStore;\n\n    if (variationProcessor && variationStore) {\n      if (anchor.xDeviceTable) {\n        x += variationProcessor.getDelta(variationStore, anchor.xDeviceTable.a, anchor.xDeviceTable.b);\n      }\n\n      if (anchor.yDeviceTable) {\n        y += variationProcessor.getDelta(variationStore, anchor.yDeviceTable.a, anchor.yDeviceTable.b);\n      }\n    }\n\n    return {\n      x: x,\n      y: y\n    };\n  };\n\n  GPOSProcessor.prototype.applyFeatures = function applyFeatures(userFeatures, glyphs, advances) {\n    _OTProcessor.prototype.applyFeatures.call(this, userFeatures, glyphs, advances);\n\n    for (var i = 0; i < this.glyphs.length; i++) {\n      this.fixCursiveAttachment(i);\n    }\n\n    this.fixMarkAttachment();\n  };\n\n  GPOSProcessor.prototype.fixCursiveAttachment = function fixCursiveAttachment(i) {\n    var glyph = this.glyphs[i];\n\n    if (glyph.cursiveAttachment != null) {\n      var j = glyph.cursiveAttachment;\n      glyph.cursiveAttachment = null;\n      this.fixCursiveAttachment(j);\n      this.positions[i].yOffset += this.positions[j].yOffset;\n    }\n  };\n\n  GPOSProcessor.prototype.fixMarkAttachment = function fixMarkAttachment() {\n    for (var i = 0; i < this.glyphs.length; i++) {\n      var glyph = this.glyphs[i];\n\n      if (glyph.markAttachment != null) {\n        var j = glyph.markAttachment;\n        this.positions[i].xOffset += this.positions[j].xOffset;\n        this.positions[i].yOffset += this.positions[j].yOffset;\n\n        if (this.direction === 'ltr') {\n          for (var k = j; k < i; k++) {\n            this.positions[i].xOffset -= this.positions[k].xAdvance;\n            this.positions[i].yOffset -= this.positions[k].yAdvance;\n          }\n        } else {\n          for (var _k = j + 1; _k < i + 1; _k++) {\n            this.positions[i].xOffset += this.positions[_k].xAdvance;\n            this.positions[i].yOffset += this.positions[_k].yAdvance;\n          }\n        }\n      }\n    }\n  };\n\n  return GPOSProcessor;\n}(OTProcessor);\n\nvar OTLayoutEngine = function () {\n  function OTLayoutEngine(font) {\n    _classCallCheck(this, OTLayoutEngine);\n\n    this.font = font;\n    this.glyphInfos = null;\n    this.plan = null;\n    this.GSUBProcessor = null;\n    this.GPOSProcessor = null;\n    this.fallbackPosition = true;\n\n    if (font.GSUB) {\n      this.GSUBProcessor = new GSUBProcessor(font, font.GSUB);\n    }\n\n    if (font.GPOS) {\n      this.GPOSProcessor = new GPOSProcessor(font, font.GPOS);\n    }\n  }\n\n  OTLayoutEngine.prototype.setup = function setup(glyphRun) {\n    var _this = this; // Map glyphs to GlyphInfo objects so data can be passed between\n    // GSUB and GPOS without mutating the real (shared) Glyph objects.\n\n\n    this.glyphInfos = glyphRun.glyphs.map(function (glyph) {\n      return new GlyphInfo(_this.font, glyph.id, [].concat(glyph.codePoints));\n    }); // Select a script based on what is available in GSUB/GPOS.\n\n    var script = null;\n\n    if (this.GPOSProcessor) {\n      script = this.GPOSProcessor.selectScript(glyphRun.script, glyphRun.language, glyphRun.direction);\n    }\n\n    if (this.GSUBProcessor) {\n      script = this.GSUBProcessor.selectScript(glyphRun.script, glyphRun.language, glyphRun.direction);\n    } // Choose a shaper based on the script, and setup a shaping plan.\n    // This determines which features to apply to which glyphs.\n\n\n    this.shaper = choose(script);\n    this.plan = new ShapingPlan(this.font, script, glyphRun.direction);\n    this.shaper.plan(this.plan, this.glyphInfos, glyphRun.features); // Assign chosen features to output glyph run\n\n    for (var key in this.plan.allFeatures) {\n      glyphRun.features[key] = true;\n    }\n  };\n\n  OTLayoutEngine.prototype.substitute = function substitute(glyphRun) {\n    var _this2 = this;\n\n    if (this.GSUBProcessor) {\n      this.plan.process(this.GSUBProcessor, this.glyphInfos); // Map glyph infos back to normal Glyph objects\n\n      glyphRun.glyphs = this.glyphInfos.map(function (glyphInfo) {\n        return _this2.font.getGlyph(glyphInfo.id, glyphInfo.codePoints);\n      });\n    }\n  };\n\n  OTLayoutEngine.prototype.position = function position(glyphRun) {\n    if (this.shaper.zeroMarkWidths === 'BEFORE_GPOS') {\n      this.zeroMarkAdvances(glyphRun.positions);\n    }\n\n    if (this.GPOSProcessor) {\n      this.plan.process(this.GPOSProcessor, this.glyphInfos, glyphRun.positions);\n    }\n\n    if (this.shaper.zeroMarkWidths === 'AFTER_GPOS') {\n      this.zeroMarkAdvances(glyphRun.positions);\n    } // Reverse the glyphs and positions if the script is right-to-left\n\n\n    if (glyphRun.direction === 'rtl') {\n      glyphRun.glyphs.reverse();\n      glyphRun.positions.reverse();\n    }\n\n    return this.GPOSProcessor && this.GPOSProcessor.features;\n  };\n\n  OTLayoutEngine.prototype.zeroMarkAdvances = function zeroMarkAdvances(positions) {\n    for (var i = 0; i < this.glyphInfos.length; i++) {\n      if (this.glyphInfos[i].isMark) {\n        positions[i].xAdvance = 0;\n        positions[i].yAdvance = 0;\n      }\n    }\n  };\n\n  OTLayoutEngine.prototype.cleanup = function cleanup() {\n    this.glyphInfos = null;\n    this.plan = null;\n    this.shaper = null;\n  };\n\n  OTLayoutEngine.prototype.getAvailableFeatures = function getAvailableFeatures(script, language) {\n    var features = [];\n\n    if (this.GSUBProcessor) {\n      this.GSUBProcessor.selectScript(script, language);\n      features.push.apply(features, _Object$keys(this.GSUBProcessor.features));\n    }\n\n    if (this.GPOSProcessor) {\n      this.GPOSProcessor.selectScript(script, language);\n      features.push.apply(features, _Object$keys(this.GPOSProcessor.features));\n    }\n\n    return features;\n  };\n\n  return OTLayoutEngine;\n}();\n\nvar LayoutEngine = function () {\n  function LayoutEngine(font) {\n    _classCallCheck(this, LayoutEngine);\n\n    this.font = font;\n    this.unicodeLayoutEngine = null;\n    this.kernProcessor = null; // Choose an advanced layout engine. We try the AAT morx table first since more\n    // scripts are currently supported because the shaping logic is built into the font.\n\n    if (this.font.morx) {\n      this.engine = new AATLayoutEngine(this.font);\n    } else if (this.font.GSUB || this.font.GPOS) {\n      this.engine = new OTLayoutEngine(this.font);\n    }\n  }\n\n  LayoutEngine.prototype.layout = function layout(string, features, script, language, direction) {\n    // Make the features parameter optional\n    if (typeof features === 'string') {\n      direction = language;\n      language = script;\n      script = features;\n      features = [];\n    } // Map string to glyphs if needed\n\n\n    if (typeof string === 'string') {\n      // Attempt to detect the script from the string if not provided.\n      if (script == null) {\n        script = forString(string);\n      }\n\n      var glyphs = this.font.glyphsForString(string);\n    } else {\n      // Attempt to detect the script from the glyph code points if not provided.\n      if (script == null) {\n        var codePoints = [];\n\n        for (var _iterator = string, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _getIterator(_iterator);;) {\n          var _ref;\n\n          if (_isArray) {\n            if (_i >= _iterator.length) break;\n            _ref = _iterator[_i++];\n          } else {\n            _i = _iterator.next();\n            if (_i.done) break;\n            _ref = _i.value;\n          }\n\n          var glyph = _ref;\n          codePoints.push.apply(codePoints, glyph.codePoints);\n        }\n\n        script = forCodePoints(codePoints);\n      }\n\n      var glyphs = string;\n    }\n\n    var glyphRun = new GlyphRun(glyphs, features, script, language, direction); // Return early if there are no glyphs\n\n    if (glyphs.length === 0) {\n      glyphRun.positions = [];\n      return glyphRun;\n    } // Setup the advanced layout engine\n\n\n    if (this.engine && this.engine.setup) {\n      this.engine.setup(glyphRun);\n    } // Substitute and position the glyphs\n\n\n    this.substitute(glyphRun);\n    this.position(glyphRun);\n    this.hideDefaultIgnorables(glyphRun.glyphs, glyphRun.positions); // Let the layout engine clean up any state it might have\n\n    if (this.engine && this.engine.cleanup) {\n      this.engine.cleanup();\n    }\n\n    return glyphRun;\n  };\n\n  LayoutEngine.prototype.substitute = function substitute(glyphRun) {\n    // Call the advanced layout engine to make substitutions\n    if (this.engine && this.engine.substitute) {\n      this.engine.substitute(glyphRun);\n    }\n  };\n\n  LayoutEngine.prototype.position = function position(glyphRun) {\n    // Get initial glyph positions\n    glyphRun.positions = glyphRun.glyphs.map(function (glyph) {\n      return new GlyphPosition(glyph.advanceWidth);\n    });\n    var positioned = null; // Call the advanced layout engine. Returns the features applied.\n\n    if (this.engine && this.engine.position) {\n      positioned = this.engine.position(glyphRun);\n    } // if there is no GPOS table, use unicode properties to position marks.\n\n\n    if (!positioned && (!this.engine || this.engine.fallbackPosition)) {\n      if (!this.unicodeLayoutEngine) {\n        this.unicodeLayoutEngine = new UnicodeLayoutEngine(this.font);\n      }\n\n      this.unicodeLayoutEngine.positionGlyphs(glyphRun.glyphs, glyphRun.positions);\n    } // if kerning is not supported by GPOS, do kerning with the TrueType/AAT kern table\n\n\n    if ((!positioned || !positioned.kern) && glyphRun.features.kern !== false && this.font.kern) {\n      if (!this.kernProcessor) {\n        this.kernProcessor = new KernProcessor(this.font);\n      }\n\n      this.kernProcessor.process(glyphRun.glyphs, glyphRun.positions);\n      glyphRun.features.kern = true;\n    }\n  };\n\n  LayoutEngine.prototype.hideDefaultIgnorables = function hideDefaultIgnorables(glyphs, positions) {\n    var space = this.font.glyphForCodePoint(0x20);\n\n    for (var i = 0; i < glyphs.length; i++) {\n      if (this.isDefaultIgnorable(glyphs[i].codePoints[0])) {\n        glyphs[i] = space;\n        positions[i].xAdvance = 0;\n        positions[i].yAdvance = 0;\n      }\n    }\n  };\n\n  LayoutEngine.prototype.isDefaultIgnorable = function isDefaultIgnorable(ch) {\n    // From DerivedCoreProperties.txt in the Unicode database,\n    // minus U+115F, U+1160, U+3164 and U+FFA0, which is what\n    // Harfbuzz and Uniscribe do.\n    var plane = ch >> 16;\n\n    if (plane === 0) {\n      // BMP\n      switch (ch >> 8) {\n        case 0x00:\n          return ch === 0x00AD;\n\n        case 0x03:\n          return ch === 0x034F;\n\n        case 0x06:\n          return ch === 0x061C;\n\n        case 0x17:\n          return 0x17B4 <= ch && ch <= 0x17B5;\n\n        case 0x18:\n          return 0x180B <= ch && ch <= 0x180E;\n\n        case 0x20:\n          return 0x200B <= ch && ch <= 0x200F || 0x202A <= ch && ch <= 0x202E || 0x2060 <= ch && ch <= 0x206F;\n\n        case 0xFE:\n          return 0xFE00 <= ch && ch <= 0xFE0F || ch === 0xFEFF;\n\n        case 0xFF:\n          return 0xFFF0 <= ch && ch <= 0xFFF8;\n\n        default:\n          return false;\n      }\n    } else {\n      // Other planes\n      switch (plane) {\n        case 0x01:\n          return 0x1BCA0 <= ch && ch <= 0x1BCA3 || 0x1D173 <= ch && ch <= 0x1D17A;\n\n        case 0x0E:\n          return 0xE0000 <= ch && ch <= 0xE0FFF;\n\n        default:\n          return false;\n      }\n    }\n  };\n\n  LayoutEngine.prototype.getAvailableFeatures = function getAvailableFeatures(script, language) {\n    var features = [];\n\n    if (this.engine) {\n      features.push.apply(features, this.engine.getAvailableFeatures(script, language));\n    }\n\n    if (this.font.kern && features.indexOf('kern') === -1) {\n      features.push('kern');\n    }\n\n    return features;\n  };\n\n  LayoutEngine.prototype.stringsForGlyph = function stringsForGlyph(gid) {\n    var result = new _Set();\n\n    var codePoints = this.font._cmapProcessor.codePointsForGlyph(gid);\n\n    for (var _iterator2 = codePoints, _isArray2 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray2 ? _iterator2 : _getIterator(_iterator2);;) {\n      var _ref2;\n\n      if (_isArray2) {\n        if (_i2 >= _iterator2.length) break;\n        _ref2 = _iterator2[_i2++];\n      } else {\n        _i2 = _iterator2.next();\n        if (_i2.done) break;\n        _ref2 = _i2.value;\n      }\n\n      var codePoint = _ref2;\n      result.add(_String$fromCodePoint(codePoint));\n    }\n\n    if (this.engine && this.engine.stringsForGlyph) {\n      for (var _iterator3 = this.engine.stringsForGlyph(gid), _isArray3 = Array.isArray(_iterator3), _i3 = 0, _iterator3 = _isArray3 ? _iterator3 : _getIterator(_iterator3);;) {\n        var _ref3;\n\n        if (_isArray3) {\n          if (_i3 >= _iterator3.length) break;\n          _ref3 = _iterator3[_i3++];\n        } else {\n          _i3 = _iterator3.next();\n          if (_i3.done) break;\n          _ref3 = _i3.value;\n        }\n\n        var string = _ref3;\n        result.add(string);\n      }\n    }\n\n    return _Array$from(result);\n  };\n\n  return LayoutEngine;\n}();\n\nvar SVG_COMMANDS = {\n  moveTo: 'M',\n  lineTo: 'L',\n  quadraticCurveTo: 'Q',\n  bezierCurveTo: 'C',\n  closePath: 'Z'\n};\n/**\n * Path objects are returned by glyphs and represent the actual\n * vector outlines for each glyph in the font. Paths can be converted\n * to SVG path data strings, or to functions that can be applied to\n * render the path to a graphics context.\n */\n\nvar Path = function () {\n  function Path() {\n    _classCallCheck(this, Path);\n\n    this.commands = [];\n    this._bbox = null;\n    this._cbox = null;\n  }\n  /**\n   * Compiles the path to a JavaScript function that can be applied with\n   * a graphics context in order to render the path.\n   * @return {string}\n   */\n\n\n  Path.prototype.toFunction = function toFunction() {\n    var _this = this;\n\n    return function (ctx) {\n      _this.commands.forEach(function (c) {\n        return ctx[c.command].apply(ctx, c.args);\n      });\n    };\n  };\n  /**\n   * Converts the path to an SVG path data string\n   * @return {string}\n   */\n\n\n  Path.prototype.toSVG = function toSVG() {\n    var cmds = this.commands.map(function (c) {\n      var args = c.args.map(function (arg) {\n        return Math.round(arg * 100) / 100;\n      });\n      return '' + SVG_COMMANDS[c.command] + args.join(' ');\n    });\n    return cmds.join('');\n  };\n  /**\n   * Gets the \"control box\" of a path.\n   * This is like the bounding box, but it includes all points including\n   * control points of bezier segments and is much faster to compute than\n   * the real bounding box.\n   * @type {BBox}\n   */\n\n  /**\n   * Applies a mapping function to each point in the path.\n   * @param {function} fn\n   * @return {Path}\n   */\n\n\n  Path.prototype.mapPoints = function mapPoints(fn) {\n    var path = new Path();\n\n    for (var _iterator = this.commands, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _getIterator(_iterator);;) {\n      var _ref;\n\n      if (_isArray) {\n        if (_i >= _iterator.length) break;\n        _ref = _iterator[_i++];\n      } else {\n        _i = _iterator.next();\n        if (_i.done) break;\n        _ref = _i.value;\n      }\n\n      var c = _ref;\n      var args = [];\n\n      for (var _i2 = 0; _i2 < c.args.length; _i2 += 2) {\n        var _fn = fn(c.args[_i2], c.args[_i2 + 1]),\n            x = _fn[0],\n            y = _fn[1];\n\n        args.push(x, y);\n      }\n\n      path[c.command].apply(path, args);\n    }\n\n    return path;\n  };\n  /**\n   * Transforms the path by the given matrix.\n   */\n\n\n  Path.prototype.transform = function transform(m0, m1, m2, m3, m4, m5) {\n    return this.mapPoints(function (x, y) {\n      x = m0 * x + m2 * y + m4;\n      y = m1 * x + m3 * y + m5;\n      return [x, y];\n    });\n  };\n  /**\n   * Translates the path by the given offset.\n   */\n\n\n  Path.prototype.translate = function translate(x, y) {\n    return this.transform(1, 0, 0, 1, x, y);\n  };\n  /**\n   * Rotates the path by the given angle (in radians).\n   */\n\n\n  Path.prototype.rotate = function rotate(angle) {\n    var cos = Math.cos(angle);\n    var sin = Math.sin(angle);\n    return this.transform(cos, sin, -sin, cos, 0, 0);\n  };\n  /**\n   * Scales the path.\n   */\n\n\n  Path.prototype.scale = function scale(scaleX) {\n    var scaleY = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : scaleX;\n    return this.transform(scaleX, 0, 0, scaleY, 0, 0);\n  };\n\n  _createClass(Path, [{\n    key: 'cbox',\n    get: function get() {\n      if (!this._cbox) {\n        var cbox = new BBox();\n\n        for (var _iterator2 = this.commands, _isArray2 = Array.isArray(_iterator2), _i3 = 0, _iterator2 = _isArray2 ? _iterator2 : _getIterator(_iterator2);;) {\n          var _ref2;\n\n          if (_isArray2) {\n            if (_i3 >= _iterator2.length) break;\n            _ref2 = _iterator2[_i3++];\n          } else {\n            _i3 = _iterator2.next();\n            if (_i3.done) break;\n            _ref2 = _i3.value;\n          }\n\n          var command = _ref2;\n\n          for (var _i4 = 0; _i4 < command.args.length; _i4 += 2) {\n            cbox.addPoint(command.args[_i4], command.args[_i4 + 1]);\n          }\n        }\n\n        this._cbox = _Object$freeze(cbox);\n      }\n\n      return this._cbox;\n    }\n    /**\n     * Gets the exact bounding box of the path by evaluating curve segments.\n     * Slower to compute than the control box, but more accurate.\n     * @type {BBox}\n     */\n\n  }, {\n    key: 'bbox',\n    get: function get() {\n      if (this._bbox) {\n        return this._bbox;\n      }\n\n      var bbox = new BBox();\n      var cx = 0,\n          cy = 0;\n\n      var f = function f(t) {\n        return Math.pow(1 - t, 3) * p0[i] + 3 * Math.pow(1 - t, 2) * t * p1[i] + 3 * (1 - t) * Math.pow(t, 2) * p2[i] + Math.pow(t, 3) * p3[i];\n      };\n\n      for (var _iterator3 = this.commands, _isArray3 = Array.isArray(_iterator3), _i5 = 0, _iterator3 = _isArray3 ? _iterator3 : _getIterator(_iterator3);;) {\n        var _ref3;\n\n        if (_isArray3) {\n          if (_i5 >= _iterator3.length) break;\n          _ref3 = _iterator3[_i5++];\n        } else {\n          _i5 = _iterator3.next();\n          if (_i5.done) break;\n          _ref3 = _i5.value;\n        }\n\n        var c = _ref3;\n\n        switch (c.command) {\n          case 'moveTo':\n          case 'lineTo':\n            var _c$args = c.args,\n                x = _c$args[0],\n                y = _c$args[1];\n            bbox.addPoint(x, y);\n            cx = x;\n            cy = y;\n            break;\n\n          case 'quadraticCurveTo':\n          case 'bezierCurveTo':\n            if (c.command === 'quadraticCurveTo') {\n              // http://fontforge.org/bezier.html\n              var _c$args2 = c.args,\n                  qp1x = _c$args2[0],\n                  qp1y = _c$args2[1],\n                  p3x = _c$args2[2],\n                  p3y = _c$args2[3];\n              var cp1x = cx + 2 / 3 * (qp1x - cx); // CP1 = QP0 + 2/3 * (QP1-QP0)\n\n              var cp1y = cy + 2 / 3 * (qp1y - cy);\n              var cp2x = p3x + 2 / 3 * (qp1x - p3x); // CP2 = QP2 + 2/3 * (QP1-QP2)\n\n              var cp2y = p3y + 2 / 3 * (qp1y - p3y);\n            } else {\n              var _c$args3 = c.args,\n                  cp1x = _c$args3[0],\n                  cp1y = _c$args3[1],\n                  cp2x = _c$args3[2],\n                  cp2y = _c$args3[3],\n                  p3x = _c$args3[4],\n                  p3y = _c$args3[5];\n            } // http://blog.hackers-cafe.net/2009/06/how-to-calculate-bezier-curves-bounding.html\n\n\n            bbox.addPoint(p3x, p3y);\n            var p0 = [cx, cy];\n            var p1 = [cp1x, cp1y];\n            var p2 = [cp2x, cp2y];\n            var p3 = [p3x, p3y];\n\n            for (var i = 0; i <= 1; i++) {\n              var b = 6 * p0[i] - 12 * p1[i] + 6 * p2[i];\n              var a = -3 * p0[i] + 9 * p1[i] - 9 * p2[i] + 3 * p3[i];\n              c = 3 * p1[i] - 3 * p0[i];\n\n              if (a === 0) {\n                if (b === 0) {\n                  continue;\n                }\n\n                var t = -c / b;\n\n                if (0 < t && t < 1) {\n                  if (i === 0) {\n                    bbox.addPoint(f(t), bbox.maxY);\n                  } else if (i === 1) {\n                    bbox.addPoint(bbox.maxX, f(t));\n                  }\n                }\n\n                continue;\n              }\n\n              var b2ac = Math.pow(b, 2) - 4 * c * a;\n\n              if (b2ac < 0) {\n                continue;\n              }\n\n              var t1 = (-b + Math.sqrt(b2ac)) / (2 * a);\n\n              if (0 < t1 && t1 < 1) {\n                if (i === 0) {\n                  bbox.addPoint(f(t1), bbox.maxY);\n                } else if (i === 1) {\n                  bbox.addPoint(bbox.maxX, f(t1));\n                }\n              }\n\n              var t2 = (-b - Math.sqrt(b2ac)) / (2 * a);\n\n              if (0 < t2 && t2 < 1) {\n                if (i === 0) {\n                  bbox.addPoint(f(t2), bbox.maxY);\n                } else if (i === 1) {\n                  bbox.addPoint(bbox.maxX, f(t2));\n                }\n              }\n            }\n\n            cx = p3x;\n            cy = p3y;\n            break;\n        }\n      }\n\n      return this._bbox = _Object$freeze(bbox);\n    }\n  }]);\n\n  return Path;\n}();\n\nvar _arr = ['moveTo', 'lineTo', 'quadraticCurveTo', 'bezierCurveTo', 'closePath'];\n\nvar _loop = function _loop() {\n  var command = _arr[_i6];\n\n  Path.prototype[command] = function () {\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    this._bbox = this._cbox = null;\n    this.commands.push({\n      command: command,\n      args: args\n    });\n    return this;\n  };\n};\n\nfor (var _i6 = 0; _i6 < _arr.length; _i6++) {\n  _loop();\n}\n\nvar StandardNames = ['.notdef', '.null', 'nonmarkingreturn', 'space', 'exclam', 'quotedbl', 'numbersign', 'dollar', 'percent', 'ampersand', 'quotesingle', 'parenleft', 'parenright', 'asterisk', 'plus', 'comma', 'hyphen', 'period', 'slash', 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less', 'equal', 'greater', 'question', 'at', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'bracketleft', 'backslash', 'bracketright', 'asciicircum', 'underscore', 'grave', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'braceleft', 'bar', 'braceright', 'asciitilde', 'Adieresis', 'Aring', 'Ccedilla', 'Eacute', 'Ntilde', 'Odieresis', 'Udieresis', 'aacute', 'agrave', 'acircumflex', 'adieresis', 'atilde', 'aring', 'ccedilla', 'eacute', 'egrave', 'ecircumflex', 'edieresis', 'iacute', 'igrave', 'icircumflex', 'idieresis', 'ntilde', 'oacute', 'ograve', 'ocircumflex', 'odieresis', 'otilde', 'uacute', 'ugrave', 'ucircumflex', 'udieresis', 'dagger', 'degree', 'cent', 'sterling', 'section', 'bullet', 'paragraph', 'germandbls', 'registered', 'copyright', 'trademark', 'acute', 'dieresis', 'notequal', 'AE', 'Oslash', 'infinity', 'plusminus', 'lessequal', 'greaterequal', 'yen', 'mu', 'partialdiff', 'summation', 'product', 'pi', 'integral', 'ordfeminine', 'ordmasculine', 'Omega', 'ae', 'oslash', 'questiondown', 'exclamdown', 'logicalnot', 'radical', 'florin', 'approxequal', 'Delta', 'guillemotleft', 'guillemotright', 'ellipsis', 'nonbreakingspace', 'Agrave', 'Atilde', 'Otilde', 'OE', 'oe', 'endash', 'emdash', 'quotedblleft', 'quotedblright', 'quoteleft', 'quoteright', 'divide', 'lozenge', 'ydieresis', 'Ydieresis', 'fraction', 'currency', 'guilsinglleft', 'guilsinglright', 'fi', 'fl', 'daggerdbl', 'periodcentered', 'quotesinglbase', 'quotedblbase', 'perthousand', 'Acircumflex', 'Ecircumflex', 'Aacute', 'Edieresis', 'Egrave', 'Iacute', 'Icircumflex', 'Idieresis', 'Igrave', 'Oacute', 'Ocircumflex', 'apple', 'Ograve', 'Uacute', 'Ucircumflex', 'Ugrave', 'dotlessi', 'circumflex', 'tilde', 'macron', 'breve', 'dotaccent', 'ring', 'cedilla', 'hungarumlaut', 'ogonek', 'caron', 'Lslash', 'lslash', 'Scaron', 'scaron', 'Zcaron', 'zcaron', 'brokenbar', 'Eth', 'eth', 'Yacute', 'yacute', 'Thorn', 'thorn', 'minus', 'multiply', 'onesuperior', 'twosuperior', 'threesuperior', 'onehalf', 'onequarter', 'threequarters', 'franc', 'Gbreve', 'gbreve', 'Idotaccent', 'Scedilla', 'scedilla', 'Cacute', 'cacute', 'Ccaron', 'ccaron', 'dcroat'];\n\nvar _class$8;\n\nfunction _applyDecoratedDescriptor$4(target, property, decorators, descriptor, context) {\n  var desc = {};\n  Object['ke' + 'ys'](descriptor).forEach(function (key) {\n    desc[key] = descriptor[key];\n  });\n  desc.enumerable = !!desc.enumerable;\n  desc.configurable = !!desc.configurable;\n\n  if ('value' in desc || desc.initializer) {\n    desc.writable = true;\n  }\n\n  desc = decorators.slice().reverse().reduce(function (desc, decorator) {\n    return decorator(target, property, desc) || desc;\n  }, desc);\n\n  if (context && desc.initializer !== void 0) {\n    desc.value = desc.initializer ? desc.initializer.call(context) : void 0;\n    desc.initializer = undefined;\n  }\n\n  if (desc.initializer === void 0) {\n    Object['define' + 'Property'](target, property, desc);\n    desc = null;\n  }\n\n  return desc;\n}\n/**\n * Glyph objects represent a glyph in the font. They have various properties for accessing metrics and\n * the actual vector path the glyph represents, and methods for rendering the glyph to a graphics context.\n *\n * You do not create glyph objects directly. They are created by various methods on the font object.\n * There are several subclasses of the base Glyph class internally that may be returned depending\n * on the font format, but they all inherit from this class.\n */\n\n\nvar Glyph = (_class$8 = function () {\n  function Glyph(id, codePoints, font) {\n    _classCallCheck(this, Glyph);\n    /**\n     * The glyph id in the font\n     * @type {number}\n     */\n\n\n    this.id = id;\n    /**\n     * An array of unicode code points that are represented by this glyph.\n     * There can be multiple code points in the case of ligatures and other glyphs\n     * that represent multiple visual characters.\n     * @type {number[]}\n     */\n\n    this.codePoints = codePoints;\n    this._font = font; // TODO: get this info from GDEF if available\n\n    this.isMark = this.codePoints.length > 0 && this.codePoints.every(unicode.isMark);\n    this.isLigature = this.codePoints.length > 1;\n  }\n\n  Glyph.prototype._getPath = function _getPath() {\n    return new Path();\n  };\n\n  Glyph.prototype._getCBox = function _getCBox() {\n    return this.path.cbox;\n  };\n\n  Glyph.prototype._getBBox = function _getBBox() {\n    return this.path.bbox;\n  };\n\n  Glyph.prototype._getTableMetrics = function _getTableMetrics(table) {\n    if (this.id < table.metrics.length) {\n      return table.metrics.get(this.id);\n    }\n\n    var metric = table.metrics.get(table.metrics.length - 1);\n    var res = {\n      advance: metric ? metric.advance : 0,\n      bearing: table.bearings.get(this.id - table.metrics.length) || 0\n    };\n    return res;\n  };\n\n  Glyph.prototype._getMetrics = function _getMetrics(cbox) {\n    if (this._metrics) {\n      return this._metrics;\n    }\n\n    var _getTableMetrics2 = this._getTableMetrics(this._font.hmtx),\n        advanceWidth = _getTableMetrics2.advance,\n        leftBearing = _getTableMetrics2.bearing; // For vertical metrics, use vmtx if available, or fall back to global data from OS/2 or hhea\n\n\n    if (this._font.vmtx) {\n      var _getTableMetrics3 = this._getTableMetrics(this._font.vmtx),\n          advanceHeight = _getTableMetrics3.advance,\n          topBearing = _getTableMetrics3.bearing;\n    } else {\n      var os2 = void 0;\n\n      if (typeof cbox === 'undefined' || cbox === null) {\n        cbox = this.cbox;\n      }\n\n      if ((os2 = this._font['OS/2']) && os2.version > 0) {\n        var advanceHeight = Math.abs(os2.typoAscender - os2.typoDescender);\n        var topBearing = os2.typoAscender - cbox.maxY;\n      } else {\n        var hhea = this._font.hhea;\n        var advanceHeight = Math.abs(hhea.ascent - hhea.descent);\n        var topBearing = hhea.ascent - cbox.maxY;\n      }\n    }\n\n    if (this._font._variationProcessor && this._font.HVAR) {\n      advanceWidth += this._font._variationProcessor.getAdvanceAdjustment(this.id, this._font.HVAR);\n    }\n\n    return this._metrics = {\n      advanceWidth: advanceWidth,\n      advanceHeight: advanceHeight,\n      leftBearing: leftBearing,\n      topBearing: topBearing\n    };\n  };\n  /**\n   * The glyph’s control box.\n   * This is often the same as the bounding box, but is faster to compute.\n   * Because of the way bezier curves are defined, some of the control points\n   * can be outside of the bounding box. Where `bbox` takes this into account,\n   * `cbox` does not. Thus, cbox is less accurate, but faster to compute.\n   * See [here](http://www.freetype.org/freetype2/docs/glyphs/glyphs-6.html#section-2)\n   * for a more detailed description.\n   *\n   * @type {BBox}\n   */\n\n  /**\n   * Returns a path scaled to the given font size.\n   * @param {number} size\n   * @return {Path}\n   */\n\n\n  Glyph.prototype.getScaledPath = function getScaledPath(size) {\n    var scale = 1 / this._font.unitsPerEm * size;\n    return this.path.scale(scale);\n  };\n  /**\n   * The glyph's advance width.\n   * @type {number}\n   */\n\n\n  Glyph.prototype._getName = function _getName() {\n    var post = this._font.post;\n\n    if (!post) {\n      return null;\n    }\n\n    switch (post.version) {\n      case 1:\n        return StandardNames[this.id];\n\n      case 2:\n        var id = post.glyphNameIndex[this.id];\n\n        if (id < StandardNames.length) {\n          return StandardNames[id];\n        }\n\n        return post.names[id - StandardNames.length];\n\n      case 2.5:\n        return StandardNames[this.id + post.offsets[this.id]];\n\n      case 4:\n        return String.fromCharCode(post.map[this.id]);\n    }\n  };\n  /**\n   * The glyph's name\n   * @type {string}\n   */\n\n  /**\n   * Renders the glyph to the given graphics context, at the specified font size.\n   * @param {CanvasRenderingContext2d} ctx\n   * @param {number} size\n   */\n\n\n  Glyph.prototype.render = function render(ctx, size) {\n    ctx.save();\n    var scale = 1 / this._font.head.unitsPerEm * size;\n    ctx.scale(scale, scale);\n    var fn = this.path.toFunction();\n    fn(ctx);\n    ctx.fill();\n    ctx.restore();\n  };\n\n  _createClass(Glyph, [{\n    key: 'cbox',\n    get: function get() {\n      return this._getCBox();\n    }\n    /**\n     * The glyph’s bounding box, i.e. the rectangle that encloses the\n     * glyph outline as tightly as possible.\n     * @type {BBox}\n     */\n\n  }, {\n    key: 'bbox',\n    get: function get() {\n      return this._getBBox();\n    }\n    /**\n     * A vector Path object representing the glyph outline.\n     * @type {Path}\n     */\n\n  }, {\n    key: 'path',\n    get: function get() {\n      // Cache the path so we only decode it once\n      // Decoding is actually performed by subclasses\n      return this._getPath();\n    }\n  }, {\n    key: 'advanceWidth',\n    get: function get() {\n      return this._getMetrics().advanceWidth;\n    }\n    /**\n     * The glyph's advance height.\n     * @type {number}\n     */\n\n  }, {\n    key: 'advanceHeight',\n    get: function get() {\n      return this._getMetrics().advanceHeight;\n    }\n  }, {\n    key: 'ligatureCaretPositions',\n    get: function get() {}\n  }, {\n    key: 'name',\n    get: function get() {\n      return this._getName();\n    }\n  }]);\n\n  return Glyph;\n}(), (_applyDecoratedDescriptor$4(_class$8.prototype, 'cbox', [cache], _Object$getOwnPropertyDescriptor(_class$8.prototype, 'cbox'), _class$8.prototype), _applyDecoratedDescriptor$4(_class$8.prototype, 'bbox', [cache], _Object$getOwnPropertyDescriptor(_class$8.prototype, 'bbox'), _class$8.prototype), _applyDecoratedDescriptor$4(_class$8.prototype, 'path', [cache], _Object$getOwnPropertyDescriptor(_class$8.prototype, 'path'), _class$8.prototype), _applyDecoratedDescriptor$4(_class$8.prototype, 'advanceWidth', [cache], _Object$getOwnPropertyDescriptor(_class$8.prototype, 'advanceWidth'), _class$8.prototype), _applyDecoratedDescriptor$4(_class$8.prototype, 'advanceHeight', [cache], _Object$getOwnPropertyDescriptor(_class$8.prototype, 'advanceHeight'), _class$8.prototype), _applyDecoratedDescriptor$4(_class$8.prototype, 'name', [cache], _Object$getOwnPropertyDescriptor(_class$8.prototype, 'name'), _class$8.prototype)), _class$8); // The header for both simple and composite glyphs\n\nvar GlyfHeader = new r.Struct({\n  numberOfContours: r.int16,\n  // if negative, this is a composite glyph\n  xMin: r.int16,\n  yMin: r.int16,\n  xMax: r.int16,\n  yMax: r.int16\n}); // Flags for simple glyphs\n\nvar ON_CURVE = 1 << 0;\nvar X_SHORT_VECTOR = 1 << 1;\nvar Y_SHORT_VECTOR = 1 << 2;\nvar REPEAT = 1 << 3;\nvar SAME_X = 1 << 4;\nvar SAME_Y = 1 << 5; // Flags for composite glyphs\n\nvar ARG_1_AND_2_ARE_WORDS = 1 << 0;\nvar WE_HAVE_A_SCALE = 1 << 3;\nvar MORE_COMPONENTS = 1 << 5;\nvar WE_HAVE_AN_X_AND_Y_SCALE = 1 << 6;\nvar WE_HAVE_A_TWO_BY_TWO = 1 << 7;\nvar WE_HAVE_INSTRUCTIONS = 1 << 8; // Represents a point in a simple glyph\n\nvar Point = function () {\n  function Point(onCurve, endContour) {\n    var x = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n    var y = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n\n    _classCallCheck(this, Point);\n\n    this.onCurve = onCurve;\n    this.endContour = endContour;\n    this.x = x;\n    this.y = y;\n  }\n\n  Point.prototype.copy = function copy() {\n    return new Point(this.onCurve, this.endContour, this.x, this.y);\n  };\n\n  return Point;\n}(); // Represents a component in a composite glyph\n\n\nvar Component = function Component(glyphID, dx, dy) {\n  _classCallCheck(this, Component);\n\n  this.glyphID = glyphID;\n  this.dx = dx;\n  this.dy = dy;\n  this.pos = 0;\n  this.scaleX = this.scaleY = 1;\n  this.scale01 = this.scale10 = 0;\n};\n/**\n * Represents a TrueType glyph.\n */\n\n\nvar TTFGlyph = function (_Glyph) {\n  _inherits(TTFGlyph, _Glyph);\n\n  function TTFGlyph() {\n    _classCallCheck(this, TTFGlyph);\n\n    return _possibleConstructorReturn(this, _Glyph.apply(this, arguments));\n  } // Parses just the glyph header and returns the bounding box\n\n\n  TTFGlyph.prototype._getCBox = function _getCBox(internal) {\n    // We need to decode the glyph if variation processing is requested,\n    // so it's easier just to recompute the path's cbox after decoding.\n    if (this._font._variationProcessor && !internal) {\n      return this.path.cbox;\n    }\n\n    var stream = this._font._getTableStream('glyf');\n\n    stream.pos += this._font.loca.offsets[this.id];\n    var glyph = GlyfHeader.decode(stream);\n    var cbox = new BBox(glyph.xMin, glyph.yMin, glyph.xMax, glyph.yMax);\n    return _Object$freeze(cbox);\n  }; // Parses a single glyph coordinate\n\n\n  TTFGlyph.prototype._parseGlyphCoord = function _parseGlyphCoord(stream, prev, short, same) {\n    if (short) {\n      var val = stream.readUInt8();\n\n      if (!same) {\n        val = -val;\n      }\n\n      val += prev;\n    } else {\n      if (same) {\n        var val = prev;\n      } else {\n        var val = prev + stream.readInt16BE();\n      }\n    }\n\n    return val;\n  }; // Decodes the glyph data into points for simple glyphs,\n  // or components for composite glyphs\n\n\n  TTFGlyph.prototype._decode = function _decode() {\n    var glyfPos = this._font.loca.offsets[this.id];\n    var nextPos = this._font.loca.offsets[this.id + 1]; // Nothing to do if there is no data for this glyph\n\n    if (glyfPos === nextPos) {\n      return null;\n    }\n\n    var stream = this._font._getTableStream('glyf');\n\n    stream.pos += glyfPos;\n    var startPos = stream.pos;\n    var glyph = GlyfHeader.decode(stream);\n\n    if (glyph.numberOfContours > 0) {\n      this._decodeSimple(glyph, stream);\n    } else if (glyph.numberOfContours < 0) {\n      this._decodeComposite(glyph, stream, startPos);\n    }\n\n    return glyph;\n  };\n\n  TTFGlyph.prototype._decodeSimple = function _decodeSimple(glyph, stream) {\n    // this is a simple glyph\n    glyph.points = [];\n    var endPtsOfContours = new r.Array(r.uint16, glyph.numberOfContours).decode(stream);\n    glyph.instructions = new r.Array(r.uint8, r.uint16).decode(stream);\n    var flags = [];\n    var numCoords = endPtsOfContours[endPtsOfContours.length - 1] + 1;\n\n    while (flags.length < numCoords) {\n      var flag = stream.readUInt8();\n      flags.push(flag); // check for repeat flag\n\n      if (flag & REPEAT) {\n        var count = stream.readUInt8();\n\n        for (var j = 0; j < count; j++) {\n          flags.push(flag);\n        }\n      }\n    }\n\n    for (var i = 0; i < flags.length; i++) {\n      var flag = flags[i];\n      var point = new Point(!!(flag & ON_CURVE), endPtsOfContours.indexOf(i) >= 0, 0, 0);\n      glyph.points.push(point);\n    }\n\n    var px = 0;\n\n    for (var i = 0; i < flags.length; i++) {\n      var flag = flags[i];\n      glyph.points[i].x = px = this._parseGlyphCoord(stream, px, flag & X_SHORT_VECTOR, flag & SAME_X);\n    }\n\n    var py = 0;\n\n    for (var i = 0; i < flags.length; i++) {\n      var flag = flags[i];\n      glyph.points[i].y = py = this._parseGlyphCoord(stream, py, flag & Y_SHORT_VECTOR, flag & SAME_Y);\n    }\n\n    if (this._font._variationProcessor) {\n      var points = glyph.points.slice();\n      points.push.apply(points, this._getPhantomPoints(glyph));\n\n      this._font._variationProcessor.transformPoints(this.id, points);\n\n      glyph.phantomPoints = points.slice(-4);\n    }\n\n    return;\n  };\n\n  TTFGlyph.prototype._decodeComposite = function _decodeComposite(glyph, stream) {\n    var offset = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0; // this is a composite glyph\n\n    glyph.components = [];\n    var haveInstructions = false;\n    var flags = MORE_COMPONENTS;\n\n    while (flags & MORE_COMPONENTS) {\n      flags = stream.readUInt16BE();\n      var gPos = stream.pos - offset;\n      var glyphID = stream.readUInt16BE();\n\n      if (!haveInstructions) {\n        haveInstructions = (flags & WE_HAVE_INSTRUCTIONS) !== 0;\n      }\n\n      if (flags & ARG_1_AND_2_ARE_WORDS) {\n        var dx = stream.readInt16BE();\n        var dy = stream.readInt16BE();\n      } else {\n        var dx = stream.readInt8();\n        var dy = stream.readInt8();\n      }\n\n      var component = new Component(glyphID, dx, dy);\n      component.pos = gPos;\n\n      if (flags & WE_HAVE_A_SCALE) {\n        // fixed number with 14 bits of fraction\n        component.scaleX = component.scaleY = (stream.readUInt8() << 24 | stream.readUInt8() << 16) / 1073741824;\n      } else if (flags & WE_HAVE_AN_X_AND_Y_SCALE) {\n        component.scaleX = (stream.readUInt8() << 24 | stream.readUInt8() << 16) / 1073741824;\n        component.scaleY = (stream.readUInt8() << 24 | stream.readUInt8() << 16) / 1073741824;\n      } else if (flags & WE_HAVE_A_TWO_BY_TWO) {\n        component.scaleX = (stream.readUInt8() << 24 | stream.readUInt8() << 16) / 1073741824;\n        component.scale01 = (stream.readUInt8() << 24 | stream.readUInt8() << 16) / 1073741824;\n        component.scale10 = (stream.readUInt8() << 24 | stream.readUInt8() << 16) / 1073741824;\n        component.scaleY = (stream.readUInt8() << 24 | stream.readUInt8() << 16) / 1073741824;\n      }\n\n      glyph.components.push(component);\n    }\n\n    if (this._font._variationProcessor) {\n      var points = [];\n\n      for (var j = 0; j < glyph.components.length; j++) {\n        var component = glyph.components[j];\n        points.push(new Point(true, true, component.dx, component.dy));\n      }\n\n      points.push.apply(points, this._getPhantomPoints(glyph));\n\n      this._font._variationProcessor.transformPoints(this.id, points);\n\n      glyph.phantomPoints = points.splice(-4, 4);\n\n      for (var i = 0; i < points.length; i++) {\n        var point = points[i];\n        glyph.components[i].dx = point.x;\n        glyph.components[i].dy = point.y;\n      }\n    }\n\n    return haveInstructions;\n  };\n\n  TTFGlyph.prototype._getPhantomPoints = function _getPhantomPoints(glyph) {\n    var cbox = this._getCBox(true);\n\n    if (this._metrics == null) {\n      this._metrics = Glyph.prototype._getMetrics.call(this, cbox);\n    }\n\n    var _metrics = this._metrics,\n        advanceWidth = _metrics.advanceWidth,\n        advanceHeight = _metrics.advanceHeight,\n        leftBearing = _metrics.leftBearing,\n        topBearing = _metrics.topBearing;\n    return [new Point(false, true, glyph.xMin - leftBearing, 0), new Point(false, true, glyph.xMin - leftBearing + advanceWidth, 0), new Point(false, true, 0, glyph.yMax + topBearing), new Point(false, true, 0, glyph.yMax + topBearing + advanceHeight)];\n  }; // Decodes font data, resolves composite glyphs, and returns an array of contours\n\n\n  TTFGlyph.prototype._getContours = function _getContours() {\n    var glyph = this._decode();\n\n    if (!glyph) {\n      return [];\n    }\n\n    var points = [];\n\n    if (glyph.numberOfContours < 0) {\n      // resolve composite glyphs\n      for (var _iterator = glyph.components, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _getIterator(_iterator);;) {\n        var _ref;\n\n        if (_isArray) {\n          if (_i >= _iterator.length) break;\n          _ref = _iterator[_i++];\n        } else {\n          _i = _iterator.next();\n          if (_i.done) break;\n          _ref = _i.value;\n        }\n\n        var component = _ref;\n\n        var _contours = this._font.getGlyph(component.glyphID)._getContours();\n\n        for (var i = 0; i < _contours.length; i++) {\n          var contour = _contours[i];\n\n          for (var j = 0; j < contour.length; j++) {\n            var _point = contour[j];\n            var x = _point.x * component.scaleX + _point.y * component.scale01 + component.dx;\n            var y = _point.y * component.scaleY + _point.x * component.scale10 + component.dy;\n            points.push(new Point(_point.onCurve, _point.endContour, x, y));\n          }\n        }\n      }\n    } else {\n      points = glyph.points || [];\n    } // Recompute and cache metrics if we performed variation processing, and don't have an HVAR table\n\n\n    if (glyph.phantomPoints && !this._font.directory.tables.HVAR) {\n      this._metrics.advanceWidth = glyph.phantomPoints[1].x - glyph.phantomPoints[0].x;\n      this._metrics.advanceHeight = glyph.phantomPoints[3].y - glyph.phantomPoints[2].y;\n      this._metrics.leftBearing = glyph.xMin - glyph.phantomPoints[0].x;\n      this._metrics.topBearing = glyph.phantomPoints[2].y - glyph.yMax;\n    }\n\n    var contours = [];\n    var cur = [];\n\n    for (var k = 0; k < points.length; k++) {\n      var point = points[k];\n      cur.push(point);\n\n      if (point.endContour) {\n        contours.push(cur);\n        cur = [];\n      }\n    }\n\n    return contours;\n  };\n\n  TTFGlyph.prototype._getMetrics = function _getMetrics() {\n    if (this._metrics) {\n      return this._metrics;\n    }\n\n    var cbox = this._getCBox(true);\n\n    _Glyph.prototype._getMetrics.call(this, cbox);\n\n    if (this._font._variationProcessor && !this._font.HVAR) {\n      // No HVAR table, decode the glyph. This triggers recomputation of metrics.\n      this.path;\n    }\n\n    return this._metrics;\n  }; // Converts contours to a Path object that can be rendered\n\n\n  TTFGlyph.prototype._getPath = function _getPath() {\n    var contours = this._getContours();\n\n    var path = new Path();\n\n    for (var i = 0; i < contours.length; i++) {\n      var contour = contours[i];\n      var firstPt = contour[0];\n      var lastPt = contour[contour.length - 1];\n      var start = 0;\n\n      if (firstPt.onCurve) {\n        // The first point will be consumed by the moveTo command, so skip in the loop\n        var curvePt = null;\n        start = 1;\n      } else {\n        if (lastPt.onCurve) {\n          // Start at the last point if the first point is off curve and the last point is on curve\n          firstPt = lastPt;\n        } else {\n          // Start at the middle if both the first and last points are off curve\n          firstPt = new Point(false, false, (firstPt.x + lastPt.x) / 2, (firstPt.y + lastPt.y) / 2);\n        }\n\n        var curvePt = firstPt;\n      }\n\n      path.moveTo(firstPt.x, firstPt.y);\n\n      for (var j = start; j < contour.length; j++) {\n        var pt = contour[j];\n        var prevPt = j === 0 ? firstPt : contour[j - 1];\n\n        if (prevPt.onCurve && pt.onCurve) {\n          path.lineTo(pt.x, pt.y);\n        } else if (prevPt.onCurve && !pt.onCurve) {\n          var curvePt = pt;\n        } else if (!prevPt.onCurve && !pt.onCurve) {\n          var midX = (prevPt.x + pt.x) / 2;\n          var midY = (prevPt.y + pt.y) / 2;\n          path.quadraticCurveTo(prevPt.x, prevPt.y, midX, midY);\n          var curvePt = pt;\n        } else if (!prevPt.onCurve && pt.onCurve) {\n          path.quadraticCurveTo(curvePt.x, curvePt.y, pt.x, pt.y);\n          var curvePt = null;\n        } else {\n          throw new Error(\"Unknown TTF path state\");\n        }\n      } // Connect the first and last points\n\n\n      if (curvePt) {\n        path.quadraticCurveTo(curvePt.x, curvePt.y, firstPt.x, firstPt.y);\n      }\n\n      path.closePath();\n    }\n\n    return path;\n  };\n\n  return TTFGlyph;\n}(Glyph);\n/**\n * Represents an OpenType PostScript glyph, in the Compact Font Format.\n */\n\n\nvar CFFGlyph = function (_Glyph) {\n  _inherits(CFFGlyph, _Glyph);\n\n  function CFFGlyph() {\n    _classCallCheck(this, CFFGlyph);\n\n    return _possibleConstructorReturn(this, _Glyph.apply(this, arguments));\n  }\n\n  CFFGlyph.prototype._getName = function _getName() {\n    if (this._font.CFF2) {\n      return _Glyph.prototype._getName.call(this);\n    }\n\n    return this._font['CFF '].getGlyphName(this.id);\n  };\n\n  CFFGlyph.prototype.bias = function bias(s) {\n    if (s.length < 1240) {\n      return 107;\n    } else if (s.length < 33900) {\n      return 1131;\n    } else {\n      return 32768;\n    }\n  };\n\n  CFFGlyph.prototype._getPath = function _getPath() {\n    var cff = this._font.CFF2 || this._font['CFF '];\n    var stream = cff.stream;\n    var str = cff.topDict.CharStrings[this.id];\n    var end = str.offset + str.length;\n    stream.pos = str.offset;\n    var path = new Path();\n    var stack = [];\n    var trans = [];\n    var width = null;\n    var nStems = 0;\n    var x = 0,\n        y = 0;\n    var usedGsubrs = void 0;\n    var usedSubrs = void 0;\n    var open = false;\n    this._usedGsubrs = usedGsubrs = {};\n    this._usedSubrs = usedSubrs = {};\n    var gsubrs = cff.globalSubrIndex || [];\n    var gsubrsBias = this.bias(gsubrs);\n    var privateDict = cff.privateDictForGlyph(this.id) || {};\n    var subrs = privateDict.Subrs || [];\n    var subrsBias = this.bias(subrs);\n    var vstore = cff.topDict.vstore && cff.topDict.vstore.itemVariationStore;\n    var vsindex = privateDict.vsindex;\n    var variationProcessor = this._font._variationProcessor;\n\n    function checkWidth() {\n      if (width == null) {\n        width = stack.shift() + privateDict.nominalWidthX;\n      }\n    }\n\n    function parseStems() {\n      if (stack.length % 2 !== 0) {\n        checkWidth();\n      }\n\n      nStems += stack.length >> 1;\n      return stack.length = 0;\n    }\n\n    function moveTo(x, y) {\n      if (open) {\n        path.closePath();\n      }\n\n      path.moveTo(x, y);\n      open = true;\n    }\n\n    var parse = function parse() {\n      while (stream.pos < end) {\n        var op = stream.readUInt8();\n\n        if (op < 32) {\n          switch (op) {\n            case 1: // hstem\n\n            case 3: // vstem\n\n            case 18: // hstemhm\n\n            case 23:\n              // vstemhm\n              parseStems();\n              break;\n\n            case 4:\n              // vmoveto\n              if (stack.length > 1) {\n                checkWidth();\n              }\n\n              y += stack.shift();\n              moveTo(x, y);\n              break;\n\n            case 5:\n              // rlineto\n              while (stack.length >= 2) {\n                x += stack.shift();\n                y += stack.shift();\n                path.lineTo(x, y);\n              }\n\n              break;\n\n            case 6: // hlineto\n\n            case 7:\n              // vlineto\n              var phase = op === 6;\n\n              while (stack.length >= 1) {\n                if (phase) {\n                  x += stack.shift();\n                } else {\n                  y += stack.shift();\n                }\n\n                path.lineTo(x, y);\n                phase = !phase;\n              }\n\n              break;\n\n            case 8:\n              // rrcurveto\n              while (stack.length > 0) {\n                var c1x = x + stack.shift();\n                var c1y = y + stack.shift();\n                var c2x = c1x + stack.shift();\n                var c2y = c1y + stack.shift();\n                x = c2x + stack.shift();\n                y = c2y + stack.shift();\n                path.bezierCurveTo(c1x, c1y, c2x, c2y, x, y);\n              }\n\n              break;\n\n            case 10:\n              // callsubr\n              var index = stack.pop() + subrsBias;\n              var subr = subrs[index];\n\n              if (subr) {\n                usedSubrs[index] = true;\n                var p = stream.pos;\n                var e = end;\n                stream.pos = subr.offset;\n                end = subr.offset + subr.length;\n                parse();\n                stream.pos = p;\n                end = e;\n              }\n\n              break;\n\n            case 11:\n              // return\n              if (cff.version >= 2) {\n                break;\n              }\n\n              return;\n\n            case 14:\n              // endchar\n              if (cff.version >= 2) {\n                break;\n              }\n\n              if (stack.length > 0) {\n                checkWidth();\n              }\n\n              if (open) {\n                path.closePath();\n                open = false;\n              }\n\n              break;\n\n            case 15:\n              {\n                // vsindex\n                if (cff.version < 2) {\n                  throw new Error('vsindex operator not supported in CFF v1');\n                }\n\n                vsindex = stack.pop();\n                break;\n              }\n\n            case 16:\n              {\n                // blend\n                if (cff.version < 2) {\n                  throw new Error('blend operator not supported in CFF v1');\n                }\n\n                if (!variationProcessor) {\n                  throw new Error('blend operator in non-variation font');\n                }\n\n                var blendVector = variationProcessor.getBlendVector(vstore, vsindex);\n                var numBlends = stack.pop();\n                var numOperands = numBlends * blendVector.length;\n                var delta = stack.length - numOperands;\n                var base = delta - numBlends;\n\n                for (var i = 0; i < numBlends; i++) {\n                  var sum = stack[base + i];\n\n                  for (var j = 0; j < blendVector.length; j++) {\n                    sum += blendVector[j] * stack[delta++];\n                  }\n\n                  stack[base + i] = sum;\n                }\n\n                while (numOperands--) {\n                  stack.pop();\n                }\n\n                break;\n              }\n\n            case 19: // hintmask\n\n            case 20:\n              // cntrmask\n              parseStems();\n              stream.pos += nStems + 7 >> 3;\n              break;\n\n            case 21:\n              // rmoveto\n              if (stack.length > 2) {\n                checkWidth();\n              }\n\n              x += stack.shift();\n              y += stack.shift();\n              moveTo(x, y);\n              break;\n\n            case 22:\n              // hmoveto\n              if (stack.length > 1) {\n                checkWidth();\n              }\n\n              x += stack.shift();\n              moveTo(x, y);\n              break;\n\n            case 24:\n              // rcurveline\n              while (stack.length >= 8) {\n                var c1x = x + stack.shift();\n                var c1y = y + stack.shift();\n                var c2x = c1x + stack.shift();\n                var c2y = c1y + stack.shift();\n                x = c2x + stack.shift();\n                y = c2y + stack.shift();\n                path.bezierCurveTo(c1x, c1y, c2x, c2y, x, y);\n              }\n\n              x += stack.shift();\n              y += stack.shift();\n              path.lineTo(x, y);\n              break;\n\n            case 25:\n              // rlinecurve\n              while (stack.length >= 8) {\n                x += stack.shift();\n                y += stack.shift();\n                path.lineTo(x, y);\n              }\n\n              var c1x = x + stack.shift();\n              var c1y = y + stack.shift();\n              var c2x = c1x + stack.shift();\n              var c2y = c1y + stack.shift();\n              x = c2x + stack.shift();\n              y = c2y + stack.shift();\n              path.bezierCurveTo(c1x, c1y, c2x, c2y, x, y);\n              break;\n\n            case 26:\n              // vvcurveto\n              if (stack.length % 2) {\n                x += stack.shift();\n              }\n\n              while (stack.length >= 4) {\n                c1x = x;\n                c1y = y + stack.shift();\n                c2x = c1x + stack.shift();\n                c2y = c1y + stack.shift();\n                x = c2x;\n                y = c2y + stack.shift();\n                path.bezierCurveTo(c1x, c1y, c2x, c2y, x, y);\n              }\n\n              break;\n\n            case 27:\n              // hhcurveto\n              if (stack.length % 2) {\n                y += stack.shift();\n              }\n\n              while (stack.length >= 4) {\n                c1x = x + stack.shift();\n                c1y = y;\n                c2x = c1x + stack.shift();\n                c2y = c1y + stack.shift();\n                x = c2x + stack.shift();\n                y = c2y;\n                path.bezierCurveTo(c1x, c1y, c2x, c2y, x, y);\n              }\n\n              break;\n\n            case 28:\n              // shortint\n              stack.push(stream.readInt16BE());\n              break;\n\n            case 29:\n              // callgsubr\n              index = stack.pop() + gsubrsBias;\n              subr = gsubrs[index];\n\n              if (subr) {\n                usedGsubrs[index] = true;\n                var p = stream.pos;\n                var e = end;\n                stream.pos = subr.offset;\n                end = subr.offset + subr.length;\n                parse();\n                stream.pos = p;\n                end = e;\n              }\n\n              break;\n\n            case 30: // vhcurveto\n\n            case 31:\n              // hvcurveto\n              phase = op === 31;\n\n              while (stack.length >= 4) {\n                if (phase) {\n                  c1x = x + stack.shift();\n                  c1y = y;\n                  c2x = c1x + stack.shift();\n                  c2y = c1y + stack.shift();\n                  y = c2y + stack.shift();\n                  x = c2x + (stack.length === 1 ? stack.shift() : 0);\n                } else {\n                  c1x = x;\n                  c1y = y + stack.shift();\n                  c2x = c1x + stack.shift();\n                  c2y = c1y + stack.shift();\n                  x = c2x + stack.shift();\n                  y = c2y + (stack.length === 1 ? stack.shift() : 0);\n                }\n\n                path.bezierCurveTo(c1x, c1y, c2x, c2y, x, y);\n                phase = !phase;\n              }\n\n              break;\n\n            case 12:\n              op = stream.readUInt8();\n\n              switch (op) {\n                case 3:\n                  // and\n                  var a = stack.pop();\n                  var b = stack.pop();\n                  stack.push(a && b ? 1 : 0);\n                  break;\n\n                case 4:\n                  // or\n                  a = stack.pop();\n                  b = stack.pop();\n                  stack.push(a || b ? 1 : 0);\n                  break;\n\n                case 5:\n                  // not\n                  a = stack.pop();\n                  stack.push(a ? 0 : 1);\n                  break;\n\n                case 9:\n                  // abs\n                  a = stack.pop();\n                  stack.push(Math.abs(a));\n                  break;\n\n                case 10:\n                  // add\n                  a = stack.pop();\n                  b = stack.pop();\n                  stack.push(a + b);\n                  break;\n\n                case 11:\n                  // sub\n                  a = stack.pop();\n                  b = stack.pop();\n                  stack.push(a - b);\n                  break;\n\n                case 12:\n                  // div\n                  a = stack.pop();\n                  b = stack.pop();\n                  stack.push(a / b);\n                  break;\n\n                case 14:\n                  // neg\n                  a = stack.pop();\n                  stack.push(-a);\n                  break;\n\n                case 15:\n                  // eq\n                  a = stack.pop();\n                  b = stack.pop();\n                  stack.push(a === b ? 1 : 0);\n                  break;\n\n                case 18:\n                  // drop\n                  stack.pop();\n                  break;\n\n                case 20:\n                  // put\n                  var val = stack.pop();\n                  var idx = stack.pop();\n                  trans[idx] = val;\n                  break;\n\n                case 21:\n                  // get\n                  idx = stack.pop();\n                  stack.push(trans[idx] || 0);\n                  break;\n\n                case 22:\n                  // ifelse\n                  var s1 = stack.pop();\n                  var s2 = stack.pop();\n                  var v1 = stack.pop();\n                  var v2 = stack.pop();\n                  stack.push(v1 <= v2 ? s1 : s2);\n                  break;\n\n                case 23:\n                  // random\n                  stack.push(Math.random());\n                  break;\n\n                case 24:\n                  // mul\n                  a = stack.pop();\n                  b = stack.pop();\n                  stack.push(a * b);\n                  break;\n\n                case 26:\n                  // sqrt\n                  a = stack.pop();\n                  stack.push(Math.sqrt(a));\n                  break;\n\n                case 27:\n                  // dup\n                  a = stack.pop();\n                  stack.push(a, a);\n                  break;\n\n                case 28:\n                  // exch\n                  a = stack.pop();\n                  b = stack.pop();\n                  stack.push(b, a);\n                  break;\n\n                case 29:\n                  // index\n                  idx = stack.pop();\n\n                  if (idx < 0) {\n                    idx = 0;\n                  } else if (idx > stack.length - 1) {\n                    idx = stack.length - 1;\n                  }\n\n                  stack.push(stack[idx]);\n                  break;\n\n                case 30:\n                  // roll\n                  var n = stack.pop();\n\n                  var _j = stack.pop();\n\n                  if (_j >= 0) {\n                    while (_j > 0) {\n                      var t = stack[n - 1];\n\n                      for (var _i = n - 2; _i >= 0; _i--) {\n                        stack[_i + 1] = stack[_i];\n                      }\n\n                      stack[0] = t;\n                      _j--;\n                    }\n                  } else {\n                    while (_j < 0) {\n                      var t = stack[0];\n\n                      for (var _i2 = 0; _i2 <= n; _i2++) {\n                        stack[_i2] = stack[_i2 + 1];\n                      }\n\n                      stack[n - 1] = t;\n                      _j++;\n                    }\n                  }\n\n                  break;\n\n                case 34:\n                  // hflex\n                  c1x = x + stack.shift();\n                  c1y = y;\n                  c2x = c1x + stack.shift();\n                  c2y = c1y + stack.shift();\n                  var c3x = c2x + stack.shift();\n                  var c3y = c2y;\n                  var c4x = c3x + stack.shift();\n                  var c4y = c3y;\n                  var c5x = c4x + stack.shift();\n                  var c5y = c4y;\n                  var c6x = c5x + stack.shift();\n                  var c6y = c5y;\n                  x = c6x;\n                  y = c6y;\n                  path.bezierCurveTo(c1x, c1y, c2x, c2y, c3x, c3y);\n                  path.bezierCurveTo(c4x, c4y, c5x, c5y, c6x, c6y);\n                  break;\n\n                case 35:\n                  // flex\n                  var pts = [];\n\n                  for (var _i3 = 0; _i3 <= 5; _i3++) {\n                    x += stack.shift();\n                    y += stack.shift();\n                    pts.push(x, y);\n                  }\n\n                  path.bezierCurveTo.apply(path, pts.slice(0, 6));\n                  path.bezierCurveTo.apply(path, pts.slice(6));\n                  stack.shift(); // fd\n\n                  break;\n\n                case 36:\n                  // hflex1\n                  c1x = x + stack.shift();\n                  c1y = y + stack.shift();\n                  c2x = c1x + stack.shift();\n                  c2y = c1y + stack.shift();\n                  c3x = c2x + stack.shift();\n                  c3y = c2y;\n                  c4x = c3x + stack.shift();\n                  c4y = c3y;\n                  c5x = c4x + stack.shift();\n                  c5y = c4y + stack.shift();\n                  c6x = c5x + stack.shift();\n                  c6y = c5y;\n                  x = c6x;\n                  y = c6y;\n                  path.bezierCurveTo(c1x, c1y, c2x, c2y, c3x, c3y);\n                  path.bezierCurveTo(c4x, c4y, c5x, c5y, c6x, c6y);\n                  break;\n\n                case 37:\n                  // flex1\n                  var startx = x;\n                  var starty = y;\n                  pts = [];\n\n                  for (var _i4 = 0; _i4 <= 4; _i4++) {\n                    x += stack.shift();\n                    y += stack.shift();\n                    pts.push(x, y);\n                  }\n\n                  if (Math.abs(x - startx) > Math.abs(y - starty)) {\n                    // horizontal\n                    x += stack.shift();\n                    y = starty;\n                  } else {\n                    x = startx;\n                    y += stack.shift();\n                  }\n\n                  pts.push(x, y);\n                  path.bezierCurveTo.apply(path, pts.slice(0, 6));\n                  path.bezierCurveTo.apply(path, pts.slice(6));\n                  break;\n\n                default:\n                  throw new Error('Unknown op: 12 ' + op);\n              }\n\n              break;\n\n            default:\n              throw new Error('Unknown op: ' + op);\n          }\n        } else if (op < 247) {\n          stack.push(op - 139);\n        } else if (op < 251) {\n          var b1 = stream.readUInt8();\n          stack.push((op - 247) * 256 + b1 + 108);\n        } else if (op < 255) {\n          var b1 = stream.readUInt8();\n          stack.push(-(op - 251) * 256 - b1 - 108);\n        } else {\n          stack.push(stream.readInt32BE() / 65536);\n        }\n      }\n    };\n\n    parse();\n\n    if (open) {\n      path.closePath();\n    }\n\n    return path;\n  };\n\n  return CFFGlyph;\n}(Glyph);\n\nvar SBIXImage = new r.Struct({\n  originX: r.uint16,\n  originY: r.uint16,\n  type: new r.String(4),\n  data: new r.Buffer(function (t) {\n    return t.parent.buflen - t._currentOffset;\n  })\n});\n/**\n * Represents a color (e.g. emoji) glyph in Apple's SBIX format.\n */\n\nvar SBIXGlyph = function (_TTFGlyph) {\n  _inherits(SBIXGlyph, _TTFGlyph);\n\n  function SBIXGlyph() {\n    _classCallCheck(this, SBIXGlyph);\n\n    return _possibleConstructorReturn(this, _TTFGlyph.apply(this, arguments));\n  }\n  /**\n   * Returns an object representing a glyph image at the given point size.\n   * The object has a data property with a Buffer containing the actual image data,\n   * along with the image type, and origin.\n   *\n   * @param {number} size\n   * @return {object}\n   */\n\n\n  SBIXGlyph.prototype.getImageForSize = function getImageForSize(size) {\n    for (var i = 0; i < this._font.sbix.imageTables.length; i++) {\n      var table = this._font.sbix.imageTables[i];\n\n      if (table.ppem >= size) {\n        break;\n      }\n    }\n\n    var offsets = table.imageOffsets;\n    var start = offsets[this.id];\n    var end = offsets[this.id + 1];\n\n    if (start === end) {\n      return null;\n    }\n\n    this._font.stream.pos = start;\n    return SBIXImage.decode(this._font.stream, {\n      buflen: end - start\n    });\n  };\n\n  SBIXGlyph.prototype.render = function render(ctx, size) {\n    var img = this.getImageForSize(size);\n\n    if (img != null) {\n      var scale = size / this._font.unitsPerEm;\n      ctx.image(img.data, {\n        height: size,\n        x: img.originX,\n        y: (this.bbox.minY - img.originY) * scale\n      });\n    }\n\n    if (this._font.sbix.flags.renderOutlines) {\n      _TTFGlyph.prototype.render.call(this, ctx, size);\n    }\n  };\n\n  return SBIXGlyph;\n}(TTFGlyph);\n\nvar COLRLayer = function COLRLayer(glyph, color) {\n  _classCallCheck(this, COLRLayer);\n\n  this.glyph = glyph;\n  this.color = color;\n};\n/**\n * Represents a color (e.g. emoji) glyph in Microsoft's COLR format.\n * Each glyph in this format contain a list of colored layers, each\n * of which  is another vector glyph.\n */\n\n\nvar COLRGlyph = function (_Glyph) {\n  _inherits(COLRGlyph, _Glyph);\n\n  function COLRGlyph() {\n    _classCallCheck(this, COLRGlyph);\n\n    return _possibleConstructorReturn(this, _Glyph.apply(this, arguments));\n  }\n\n  COLRGlyph.prototype._getBBox = function _getBBox() {\n    var bbox = new BBox();\n\n    for (var i = 0; i < this.layers.length; i++) {\n      var layer = this.layers[i];\n      var b = layer.glyph.bbox;\n      bbox.addPoint(b.minX, b.minY);\n      bbox.addPoint(b.maxX, b.maxY);\n    }\n\n    return bbox;\n  };\n  /**\n   * Returns an array of objects containing the glyph and color for\n   * each layer in the composite color glyph.\n   * @type {object[]}\n   */\n\n\n  COLRGlyph.prototype.render = function render(ctx, size) {\n    for (var _iterator = this.layers, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _getIterator(_iterator);;) {\n      var _ref;\n\n      if (_isArray) {\n        if (_i >= _iterator.length) break;\n        _ref = _iterator[_i++];\n      } else {\n        _i = _iterator.next();\n        if (_i.done) break;\n        _ref = _i.value;\n      }\n\n      var _ref2 = _ref,\n          glyph = _ref2.glyph,\n          color = _ref2.color;\n      ctx.fillColor([color.red, color.green, color.blue], color.alpha / 255 * 100);\n      glyph.render(ctx, size);\n    }\n\n    return;\n  };\n\n  _createClass(COLRGlyph, [{\n    key: 'layers',\n    get: function get() {\n      var cpal = this._font.CPAL;\n      var colr = this._font.COLR;\n      var low = 0;\n      var high = colr.baseGlyphRecord.length - 1;\n\n      while (low <= high) {\n        var mid = low + high >> 1;\n        var rec = colr.baseGlyphRecord[mid];\n\n        if (this.id < rec.gid) {\n          high = mid - 1;\n        } else if (this.id > rec.gid) {\n          low = mid + 1;\n        } else {\n          var baseLayer = rec;\n          break;\n        }\n      } // if base glyph not found in COLR table,\n      // default to normal glyph from glyf or CFF\n\n\n      if (baseLayer == null) {\n        var g = this._font._getBaseGlyph(this.id);\n\n        var color = {\n          red: 0,\n          green: 0,\n          blue: 0,\n          alpha: 255\n        };\n        return [new COLRLayer(g, color)];\n      } // otherwise, return an array of all the layers\n\n\n      var layers = [];\n\n      for (var i = baseLayer.firstLayerIndex; i < baseLayer.firstLayerIndex + baseLayer.numLayers; i++) {\n        var rec = colr.layerRecords[i];\n        var color = cpal.colorRecords[rec.paletteIndex];\n\n        var g = this._font._getBaseGlyph(rec.gid);\n\n        layers.push(new COLRLayer(g, color));\n      }\n\n      return layers;\n    }\n  }]);\n\n  return COLRGlyph;\n}(Glyph);\n\nvar TUPLES_SHARE_POINT_NUMBERS = 0x8000;\nvar TUPLE_COUNT_MASK = 0x0fff;\nvar EMBEDDED_TUPLE_COORD = 0x8000;\nvar INTERMEDIATE_TUPLE = 0x4000;\nvar PRIVATE_POINT_NUMBERS = 0x2000;\nvar TUPLE_INDEX_MASK = 0x0fff;\nvar POINTS_ARE_WORDS = 0x80;\nvar POINT_RUN_COUNT_MASK = 0x7f;\nvar DELTAS_ARE_ZERO = 0x80;\nvar DELTAS_ARE_WORDS = 0x40;\nvar DELTA_RUN_COUNT_MASK = 0x3f;\n/**\n * This class is transforms TrueType glyphs according to the data from\n * the Apple Advanced Typography variation tables (fvar, gvar, and avar).\n * These tables allow infinite adjustments to glyph weight, width, slant,\n * and optical size without the designer needing to specify every exact style.\n *\n * Apple's documentation for these tables is not great, so thanks to the\n * Freetype project for figuring much of this out.\n *\n * @private\n */\n\nvar GlyphVariationProcessor = function () {\n  function GlyphVariationProcessor(font, coords) {\n    _classCallCheck(this, GlyphVariationProcessor);\n\n    this.font = font;\n    this.normalizedCoords = this.normalizeCoords(coords);\n    this.blendVectors = new _Map();\n  }\n\n  GlyphVariationProcessor.prototype.normalizeCoords = function normalizeCoords(coords) {\n    // the default mapping is linear along each axis, in two segments:\n    // from the minValue to defaultValue, and from defaultValue to maxValue.\n    var normalized = [];\n\n    for (var i = 0; i < this.font.fvar.axis.length; i++) {\n      var axis = this.font.fvar.axis[i];\n\n      if (coords[i] < axis.defaultValue) {\n        normalized.push((coords[i] - axis.defaultValue + _Number$EPSILON) / (axis.defaultValue - axis.minValue + _Number$EPSILON));\n      } else {\n        normalized.push((coords[i] - axis.defaultValue + _Number$EPSILON) / (axis.maxValue - axis.defaultValue + _Number$EPSILON));\n      }\n    } // if there is an avar table, the normalized value is calculated\n    // by interpolating between the two nearest mapped values.\n\n\n    if (this.font.avar) {\n      for (var i = 0; i < this.font.avar.segment.length; i++) {\n        var segment = this.font.avar.segment[i];\n\n        for (var j = 0; j < segment.correspondence.length; j++) {\n          var pair = segment.correspondence[j];\n\n          if (j >= 1 && normalized[i] < pair.fromCoord) {\n            var prev = segment.correspondence[j - 1];\n            normalized[i] = ((normalized[i] - prev.fromCoord) * (pair.toCoord - prev.toCoord) + _Number$EPSILON) / (pair.fromCoord - prev.fromCoord + _Number$EPSILON) + prev.toCoord;\n            break;\n          }\n        }\n      }\n    }\n\n    return normalized;\n  };\n\n  GlyphVariationProcessor.prototype.transformPoints = function transformPoints(gid, glyphPoints) {\n    if (!this.font.fvar || !this.font.gvar) {\n      return;\n    }\n\n    var gvar = this.font.gvar;\n\n    if (gid >= gvar.glyphCount) {\n      return;\n    }\n\n    var offset = gvar.offsets[gid];\n\n    if (offset === gvar.offsets[gid + 1]) {\n      return;\n    } // Read the gvar data for this glyph\n\n\n    var stream = this.font.stream;\n    stream.pos = offset;\n\n    if (stream.pos >= stream.length) {\n      return;\n    }\n\n    var tupleCount = stream.readUInt16BE();\n    var offsetToData = offset + stream.readUInt16BE();\n\n    if (tupleCount & TUPLES_SHARE_POINT_NUMBERS) {\n      var here = stream.pos;\n      stream.pos = offsetToData;\n      var sharedPoints = this.decodePoints();\n      offsetToData = stream.pos;\n      stream.pos = here;\n    }\n\n    var origPoints = glyphPoints.map(function (pt) {\n      return pt.copy();\n    });\n    tupleCount &= TUPLE_COUNT_MASK;\n\n    for (var i = 0; i < tupleCount; i++) {\n      var tupleDataSize = stream.readUInt16BE();\n      var tupleIndex = stream.readUInt16BE();\n\n      if (tupleIndex & EMBEDDED_TUPLE_COORD) {\n        var tupleCoords = [];\n\n        for (var a = 0; a < gvar.axisCount; a++) {\n          tupleCoords.push(stream.readInt16BE() / 16384);\n        }\n      } else {\n        if ((tupleIndex & TUPLE_INDEX_MASK) >= gvar.globalCoordCount) {\n          throw new Error('Invalid gvar table');\n        }\n\n        var tupleCoords = gvar.globalCoords[tupleIndex & TUPLE_INDEX_MASK];\n      }\n\n      if (tupleIndex & INTERMEDIATE_TUPLE) {\n        var startCoords = [];\n\n        for (var _a = 0; _a < gvar.axisCount; _a++) {\n          startCoords.push(stream.readInt16BE() / 16384);\n        }\n\n        var endCoords = [];\n\n        for (var _a2 = 0; _a2 < gvar.axisCount; _a2++) {\n          endCoords.push(stream.readInt16BE() / 16384);\n        }\n      } // Get the factor at which to apply this tuple\n\n\n      var factor = this.tupleFactor(tupleIndex, tupleCoords, startCoords, endCoords);\n\n      if (factor === 0) {\n        offsetToData += tupleDataSize;\n        continue;\n      }\n\n      var here = stream.pos;\n      stream.pos = offsetToData;\n\n      if (tupleIndex & PRIVATE_POINT_NUMBERS) {\n        var points = this.decodePoints();\n      } else {\n        var points = sharedPoints;\n      } // points.length = 0 means there are deltas for all points\n\n\n      var nPoints = points.length === 0 ? glyphPoints.length : points.length;\n      var xDeltas = this.decodeDeltas(nPoints);\n      var yDeltas = this.decodeDeltas(nPoints);\n\n      if (points.length === 0) {\n        // all points\n        for (var _i = 0; _i < glyphPoints.length; _i++) {\n          var point = glyphPoints[_i];\n          point.x += Math.round(xDeltas[_i] * factor);\n          point.y += Math.round(yDeltas[_i] * factor);\n        }\n      } else {\n        var outPoints = origPoints.map(function (pt) {\n          return pt.copy();\n        });\n        var hasDelta = glyphPoints.map(function () {\n          return false;\n        });\n\n        for (var _i2 = 0; _i2 < points.length; _i2++) {\n          var idx = points[_i2];\n\n          if (idx < glyphPoints.length) {\n            var _point = outPoints[idx];\n            hasDelta[idx] = true;\n            _point.x += Math.round(xDeltas[_i2] * factor);\n            _point.y += Math.round(yDeltas[_i2] * factor);\n          }\n        }\n\n        this.interpolateMissingDeltas(outPoints, origPoints, hasDelta);\n\n        for (var _i3 = 0; _i3 < glyphPoints.length; _i3++) {\n          var deltaX = outPoints[_i3].x - origPoints[_i3].x;\n          var deltaY = outPoints[_i3].y - origPoints[_i3].y;\n          glyphPoints[_i3].x += deltaX;\n          glyphPoints[_i3].y += deltaY;\n        }\n      }\n\n      offsetToData += tupleDataSize;\n      stream.pos = here;\n    }\n  };\n\n  GlyphVariationProcessor.prototype.decodePoints = function decodePoints() {\n    var stream = this.font.stream;\n    var count = stream.readUInt8();\n\n    if (count & POINTS_ARE_WORDS) {\n      count = (count & POINT_RUN_COUNT_MASK) << 8 | stream.readUInt8();\n    }\n\n    var points = new Uint16Array(count);\n    var i = 0;\n    var point = 0;\n\n    while (i < count) {\n      var run = stream.readUInt8();\n      var runCount = (run & POINT_RUN_COUNT_MASK) + 1;\n      var fn = run & POINTS_ARE_WORDS ? stream.readUInt16 : stream.readUInt8;\n\n      for (var j = 0; j < runCount && i < count; j++) {\n        point += fn.call(stream);\n        points[i++] = point;\n      }\n    }\n\n    return points;\n  };\n\n  GlyphVariationProcessor.prototype.decodeDeltas = function decodeDeltas(count) {\n    var stream = this.font.stream;\n    var i = 0;\n    var deltas = new Int16Array(count);\n\n    while (i < count) {\n      var run = stream.readUInt8();\n      var runCount = (run & DELTA_RUN_COUNT_MASK) + 1;\n\n      if (run & DELTAS_ARE_ZERO) {\n        i += runCount;\n      } else {\n        var fn = run & DELTAS_ARE_WORDS ? stream.readInt16BE : stream.readInt8;\n\n        for (var j = 0; j < runCount && i < count; j++) {\n          deltas[i++] = fn.call(stream);\n        }\n      }\n    }\n\n    return deltas;\n  };\n\n  GlyphVariationProcessor.prototype.tupleFactor = function tupleFactor(tupleIndex, tupleCoords, startCoords, endCoords) {\n    var normalized = this.normalizedCoords;\n    var gvar = this.font.gvar;\n    var factor = 1;\n\n    for (var i = 0; i < gvar.axisCount; i++) {\n      if (tupleCoords[i] === 0) {\n        continue;\n      }\n\n      if (normalized[i] === 0) {\n        return 0;\n      }\n\n      if ((tupleIndex & INTERMEDIATE_TUPLE) === 0) {\n        if (normalized[i] < Math.min(0, tupleCoords[i]) || normalized[i] > Math.max(0, tupleCoords[i])) {\n          return 0;\n        }\n\n        factor = (factor * normalized[i] + _Number$EPSILON) / (tupleCoords[i] + _Number$EPSILON);\n      } else {\n        if (normalized[i] < startCoords[i] || normalized[i] > endCoords[i]) {\n          return 0;\n        } else if (normalized[i] < tupleCoords[i]) {\n          factor = factor * (normalized[i] - startCoords[i] + _Number$EPSILON) / (tupleCoords[i] - startCoords[i] + _Number$EPSILON);\n        } else {\n          factor = factor * (endCoords[i] - normalized[i] + _Number$EPSILON) / (endCoords[i] - tupleCoords[i] + _Number$EPSILON);\n        }\n      }\n    }\n\n    return factor;\n  }; // Interpolates points without delta values.\n  // Needed for the Ø and Q glyphs in Skia.\n  // Algorithm from Freetype.\n\n\n  GlyphVariationProcessor.prototype.interpolateMissingDeltas = function interpolateMissingDeltas(points, inPoints, hasDelta) {\n    if (points.length === 0) {\n      return;\n    }\n\n    var point = 0;\n\n    while (point < points.length) {\n      var firstPoint = point; // find the end point of the contour\n\n      var endPoint = point;\n      var pt = points[endPoint];\n\n      while (!pt.endContour) {\n        pt = points[++endPoint];\n      } // find the first point that has a delta\n\n\n      while (point <= endPoint && !hasDelta[point]) {\n        point++;\n      }\n\n      if (point > endPoint) {\n        continue;\n      }\n\n      var firstDelta = point;\n      var curDelta = point;\n      point++;\n\n      while (point <= endPoint) {\n        // find the next point with a delta, and interpolate intermediate points\n        if (hasDelta[point]) {\n          this.deltaInterpolate(curDelta + 1, point - 1, curDelta, point, inPoints, points);\n          curDelta = point;\n        }\n\n        point++;\n      } // shift contour if we only have a single delta\n\n\n      if (curDelta === firstDelta) {\n        this.deltaShift(firstPoint, endPoint, curDelta, inPoints, points);\n      } else {\n        // otherwise, handle the remaining points at the end and beginning of the contour\n        this.deltaInterpolate(curDelta + 1, endPoint, curDelta, firstDelta, inPoints, points);\n\n        if (firstDelta > 0) {\n          this.deltaInterpolate(firstPoint, firstDelta - 1, curDelta, firstDelta, inPoints, points);\n        }\n      }\n\n      point = endPoint + 1;\n    }\n  };\n\n  GlyphVariationProcessor.prototype.deltaInterpolate = function deltaInterpolate(p1, p2, ref1, ref2, inPoints, outPoints) {\n    if (p1 > p2) {\n      return;\n    }\n\n    var iterable = ['x', 'y'];\n\n    for (var i = 0; i < iterable.length; i++) {\n      var k = iterable[i];\n\n      if (inPoints[ref1][k] > inPoints[ref2][k]) {\n        var p = ref1;\n        ref1 = ref2;\n        ref2 = p;\n      }\n\n      var in1 = inPoints[ref1][k];\n      var in2 = inPoints[ref2][k];\n      var out1 = outPoints[ref1][k];\n      var out2 = outPoints[ref2][k]; // If the reference points have the same coordinate but different\n      // delta, inferred delta is zero.  Otherwise interpolate.\n\n      if (in1 !== in2 || out1 === out2) {\n        var scale = in1 === in2 ? 0 : (out2 - out1) / (in2 - in1);\n\n        for (var _p = p1; _p <= p2; _p++) {\n          var out = inPoints[_p][k];\n\n          if (out <= in1) {\n            out += out1 - in1;\n          } else if (out >= in2) {\n            out += out2 - in2;\n          } else {\n            out = out1 + (out - in1) * scale;\n          }\n\n          outPoints[_p][k] = out;\n        }\n      }\n    }\n  };\n\n  GlyphVariationProcessor.prototype.deltaShift = function deltaShift(p1, p2, ref, inPoints, outPoints) {\n    var deltaX = outPoints[ref].x - inPoints[ref].x;\n    var deltaY = outPoints[ref].y - inPoints[ref].y;\n\n    if (deltaX === 0 && deltaY === 0) {\n      return;\n    }\n\n    for (var p = p1; p <= p2; p++) {\n      if (p !== ref) {\n        outPoints[p].x += deltaX;\n        outPoints[p].y += deltaY;\n      }\n    }\n  };\n\n  GlyphVariationProcessor.prototype.getAdvanceAdjustment = function getAdvanceAdjustment(gid, table) {\n    var outerIndex = void 0,\n        innerIndex = void 0;\n\n    if (table.advanceWidthMapping) {\n      var idx = gid;\n\n      if (idx >= table.advanceWidthMapping.mapCount) {\n        idx = table.advanceWidthMapping.mapCount - 1;\n      }\n\n      var entryFormat = table.advanceWidthMapping.entryFormat;\n      var _table$advanceWidthMa = table.advanceWidthMapping.mapData[idx];\n      outerIndex = _table$advanceWidthMa.outerIndex;\n      innerIndex = _table$advanceWidthMa.innerIndex;\n    } else {\n      outerIndex = 0;\n      innerIndex = gid;\n    }\n\n    return this.getDelta(table.itemVariationStore, outerIndex, innerIndex);\n  }; // See pseudo code from `Font Variations Overview'\n  // in the OpenType specification.\n\n\n  GlyphVariationProcessor.prototype.getDelta = function getDelta(itemStore, outerIndex, innerIndex) {\n    if (outerIndex >= itemStore.itemVariationData.length) {\n      return 0;\n    }\n\n    var varData = itemStore.itemVariationData[outerIndex];\n\n    if (innerIndex >= varData.deltaSets.length) {\n      return 0;\n    }\n\n    var deltaSet = varData.deltaSets[innerIndex];\n    var blendVector = this.getBlendVector(itemStore, outerIndex);\n    var netAdjustment = 0;\n\n    for (var master = 0; master < varData.regionIndexCount; master++) {\n      netAdjustment += deltaSet.deltas[master] * blendVector[master];\n    }\n\n    return netAdjustment;\n  };\n\n  GlyphVariationProcessor.prototype.getBlendVector = function getBlendVector(itemStore, outerIndex) {\n    var varData = itemStore.itemVariationData[outerIndex];\n\n    if (this.blendVectors.has(varData)) {\n      return this.blendVectors.get(varData);\n    }\n\n    var normalizedCoords = this.normalizedCoords;\n    var blendVector = []; // outer loop steps through master designs to be blended\n\n    for (var master = 0; master < varData.regionIndexCount; master++) {\n      var scalar = 1;\n      var regionIndex = varData.regionIndexes[master];\n      var axes = itemStore.variationRegionList.variationRegions[regionIndex]; // inner loop steps through axes in this region\n\n      for (var j = 0; j < axes.length; j++) {\n        var axis = axes[j];\n        var axisScalar = void 0; // compute the scalar contribution of this axis\n        // ignore invalid ranges\n\n        if (axis.startCoord > axis.peakCoord || axis.peakCoord > axis.endCoord) {\n          axisScalar = 1;\n        } else if (axis.startCoord < 0 && axis.endCoord > 0 && axis.peakCoord !== 0) {\n          axisScalar = 1; // peak of 0 means ignore this axis\n        } else if (axis.peakCoord === 0) {\n          axisScalar = 1; // ignore this region if coords are out of range\n        } else if (normalizedCoords[j] < axis.startCoord || normalizedCoords[j] > axis.endCoord) {\n          axisScalar = 0; // calculate a proportional factor\n        } else {\n          if (normalizedCoords[j] === axis.peakCoord) {\n            axisScalar = 1;\n          } else if (normalizedCoords[j] < axis.peakCoord) {\n            axisScalar = (normalizedCoords[j] - axis.startCoord + _Number$EPSILON) / (axis.peakCoord - axis.startCoord + _Number$EPSILON);\n          } else {\n            axisScalar = (axis.endCoord - normalizedCoords[j] + _Number$EPSILON) / (axis.endCoord - axis.peakCoord + _Number$EPSILON);\n          }\n        } // take product of all the axis scalars\n\n\n        scalar *= axisScalar;\n      }\n\n      blendVector[master] = scalar;\n    }\n\n    this.blendVectors.set(varData, blendVector);\n    return blendVector;\n  };\n\n  return GlyphVariationProcessor;\n}();\n\nvar resolved = _Promise.resolve();\n\nvar Subset = function () {\n  function Subset(font) {\n    _classCallCheck(this, Subset);\n\n    this.font = font;\n    this.glyphs = [];\n    this.mapping = {}; // always include the missing glyph\n\n    this.includeGlyph(0);\n  }\n\n  Subset.prototype.includeGlyph = function includeGlyph(glyph) {\n    if ((typeof glyph === 'undefined' ? 'undefined' : _typeof(glyph)) === 'object') {\n      glyph = glyph.id;\n    }\n\n    if (this.mapping[glyph] == null) {\n      this.glyphs.push(glyph);\n      this.mapping[glyph] = this.glyphs.length - 1;\n    }\n\n    return this.mapping[glyph];\n  };\n\n  Subset.prototype.encodeStream = function encodeStream() {\n    var _this = this;\n\n    var s = new r.EncodeStream();\n    resolved.then(function () {\n      _this.encode(s);\n\n      return s.end();\n    });\n    return s;\n  };\n\n  return Subset;\n}(); // Flags for simple glyphs\n\n\nvar ON_CURVE$1 = 1 << 0;\nvar X_SHORT_VECTOR$1 = 1 << 1;\nvar Y_SHORT_VECTOR$1 = 1 << 2;\nvar REPEAT$1 = 1 << 3;\nvar SAME_X$1 = 1 << 4;\nvar SAME_Y$1 = 1 << 5;\n\nvar Point$1 = function () {\n  function Point() {\n    _classCallCheck(this, Point);\n  }\n\n  Point.size = function size(val) {\n    return val >= 0 && val <= 255 ? 1 : 2;\n  };\n\n  Point.encode = function encode(stream, value) {\n    if (value >= 0 && value <= 255) {\n      stream.writeUInt8(value);\n    } else {\n      stream.writeInt16BE(value);\n    }\n  };\n\n  return Point;\n}();\n\nvar Glyf = new r.Struct({\n  numberOfContours: r.int16,\n  // if negative, this is a composite glyph\n  xMin: r.int16,\n  yMin: r.int16,\n  xMax: r.int16,\n  yMax: r.int16,\n  endPtsOfContours: new r.Array(r.uint16, 'numberOfContours'),\n  instructions: new r.Array(r.uint8, r.uint16),\n  flags: new r.Array(r.uint8, 0),\n  xPoints: new r.Array(Point$1, 0),\n  yPoints: new r.Array(Point$1, 0)\n});\n/**\n * Encodes TrueType glyph outlines\n */\n\nvar TTFGlyphEncoder = function () {\n  function TTFGlyphEncoder() {\n    _classCallCheck(this, TTFGlyphEncoder);\n  }\n\n  TTFGlyphEncoder.prototype.encodeSimple = function encodeSimple(path) {\n    var instructions = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n    var endPtsOfContours = [];\n    var xPoints = [];\n    var yPoints = [];\n    var flags = [];\n    var same = 0;\n    var lastX = 0,\n        lastY = 0,\n        lastFlag = 0;\n    var pointCount = 0;\n\n    for (var i = 0; i < path.commands.length; i++) {\n      var c = path.commands[i];\n\n      for (var j = 0; j < c.args.length; j += 2) {\n        var x = c.args[j];\n        var y = c.args[j + 1];\n        var flag = 0; // If the ending point of a quadratic curve is the midpoint\n        // between the control point and the control point of the next\n        // quadratic curve, we can omit the ending point.\n\n        if (c.command === 'quadraticCurveTo' && j === 2) {\n          var next = path.commands[i + 1];\n\n          if (next && next.command === 'quadraticCurveTo') {\n            var midX = (lastX + next.args[0]) / 2;\n            var midY = (lastY + next.args[1]) / 2;\n\n            if (x === midX && y === midY) {\n              continue;\n            }\n          }\n        } // All points except control points are on curve.\n\n\n        if (!(c.command === 'quadraticCurveTo' && j === 0)) {\n          flag |= ON_CURVE$1;\n        }\n\n        flag = this._encodePoint(x, lastX, xPoints, flag, X_SHORT_VECTOR$1, SAME_X$1);\n        flag = this._encodePoint(y, lastY, yPoints, flag, Y_SHORT_VECTOR$1, SAME_Y$1);\n\n        if (flag === lastFlag && same < 255) {\n          flags[flags.length - 1] |= REPEAT$1;\n          same++;\n        } else {\n          if (same > 0) {\n            flags.push(same);\n            same = 0;\n          }\n\n          flags.push(flag);\n          lastFlag = flag;\n        }\n\n        lastX = x;\n        lastY = y;\n        pointCount++;\n      }\n\n      if (c.command === 'closePath') {\n        endPtsOfContours.push(pointCount - 1);\n      }\n    } // Close the path if the last command didn't already\n\n\n    if (path.commands.length > 1 && path.commands[path.commands.length - 1].command !== 'closePath') {\n      endPtsOfContours.push(pointCount - 1);\n    }\n\n    var bbox = path.bbox;\n    var glyf = {\n      numberOfContours: endPtsOfContours.length,\n      xMin: bbox.minX,\n      yMin: bbox.minY,\n      xMax: bbox.maxX,\n      yMax: bbox.maxY,\n      endPtsOfContours: endPtsOfContours,\n      instructions: instructions,\n      flags: flags,\n      xPoints: xPoints,\n      yPoints: yPoints\n    };\n    var size = Glyf.size(glyf);\n    var tail = 4 - size % 4;\n    var stream = new r.EncodeStream(size + tail);\n    Glyf.encode(stream, glyf); // Align to 4-byte length\n\n    if (tail !== 0) {\n      stream.fill(0, tail);\n    }\n\n    return stream.buffer;\n  };\n\n  TTFGlyphEncoder.prototype._encodePoint = function _encodePoint(value, last, points, flag, shortFlag, sameFlag) {\n    var diff = value - last;\n\n    if (value === last) {\n      flag |= sameFlag;\n    } else {\n      if (-255 <= diff && diff <= 255) {\n        flag |= shortFlag;\n\n        if (diff < 0) {\n          diff = -diff;\n        } else {\n          flag |= sameFlag;\n        }\n      }\n\n      points.push(diff);\n    }\n\n    return flag;\n  };\n\n  return TTFGlyphEncoder;\n}();\n\nvar TTFSubset = function (_Subset) {\n  _inherits(TTFSubset, _Subset);\n\n  function TTFSubset(font) {\n    _classCallCheck(this, TTFSubset);\n\n    var _this = _possibleConstructorReturn(this, _Subset.call(this, font));\n\n    _this.glyphEncoder = new TTFGlyphEncoder();\n    return _this;\n  }\n\n  TTFSubset.prototype._addGlyph = function _addGlyph(gid) {\n    var glyph = this.font.getGlyph(gid);\n\n    var glyf = glyph._decode(); // get the offset to the glyph from the loca table\n\n\n    var curOffset = this.font.loca.offsets[gid];\n    var nextOffset = this.font.loca.offsets[gid + 1];\n\n    var stream = this.font._getTableStream('glyf');\n\n    stream.pos += curOffset;\n    var buffer = stream.readBuffer(nextOffset - curOffset); // if it is a compound glyph, include its components\n\n    if (glyf && glyf.numberOfContours < 0) {\n      buffer = new Buffer(buffer);\n\n      for (var _iterator = glyf.components, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _getIterator(_iterator);;) {\n        var _ref;\n\n        if (_isArray) {\n          if (_i >= _iterator.length) break;\n          _ref = _iterator[_i++];\n        } else {\n          _i = _iterator.next();\n          if (_i.done) break;\n          _ref = _i.value;\n        }\n\n        var component = _ref;\n        gid = this.includeGlyph(component.glyphID);\n        buffer.writeUInt16BE(gid, component.pos);\n      }\n    } else if (glyf && this.font._variationProcessor) {\n      // If this is a TrueType variation glyph, re-encode the path\n      buffer = this.glyphEncoder.encodeSimple(glyph.path, glyf.instructions);\n    }\n\n    this.glyf.push(buffer);\n    this.loca.offsets.push(this.offset);\n    this.hmtx.metrics.push({\n      advance: glyph.advanceWidth,\n      bearing: glyph._getMetrics().leftBearing\n    });\n    this.offset += buffer.length;\n    return this.glyf.length - 1;\n  };\n\n  TTFSubset.prototype.encode = function encode(stream) {\n    // tables required by PDF spec:\n    //   head, hhea, loca, maxp, cvt , prep, glyf, hmtx, fpgm\n    //\n    // additional tables required for standalone fonts:\n    //   name, cmap, OS/2, post\n    this.glyf = [];\n    this.offset = 0;\n    this.loca = {\n      offsets: [],\n      version: this.font.loca.version\n    };\n    this.hmtx = {\n      metrics: [],\n      bearings: []\n    }; // include all the glyphs\n    // not using a for loop because we need to support adding more\n    // glyphs to the array as we go, and CoffeeScript caches the length.\n\n    var i = 0;\n\n    while (i < this.glyphs.length) {\n      this._addGlyph(this.glyphs[i++]);\n    }\n\n    var maxp = cloneDeep(this.font.maxp);\n    maxp.numGlyphs = this.glyf.length;\n    this.loca.offsets.push(this.offset);\n    var head = cloneDeep(this.font.head);\n    head.indexToLocFormat = this.loca.version;\n    var hhea = cloneDeep(this.font.hhea);\n    hhea.numberOfMetrics = this.hmtx.metrics.length; // map = []\n    // for index in [0...256]\n    //     if index < @numGlyphs\n    //         map[index] = index\n    //     else\n    //         map[index] = 0\n    //\n    // cmapTable =\n    //     version: 0\n    //     length: 262\n    //     language: 0\n    //     codeMap: map\n    //\n    // cmap =\n    //     version: 0\n    //     numSubtables: 1\n    //     tables: [\n    //         platformID: 1\n    //         encodingID: 0\n    //         table: cmapTable\n    //     ]\n    // TODO: subset prep, cvt, fpgm?\n\n    Directory.encode(stream, {\n      tables: {\n        head: head,\n        hhea: hhea,\n        loca: this.loca,\n        maxp: maxp,\n        'cvt ': this.font['cvt '],\n        prep: this.font.prep,\n        glyf: this.glyf,\n        hmtx: this.hmtx,\n        fpgm: this.font.fpgm // name: clone @font.name\n        // 'OS/2': clone @font['OS/2']\n        // post: clone @font.post\n        // cmap: cmap\n\n      }\n    });\n  };\n\n  return TTFSubset;\n}(Subset);\n\nvar CFFSubset = function (_Subset) {\n  _inherits(CFFSubset, _Subset);\n\n  function CFFSubset(font) {\n    _classCallCheck(this, CFFSubset);\n\n    var _this = _possibleConstructorReturn(this, _Subset.call(this, font));\n\n    _this.cff = _this.font['CFF '];\n\n    if (!_this.cff) {\n      throw new Error('Not a CFF Font');\n    }\n\n    return _this;\n  }\n\n  CFFSubset.prototype.subsetCharstrings = function subsetCharstrings() {\n    this.charstrings = [];\n    var gsubrs = {};\n\n    for (var _iterator = this.glyphs, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _getIterator(_iterator);;) {\n      var _ref;\n\n      if (_isArray) {\n        if (_i >= _iterator.length) break;\n        _ref = _iterator[_i++];\n      } else {\n        _i = _iterator.next();\n        if (_i.done) break;\n        _ref = _i.value;\n      }\n\n      var gid = _ref;\n      this.charstrings.push(this.cff.getCharString(gid));\n      var glyph = this.font.getGlyph(gid);\n      var path = glyph.path; // this causes the glyph to be parsed\n\n      for (var subr in glyph._usedGsubrs) {\n        gsubrs[subr] = true;\n      }\n    }\n\n    this.gsubrs = this.subsetSubrs(this.cff.globalSubrIndex, gsubrs);\n  };\n\n  CFFSubset.prototype.subsetSubrs = function subsetSubrs(subrs, used) {\n    var res = [];\n\n    for (var i = 0; i < subrs.length; i++) {\n      var subr = subrs[i];\n\n      if (used[i]) {\n        this.cff.stream.pos = subr.offset;\n        res.push(this.cff.stream.readBuffer(subr.length));\n      } else {\n        res.push(new Buffer([11])); // return\n      }\n    }\n\n    return res;\n  };\n\n  CFFSubset.prototype.subsetFontdict = function subsetFontdict(topDict) {\n    topDict.FDArray = [];\n    topDict.FDSelect = {\n      version: 0,\n      fds: []\n    };\n    var used_fds = {};\n    var used_subrs = [];\n\n    for (var _iterator2 = this.glyphs, _isArray2 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray2 ? _iterator2 : _getIterator(_iterator2);;) {\n      var _ref2;\n\n      if (_isArray2) {\n        if (_i2 >= _iterator2.length) break;\n        _ref2 = _iterator2[_i2++];\n      } else {\n        _i2 = _iterator2.next();\n        if (_i2.done) break;\n        _ref2 = _i2.value;\n      }\n\n      var gid = _ref2;\n      var fd = this.cff.fdForGlyph(gid);\n\n      if (fd == null) {\n        continue;\n      }\n\n      if (!used_fds[fd]) {\n        topDict.FDArray.push(_Object$assign({}, this.cff.topDict.FDArray[fd]));\n        used_subrs.push({});\n      }\n\n      used_fds[fd] = true;\n      topDict.FDSelect.fds.push(topDict.FDArray.length - 1);\n      var glyph = this.font.getGlyph(gid);\n      var path = glyph.path; // this causes the glyph to be parsed\n\n      for (var subr in glyph._usedSubrs) {\n        used_subrs[used_subrs.length - 1][subr] = true;\n      }\n    }\n\n    for (var i = 0; i < topDict.FDArray.length; i++) {\n      var dict = topDict.FDArray[i];\n      delete dict.FontName;\n\n      if (dict.Private && dict.Private.Subrs) {\n        dict.Private = _Object$assign({}, dict.Private);\n        dict.Private.Subrs = this.subsetSubrs(dict.Private.Subrs, used_subrs[i]);\n      }\n    }\n\n    return;\n  };\n\n  CFFSubset.prototype.createCIDFontdict = function createCIDFontdict(topDict) {\n    var used_subrs = {};\n\n    for (var _iterator3 = this.glyphs, _isArray3 = Array.isArray(_iterator3), _i3 = 0, _iterator3 = _isArray3 ? _iterator3 : _getIterator(_iterator3);;) {\n      var _ref3;\n\n      if (_isArray3) {\n        if (_i3 >= _iterator3.length) break;\n        _ref3 = _iterator3[_i3++];\n      } else {\n        _i3 = _iterator3.next();\n        if (_i3.done) break;\n        _ref3 = _i3.value;\n      }\n\n      var gid = _ref3;\n      var glyph = this.font.getGlyph(gid);\n      var path = glyph.path; // this causes the glyph to be parsed\n\n      for (var subr in glyph._usedSubrs) {\n        used_subrs[subr] = true;\n      }\n    }\n\n    var privateDict = _Object$assign({}, this.cff.topDict.Private);\n\n    if (this.cff.topDict.Private && this.cff.topDict.Private.Subrs) {\n      privateDict.Subrs = this.subsetSubrs(this.cff.topDict.Private.Subrs, used_subrs);\n    }\n\n    topDict.FDArray = [{\n      Private: privateDict\n    }];\n    return topDict.FDSelect = {\n      version: 3,\n      nRanges: 1,\n      ranges: [{\n        first: 0,\n        fd: 0\n      }],\n      sentinel: this.charstrings.length\n    };\n  };\n\n  CFFSubset.prototype.addString = function addString(string) {\n    if (!string) {\n      return null;\n    }\n\n    if (!this.strings) {\n      this.strings = [];\n    }\n\n    this.strings.push(string);\n    return standardStrings.length + this.strings.length - 1;\n  };\n\n  CFFSubset.prototype.encode = function encode(stream) {\n    this.subsetCharstrings();\n    var charset = {\n      version: this.charstrings.length > 255 ? 2 : 1,\n      ranges: [{\n        first: 1,\n        nLeft: this.charstrings.length - 2\n      }]\n    };\n\n    var topDict = _Object$assign({}, this.cff.topDict);\n\n    topDict.Private = null;\n    topDict.charset = charset;\n    topDict.Encoding = null;\n    topDict.CharStrings = this.charstrings;\n    var _arr = ['version', 'Notice', 'Copyright', 'FullName', 'FamilyName', 'Weight', 'PostScript', 'BaseFontName', 'FontName'];\n\n    for (var _i4 = 0; _i4 < _arr.length; _i4++) {\n      var key = _arr[_i4];\n      topDict[key] = this.addString(this.cff.string(topDict[key]));\n    }\n\n    topDict.ROS = [this.addString('Adobe'), this.addString('Identity'), 0];\n    topDict.CIDCount = this.charstrings.length;\n\n    if (this.cff.isCIDFont) {\n      this.subsetFontdict(topDict);\n    } else {\n      this.createCIDFontdict(topDict);\n    }\n\n    var top = {\n      version: 1,\n      hdrSize: this.cff.hdrSize,\n      offSize: 4,\n      header: this.cff.header,\n      nameIndex: [this.cff.postscriptName],\n      topDictIndex: [topDict],\n      stringIndex: this.strings,\n      globalSubrIndex: this.gsubrs\n    };\n    CFFTop.encode(stream, top);\n  };\n\n  return CFFSubset;\n}(Subset);\n\nvar _class;\n\nfunction _applyDecoratedDescriptor(target, property, decorators, descriptor, context) {\n  var desc = {};\n  Object['ke' + 'ys'](descriptor).forEach(function (key) {\n    desc[key] = descriptor[key];\n  });\n  desc.enumerable = !!desc.enumerable;\n  desc.configurable = !!desc.configurable;\n\n  if ('value' in desc || desc.initializer) {\n    desc.writable = true;\n  }\n\n  desc = decorators.slice().reverse().reduce(function (desc, decorator) {\n    return decorator(target, property, desc) || desc;\n  }, desc);\n\n  if (context && desc.initializer !== void 0) {\n    desc.value = desc.initializer ? desc.initializer.call(context) : void 0;\n    desc.initializer = undefined;\n  }\n\n  if (desc.initializer === void 0) {\n    Object['define' + 'Property'](target, property, desc);\n    desc = null;\n  }\n\n  return desc;\n}\n/**\n * This is the base class for all SFNT-based font formats in fontkit.\n * It supports TrueType, and PostScript glyphs, and several color glyph formats.\n */\n\n\nvar TTFFont = (_class = function () {\n  TTFFont.probe = function probe(buffer) {\n    var format = buffer.toString('ascii', 0, 4);\n    return format === 'true' || format === 'OTTO' || format === String.fromCharCode(0, 1, 0, 0);\n  };\n\n  function TTFFont(stream) {\n    var variationCoords = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n\n    _classCallCheck(this, TTFFont);\n\n    this.defaultLanguage = null;\n    this.stream = stream;\n    this.variationCoords = variationCoords;\n    this._directoryPos = this.stream.pos;\n    this._tables = {};\n    this._glyphs = {};\n\n    this._decodeDirectory(); // define properties for each table to lazily parse\n\n\n    for (var tag in this.directory.tables) {\n      var table = this.directory.tables[tag];\n\n      if (tables[tag] && table.length > 0) {\n        _Object$defineProperty(this, tag, {\n          get: this._getTable.bind(this, table)\n        });\n      }\n    }\n  }\n\n  TTFFont.prototype.setDefaultLanguage = function setDefaultLanguage() {\n    var lang = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n    this.defaultLanguage = lang;\n  };\n\n  TTFFont.prototype._getTable = function _getTable(table) {\n    if (!(table.tag in this._tables)) {\n      try {\n        this._tables[table.tag] = this._decodeTable(table);\n      } catch (e) {\n        if (fontkit.logErrors) {\n          console.error('Error decoding table ' + table.tag);\n          console.error(e.stack);\n        }\n      }\n    }\n\n    return this._tables[table.tag];\n  };\n\n  TTFFont.prototype._getTableStream = function _getTableStream(tag) {\n    var table = this.directory.tables[tag];\n\n    if (table) {\n      this.stream.pos = table.offset;\n      return this.stream;\n    }\n\n    return null;\n  };\n\n  TTFFont.prototype._decodeDirectory = function _decodeDirectory() {\n    return this.directory = Directory.decode(this.stream, {\n      _startOffset: 0\n    });\n  };\n\n  TTFFont.prototype._decodeTable = function _decodeTable(table) {\n    var pos = this.stream.pos;\n\n    var stream = this._getTableStream(table.tag);\n\n    var result = tables[table.tag].decode(stream, this, table.length);\n    this.stream.pos = pos;\n    return result;\n  };\n  /**\n   * Gets a string from the font's `name` table\n   * `lang` is a BCP-47 language code.\n   * @return {string}\n   */\n\n\n  TTFFont.prototype.getName = function getName(key) {\n    var lang = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.defaultLanguage || fontkit.defaultLanguage;\n    var record = this.name && this.name.records[key];\n\n    if (record) {\n      // Attempt to retrieve the entry, depending on which translation is available:\n      return record[lang] || record[this.defaultLanguage] || record[fontkit.defaultLanguage] || record['en'] || record[_Object$keys(record)[0]] // Seriously, ANY language would be fine\n      || null;\n    }\n\n    return null;\n  };\n  /**\n   * The unique PostScript name for this font, e.g. \"Helvetica-Bold\"\n   * @type {string}\n   */\n\n  /**\n   * Returns whether there is glyph in the font for the given unicode code point.\n   *\n   * @param {number} codePoint\n   * @return {boolean}\n   */\n\n\n  TTFFont.prototype.hasGlyphForCodePoint = function hasGlyphForCodePoint(codePoint) {\n    return !!this._cmapProcessor.lookup(codePoint);\n  };\n  /**\n   * Maps a single unicode code point to a Glyph object.\n   * Does not perform any advanced substitutions (there is no context to do so).\n   *\n   * @param {number} codePoint\n   * @return {Glyph}\n   */\n\n\n  TTFFont.prototype.glyphForCodePoint = function glyphForCodePoint(codePoint) {\n    return this.getGlyph(this._cmapProcessor.lookup(codePoint), [codePoint]);\n  };\n  /**\n   * Returns an array of Glyph objects for the given string.\n   * This is only a one-to-one mapping from characters to glyphs.\n   * For most uses, you should use font.layout (described below), which\n   * provides a much more advanced mapping supporting AAT and OpenType shaping.\n   *\n   * @param {string} string\n   * @return {Glyph[]}\n   */\n\n\n  TTFFont.prototype.glyphsForString = function glyphsForString(string) {\n    var glyphs = [];\n    var len = string.length;\n    var idx = 0;\n    var last = -1;\n    var state = -1;\n\n    while (idx <= len) {\n      var code = 0;\n      var nextState = 0;\n\n      if (idx < len) {\n        // Decode the next codepoint from UTF 16\n        code = string.charCodeAt(idx++);\n\n        if (0xd800 <= code && code <= 0xdbff && idx < len) {\n          var next = string.charCodeAt(idx);\n\n          if (0xdc00 <= next && next <= 0xdfff) {\n            idx++;\n            code = ((code & 0x3ff) << 10) + (next & 0x3ff) + 0x10000;\n          }\n        } // Compute the next state: 1 if the next codepoint is a variation selector, 0 otherwise.\n\n\n        nextState = 0xfe00 <= code && code <= 0xfe0f || 0xe0100 <= code && code <= 0xe01ef ? 1 : 0;\n      } else {\n        idx++;\n      }\n\n      if (state === 0 && nextState === 1) {\n        // Variation selector following normal codepoint.\n        glyphs.push(this.getGlyph(this._cmapProcessor.lookup(last, code), [last, code]));\n      } else if (state === 0 && nextState === 0) {\n        // Normal codepoint following normal codepoint.\n        glyphs.push(this.glyphForCodePoint(last));\n      }\n\n      last = code;\n      state = nextState;\n    }\n\n    return glyphs;\n  };\n  /**\n   * Returns a GlyphRun object, which includes an array of Glyphs and GlyphPositions for the given string.\n   *\n   * @param {string} string\n   * @param {string[]} [userFeatures]\n   * @param {string} [script]\n   * @param {string} [language]\n   * @param {string} [direction]\n   * @return {GlyphRun}\n   */\n\n\n  TTFFont.prototype.layout = function layout(string, userFeatures, script, language, direction) {\n    return this._layoutEngine.layout(string, userFeatures, script, language, direction);\n  };\n  /**\n   * Returns an array of strings that map to the given glyph id.\n   * @param {number} gid - glyph id\n   */\n\n\n  TTFFont.prototype.stringsForGlyph = function stringsForGlyph(gid) {\n    return this._layoutEngine.stringsForGlyph(gid);\n  };\n  /**\n   * An array of all [OpenType feature tags](https://www.microsoft.com/typography/otspec/featuretags.htm)\n   * (or mapped AAT tags) supported by the font.\n   * The features parameter is an array of OpenType feature tags to be applied in addition to the default set.\n   * If this is an AAT font, the OpenType feature tags are mapped to AAT features.\n   *\n   * @type {string[]}\n   */\n\n\n  TTFFont.prototype.getAvailableFeatures = function getAvailableFeatures(script, language) {\n    return this._layoutEngine.getAvailableFeatures(script, language);\n  };\n\n  TTFFont.prototype._getBaseGlyph = function _getBaseGlyph(glyph) {\n    var characters = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n\n    if (!this._glyphs[glyph]) {\n      if (this.directory.tables.glyf) {\n        this._glyphs[glyph] = new TTFGlyph(glyph, characters, this);\n      } else if (this.directory.tables['CFF '] || this.directory.tables.CFF2) {\n        this._glyphs[glyph] = new CFFGlyph(glyph, characters, this);\n      }\n    }\n\n    return this._glyphs[glyph] || null;\n  };\n  /**\n   * Returns a glyph object for the given glyph id.\n   * You can pass the array of code points this glyph represents for\n   * your use later, and it will be stored in the glyph object.\n   *\n   * @param {number} glyph\n   * @param {number[]} characters\n   * @return {Glyph}\n   */\n\n\n  TTFFont.prototype.getGlyph = function getGlyph(glyph) {\n    var characters = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n\n    if (!this._glyphs[glyph]) {\n      if (this.directory.tables.sbix) {\n        this._glyphs[glyph] = new SBIXGlyph(glyph, characters, this);\n      } else if (this.directory.tables.COLR && this.directory.tables.CPAL) {\n        this._glyphs[glyph] = new COLRGlyph(glyph, characters, this);\n      } else {\n        this._getBaseGlyph(glyph, characters);\n      }\n    }\n\n    return this._glyphs[glyph] || null;\n  };\n  /**\n   * Returns a Subset for this font.\n   * @return {Subset}\n   */\n\n\n  TTFFont.prototype.createSubset = function createSubset() {\n    if (this.directory.tables['CFF ']) {\n      return new CFFSubset(this);\n    }\n\n    return new TTFSubset(this);\n  };\n  /**\n   * Returns an object describing the available variation axes\n   * that this font supports. Keys are setting tags, and values\n   * contain the axis name, range, and default value.\n   *\n   * @type {object}\n   */\n\n  /**\n   * Returns a new font with the given variation settings applied.\n   * Settings can either be an instance name, or an object containing\n   * variation tags as specified by the `variationAxes` property.\n   *\n   * @param {object} settings\n   * @return {TTFFont}\n   */\n\n\n  TTFFont.prototype.getVariation = function getVariation(settings) {\n    if (!(this.directory.tables.fvar && (this.directory.tables.gvar && this.directory.tables.glyf || this.directory.tables.CFF2))) {\n      throw new Error('Variations require a font with the fvar, gvar and glyf, or CFF2 tables.');\n    }\n\n    if (typeof settings === 'string') {\n      settings = this.namedVariations[settings];\n    }\n\n    if ((typeof settings === 'undefined' ? 'undefined' : _typeof(settings)) !== 'object') {\n      throw new Error('Variation settings must be either a variation name or settings object.');\n    } // normalize the coordinates\n\n\n    var coords = this.fvar.axis.map(function (axis, i) {\n      var axisTag = axis.axisTag.trim();\n\n      if (axisTag in settings) {\n        return Math.max(axis.minValue, Math.min(axis.maxValue, settings[axisTag]));\n      } else {\n        return axis.defaultValue;\n      }\n    });\n    var stream = new r.DecodeStream(this.stream.buffer);\n    stream.pos = this._directoryPos;\n    var font = new TTFFont(stream, coords);\n    font._tables = this._tables;\n    return font;\n  }; // Standardized format plugin API\n\n\n  TTFFont.prototype.getFont = function getFont(name) {\n    return this.getVariation(name);\n  };\n\n  _createClass(TTFFont, [{\n    key: 'postscriptName',\n    get: function get() {\n      return this.getName('postscriptName');\n    }\n    /**\n     * The font's full name, e.g. \"Helvetica Bold\"\n     * @type {string}\n     */\n\n  }, {\n    key: 'fullName',\n    get: function get() {\n      return this.getName('fullName');\n    }\n    /**\n     * The font's family name, e.g. \"Helvetica\"\n     * @type {string}\n     */\n\n  }, {\n    key: 'familyName',\n    get: function get() {\n      return this.getName('fontFamily');\n    }\n    /**\n     * The font's sub-family, e.g. \"Bold\".\n     * @type {string}\n     */\n\n  }, {\n    key: 'subfamilyName',\n    get: function get() {\n      return this.getName('fontSubfamily');\n    }\n    /**\n     * The font's copyright information\n     * @type {string}\n     */\n\n  }, {\n    key: 'copyright',\n    get: function get() {\n      return this.getName('copyright');\n    }\n    /**\n     * The font's version number\n     * @type {string}\n     */\n\n  }, {\n    key: 'version',\n    get: function get() {\n      return this.getName('version');\n    }\n    /**\n     * The font’s [ascender](https://en.wikipedia.org/wiki/Ascender_(typography))\n     * @type {number}\n     */\n\n  }, {\n    key: 'ascent',\n    get: function get() {\n      return this.hhea.ascent;\n    }\n    /**\n     * The font’s [descender](https://en.wikipedia.org/wiki/Descender)\n     * @type {number}\n     */\n\n  }, {\n    key: 'descent',\n    get: function get() {\n      return this.hhea.descent;\n    }\n    /**\n     * The amount of space that should be included between lines\n     * @type {number}\n     */\n\n  }, {\n    key: 'lineGap',\n    get: function get() {\n      return this.hhea.lineGap;\n    }\n    /**\n     * The offset from the normal underline position that should be used\n     * @type {number}\n     */\n\n  }, {\n    key: 'underlinePosition',\n    get: function get() {\n      return this.post.underlinePosition;\n    }\n    /**\n     * The weight of the underline that should be used\n     * @type {number}\n     */\n\n  }, {\n    key: 'underlineThickness',\n    get: function get() {\n      return this.post.underlineThickness;\n    }\n    /**\n     * If this is an italic font, the angle the cursor should be drawn at to match the font design\n     * @type {number}\n     */\n\n  }, {\n    key: 'italicAngle',\n    get: function get() {\n      return this.post.italicAngle;\n    }\n    /**\n     * The height of capital letters above the baseline.\n     * See [here](https://en.wikipedia.org/wiki/Cap_height) for more details.\n     * @type {number}\n     */\n\n  }, {\n    key: 'capHeight',\n    get: function get() {\n      var os2 = this['OS/2'];\n      return os2 ? os2.capHeight : this.ascent;\n    }\n    /**\n     * The height of lower case letters in the font.\n     * See [here](https://en.wikipedia.org/wiki/X-height) for more details.\n     * @type {number}\n     */\n\n  }, {\n    key: 'xHeight',\n    get: function get() {\n      var os2 = this['OS/2'];\n      return os2 ? os2.xHeight : 0;\n    }\n    /**\n     * The number of glyphs in the font.\n     * @type {number}\n     */\n\n  }, {\n    key: 'numGlyphs',\n    get: function get() {\n      return this.maxp.numGlyphs;\n    }\n    /**\n     * The size of the font’s internal coordinate grid\n     * @type {number}\n     */\n\n  }, {\n    key: 'unitsPerEm',\n    get: function get() {\n      return this.head.unitsPerEm;\n    }\n    /**\n     * The font’s bounding box, i.e. the box that encloses all glyphs in the font.\n     * @type {BBox}\n     */\n\n  }, {\n    key: 'bbox',\n    get: function get() {\n      return _Object$freeze(new BBox(this.head.xMin, this.head.yMin, this.head.xMax, this.head.yMax));\n    }\n  }, {\n    key: '_cmapProcessor',\n    get: function get() {\n      return new CmapProcessor(this.cmap);\n    }\n    /**\n     * An array of all of the unicode code points supported by the font.\n     * @type {number[]}\n     */\n\n  }, {\n    key: 'characterSet',\n    get: function get() {\n      return this._cmapProcessor.getCharacterSet();\n    }\n  }, {\n    key: '_layoutEngine',\n    get: function get() {\n      return new LayoutEngine(this);\n    }\n  }, {\n    key: 'availableFeatures',\n    get: function get() {\n      return this._layoutEngine.getAvailableFeatures();\n    }\n  }, {\n    key: 'variationAxes',\n    get: function get() {\n      var res = {};\n\n      if (!this.fvar) {\n        return res;\n      }\n\n      for (var _iterator = this.fvar.axis, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _getIterator(_iterator);;) {\n        var _ref;\n\n        if (_isArray) {\n          if (_i >= _iterator.length) break;\n          _ref = _iterator[_i++];\n        } else {\n          _i = _iterator.next();\n          if (_i.done) break;\n          _ref = _i.value;\n        }\n\n        var axis = _ref;\n        res[axis.axisTag.trim()] = {\n          name: axis.name.en,\n          min: axis.minValue,\n          default: axis.defaultValue,\n          max: axis.maxValue\n        };\n      }\n\n      return res;\n    }\n    /**\n     * Returns an object describing the named variation instances\n     * that the font designer has specified. Keys are variation names\n     * and values are the variation settings for this instance.\n     *\n     * @type {object}\n     */\n\n  }, {\n    key: 'namedVariations',\n    get: function get() {\n      var res = {};\n\n      if (!this.fvar) {\n        return res;\n      }\n\n      for (var _iterator2 = this.fvar.instance, _isArray2 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray2 ? _iterator2 : _getIterator(_iterator2);;) {\n        var _ref2;\n\n        if (_isArray2) {\n          if (_i2 >= _iterator2.length) break;\n          _ref2 = _iterator2[_i2++];\n        } else {\n          _i2 = _iterator2.next();\n          if (_i2.done) break;\n          _ref2 = _i2.value;\n        }\n\n        var instance = _ref2;\n        var settings = {};\n\n        for (var i = 0; i < this.fvar.axis.length; i++) {\n          var axis = this.fvar.axis[i];\n          settings[axis.axisTag.trim()] = instance.coord[i];\n        }\n\n        res[instance.name.en] = settings;\n      }\n\n      return res;\n    }\n  }, {\n    key: '_variationProcessor',\n    get: function get() {\n      if (!this.fvar) {\n        return null;\n      }\n\n      var variationCoords = this.variationCoords; // Ignore if no variation coords and not CFF2\n\n      if (!variationCoords && !this.CFF2) {\n        return null;\n      }\n\n      if (!variationCoords) {\n        variationCoords = this.fvar.axis.map(function (axis) {\n          return axis.defaultValue;\n        });\n      }\n\n      return new GlyphVariationProcessor(this, variationCoords);\n    }\n  }]);\n\n  return TTFFont;\n}(), (_applyDecoratedDescriptor(_class.prototype, 'bbox', [cache], _Object$getOwnPropertyDescriptor(_class.prototype, 'bbox'), _class.prototype), _applyDecoratedDescriptor(_class.prototype, '_cmapProcessor', [cache], _Object$getOwnPropertyDescriptor(_class.prototype, '_cmapProcessor'), _class.prototype), _applyDecoratedDescriptor(_class.prototype, 'characterSet', [cache], _Object$getOwnPropertyDescriptor(_class.prototype, 'characterSet'), _class.prototype), _applyDecoratedDescriptor(_class.prototype, '_layoutEngine', [cache], _Object$getOwnPropertyDescriptor(_class.prototype, '_layoutEngine'), _class.prototype), _applyDecoratedDescriptor(_class.prototype, 'variationAxes', [cache], _Object$getOwnPropertyDescriptor(_class.prototype, 'variationAxes'), _class.prototype), _applyDecoratedDescriptor(_class.prototype, 'namedVariations', [cache], _Object$getOwnPropertyDescriptor(_class.prototype, 'namedVariations'), _class.prototype), _applyDecoratedDescriptor(_class.prototype, '_variationProcessor', [cache], _Object$getOwnPropertyDescriptor(_class.prototype, '_variationProcessor'), _class.prototype)), _class);\nvar WOFFDirectoryEntry = new r.Struct({\n  tag: new r.String(4),\n  offset: new r.Pointer(r.uint32, 'void', {\n    type: 'global'\n  }),\n  compLength: r.uint32,\n  length: r.uint32,\n  origChecksum: r.uint32\n});\nvar WOFFDirectory = new r.Struct({\n  tag: new r.String(4),\n  // should be 'wOFF'\n  flavor: r.uint32,\n  length: r.uint32,\n  numTables: r.uint16,\n  reserved: new r.Reserved(r.uint16),\n  totalSfntSize: r.uint32,\n  majorVersion: r.uint16,\n  minorVersion: r.uint16,\n  metaOffset: r.uint32,\n  metaLength: r.uint32,\n  metaOrigLength: r.uint32,\n  privOffset: r.uint32,\n  privLength: r.uint32,\n  tables: new r.Array(WOFFDirectoryEntry, 'numTables')\n});\n\nWOFFDirectory.process = function () {\n  var tables = {};\n\n  for (var _iterator = this.tables, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _getIterator(_iterator);;) {\n    var _ref;\n\n    if (_isArray) {\n      if (_i >= _iterator.length) break;\n      _ref = _iterator[_i++];\n    } else {\n      _i = _iterator.next();\n      if (_i.done) break;\n      _ref = _i.value;\n    }\n\n    var table = _ref;\n    tables[table.tag] = table;\n  }\n\n  this.tables = tables;\n};\n\nvar WOFFFont = function (_TTFFont) {\n  _inherits(WOFFFont, _TTFFont);\n\n  function WOFFFont() {\n    _classCallCheck(this, WOFFFont);\n\n    return _possibleConstructorReturn(this, _TTFFont.apply(this, arguments));\n  }\n\n  WOFFFont.probe = function probe(buffer) {\n    return buffer.toString('ascii', 0, 4) === 'wOFF';\n  };\n\n  WOFFFont.prototype._decodeDirectory = function _decodeDirectory() {\n    this.directory = WOFFDirectory.decode(this.stream, {\n      _startOffset: 0\n    });\n  };\n\n  WOFFFont.prototype._getTableStream = function _getTableStream(tag) {\n    var table = this.directory.tables[tag];\n\n    if (table) {\n      this.stream.pos = table.offset;\n\n      if (table.compLength < table.length) {\n        this.stream.pos += 2; // skip deflate header\n\n        var outBuffer = new Buffer(table.length);\n        var buf = inflate(this.stream.readBuffer(table.compLength - 2), outBuffer);\n        return new r.DecodeStream(buf);\n      } else {\n        return this.stream;\n      }\n    }\n\n    return null;\n  };\n\n  return WOFFFont;\n}(TTFFont);\n/**\n * Represents a TrueType glyph in the WOFF2 format, which compresses glyphs differently.\n */\n\n\nvar WOFF2Glyph = function (_TTFGlyph) {\n  _inherits(WOFF2Glyph, _TTFGlyph);\n\n  function WOFF2Glyph() {\n    _classCallCheck(this, WOFF2Glyph);\n\n    return _possibleConstructorReturn(this, _TTFGlyph.apply(this, arguments));\n  }\n\n  WOFF2Glyph.prototype._decode = function _decode() {\n    // We have to decode in advance (in WOFF2Font), so just return the pre-decoded data.\n    return this._font._transformedGlyphs[this.id];\n  };\n\n  WOFF2Glyph.prototype._getCBox = function _getCBox() {\n    return this.path.bbox;\n  };\n\n  return WOFF2Glyph;\n}(TTFGlyph);\n\nvar Base128 = {\n  decode: function decode(stream) {\n    var result = 0;\n    var iterable = [0, 1, 2, 3, 4];\n\n    for (var j = 0; j < iterable.length; j++) {\n      var i = iterable[j];\n      var code = stream.readUInt8(); // If any of the top seven bits are set then we're about to overflow.\n\n      if (result & 0xe0000000) {\n        throw new Error('Overflow');\n      }\n\n      result = result << 7 | code & 0x7f;\n\n      if ((code & 0x80) === 0) {\n        return result;\n      }\n    }\n\n    throw new Error('Bad base 128 number');\n  }\n};\nvar knownTags = ['cmap', 'head', 'hhea', 'hmtx', 'maxp', 'name', 'OS/2', 'post', 'cvt ', 'fpgm', 'glyf', 'loca', 'prep', 'CFF ', 'VORG', 'EBDT', 'EBLC', 'gasp', 'hdmx', 'kern', 'LTSH', 'PCLT', 'VDMX', 'vhea', 'vmtx', 'BASE', 'GDEF', 'GPOS', 'GSUB', 'EBSC', 'JSTF', 'MATH', 'CBDT', 'CBLC', 'COLR', 'CPAL', 'SVG ', 'sbix', 'acnt', 'avar', 'bdat', 'bloc', 'bsln', 'cvar', 'fdsc', 'feat', 'fmtx', 'fvar', 'gvar', 'hsty', 'just', 'lcar', 'mort', 'morx', 'opbd', 'prop', 'trak', 'Zapf', 'Silf', 'Glat', 'Gloc', 'Feat', 'Sill'];\nvar WOFF2DirectoryEntry = new r.Struct({\n  flags: r.uint8,\n  customTag: new r.Optional(new r.String(4), function (t) {\n    return (t.flags & 0x3f) === 0x3f;\n  }),\n  tag: function tag(t) {\n    return t.customTag || knownTags[t.flags & 0x3f];\n  },\n  // || (() => { throw new Error(`Bad tag: ${flags & 0x3f}`); })(); },\n  length: Base128,\n  transformVersion: function transformVersion(t) {\n    return t.flags >>> 6 & 0x03;\n  },\n  transformed: function transformed(t) {\n    return t.tag === 'glyf' || t.tag === 'loca' ? t.transformVersion === 0 : t.transformVersion !== 0;\n  },\n  transformLength: new r.Optional(Base128, function (t) {\n    return t.transformed;\n  })\n});\nvar WOFF2Directory = new r.Struct({\n  tag: new r.String(4),\n  // should be 'wOF2'\n  flavor: r.uint32,\n  length: r.uint32,\n  numTables: r.uint16,\n  reserved: new r.Reserved(r.uint16),\n  totalSfntSize: r.uint32,\n  totalCompressedSize: r.uint32,\n  majorVersion: r.uint16,\n  minorVersion: r.uint16,\n  metaOffset: r.uint32,\n  metaLength: r.uint32,\n  metaOrigLength: r.uint32,\n  privOffset: r.uint32,\n  privLength: r.uint32,\n  tables: new r.Array(WOFF2DirectoryEntry, 'numTables')\n});\n\nWOFF2Directory.process = function () {\n  var tables = {};\n\n  for (var i = 0; i < this.tables.length; i++) {\n    var table = this.tables[i];\n    tables[table.tag] = table;\n  }\n\n  return this.tables = tables;\n};\n/**\n * Subclass of TTFFont that represents a TTF/OTF font compressed by WOFF2\n * See spec here: http://www.w3.org/TR/WOFF2/\n */\n\n\nvar WOFF2Font = function (_TTFFont) {\n  _inherits(WOFF2Font, _TTFFont);\n\n  function WOFF2Font() {\n    _classCallCheck(this, WOFF2Font);\n\n    return _possibleConstructorReturn(this, _TTFFont.apply(this, arguments));\n  }\n\n  WOFF2Font.probe = function probe(buffer) {\n    return buffer.toString('ascii', 0, 4) === 'wOF2';\n  };\n\n  WOFF2Font.prototype._decodeDirectory = function _decodeDirectory() {\n    this.directory = WOFF2Directory.decode(this.stream);\n    this._dataPos = this.stream.pos;\n  };\n\n  WOFF2Font.prototype._decompress = function _decompress() {\n    // decompress data and setup table offsets if we haven't already\n    if (!this._decompressed) {\n      this.stream.pos = this._dataPos;\n      var buffer = this.stream.readBuffer(this.directory.totalCompressedSize);\n      var decompressedSize = 0;\n\n      for (var tag in this.directory.tables) {\n        var entry = this.directory.tables[tag];\n        entry.offset = decompressedSize;\n        decompressedSize += entry.transformLength != null ? entry.transformLength : entry.length;\n      }\n\n      var decompressed = brotli(buffer, decompressedSize);\n\n      if (!decompressed) {\n        throw new Error('Error decoding compressed data in WOFF2');\n      }\n\n      this.stream = new r.DecodeStream(new Buffer(decompressed));\n      this._decompressed = true;\n    }\n  };\n\n  WOFF2Font.prototype._decodeTable = function _decodeTable(table) {\n    this._decompress();\n\n    return _TTFFont.prototype._decodeTable.call(this, table);\n  }; // Override this method to get a glyph and return our\n  // custom subclass if there is a glyf table.\n\n\n  WOFF2Font.prototype._getBaseGlyph = function _getBaseGlyph(glyph) {\n    var characters = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n\n    if (!this._glyphs[glyph]) {\n      if (this.directory.tables.glyf && this.directory.tables.glyf.transformed) {\n        if (!this._transformedGlyphs) {\n          this._transformGlyfTable();\n        }\n\n        return this._glyphs[glyph] = new WOFF2Glyph(glyph, characters, this);\n      } else {\n        return _TTFFont.prototype._getBaseGlyph.call(this, glyph, characters);\n      }\n    }\n  };\n\n  WOFF2Font.prototype._transformGlyfTable = function _transformGlyfTable() {\n    this._decompress();\n\n    this.stream.pos = this.directory.tables.glyf.offset;\n    var table = GlyfTable.decode(this.stream);\n    var glyphs = [];\n\n    for (var index = 0; index < table.numGlyphs; index++) {\n      var glyph = {};\n      var nContours = table.nContours.readInt16BE();\n      glyph.numberOfContours = nContours;\n\n      if (nContours > 0) {\n        // simple glyph\n        var nPoints = [];\n        var totalPoints = 0;\n\n        for (var i = 0; i < nContours; i++) {\n          var _r = read255UInt16(table.nPoints);\n\n          totalPoints += _r;\n          nPoints.push(totalPoints);\n        }\n\n        glyph.points = decodeTriplet(table.flags, table.glyphs, totalPoints);\n\n        for (var _i = 0; _i < nContours; _i++) {\n          glyph.points[nPoints[_i] - 1].endContour = true;\n        }\n\n        var instructionSize = read255UInt16(table.glyphs);\n      } else if (nContours < 0) {\n        // composite glyph\n        var haveInstructions = TTFGlyph.prototype._decodeComposite.call({\n          _font: this\n        }, glyph, table.composites);\n\n        if (haveInstructions) {\n          var instructionSize = read255UInt16(table.glyphs);\n        }\n      }\n\n      glyphs.push(glyph);\n    }\n\n    this._transformedGlyphs = glyphs;\n  };\n\n  return WOFF2Font;\n}(TTFFont);\n\nvar Substream = function () {\n  function Substream(length) {\n    _classCallCheck(this, Substream);\n\n    this.length = length;\n    this._buf = new r.Buffer(length);\n  }\n\n  Substream.prototype.decode = function decode(stream, parent) {\n    return new r.DecodeStream(this._buf.decode(stream, parent));\n  };\n\n  return Substream;\n}(); // This struct represents the entire glyf table\n\n\nvar GlyfTable = new r.Struct({\n  version: r.uint32,\n  numGlyphs: r.uint16,\n  indexFormat: r.uint16,\n  nContourStreamSize: r.uint32,\n  nPointsStreamSize: r.uint32,\n  flagStreamSize: r.uint32,\n  glyphStreamSize: r.uint32,\n  compositeStreamSize: r.uint32,\n  bboxStreamSize: r.uint32,\n  instructionStreamSize: r.uint32,\n  nContours: new Substream('nContourStreamSize'),\n  nPoints: new Substream('nPointsStreamSize'),\n  flags: new Substream('flagStreamSize'),\n  glyphs: new Substream('glyphStreamSize'),\n  composites: new Substream('compositeStreamSize'),\n  bboxes: new Substream('bboxStreamSize'),\n  instructions: new Substream('instructionStreamSize')\n});\nvar WORD_CODE = 253;\nvar ONE_MORE_BYTE_CODE2 = 254;\nvar ONE_MORE_BYTE_CODE1 = 255;\nvar LOWEST_U_CODE = 253;\n\nfunction read255UInt16(stream) {\n  var code = stream.readUInt8();\n\n  if (code === WORD_CODE) {\n    return stream.readUInt16BE();\n  }\n\n  if (code === ONE_MORE_BYTE_CODE1) {\n    return stream.readUInt8() + LOWEST_U_CODE;\n  }\n\n  if (code === ONE_MORE_BYTE_CODE2) {\n    return stream.readUInt8() + LOWEST_U_CODE * 2;\n  }\n\n  return code;\n}\n\nfunction withSign(flag, baseval) {\n  return flag & 1 ? baseval : -baseval;\n}\n\nfunction decodeTriplet(flags, glyphs, nPoints) {\n  var y = void 0;\n  var x = y = 0;\n  var res = [];\n\n  for (var i = 0; i < nPoints; i++) {\n    var dx = 0,\n        dy = 0;\n    var flag = flags.readUInt8();\n    var onCurve = !(flag >> 7);\n    flag &= 0x7f;\n\n    if (flag < 10) {\n      dx = 0;\n      dy = withSign(flag, ((flag & 14) << 7) + glyphs.readUInt8());\n    } else if (flag < 20) {\n      dx = withSign(flag, ((flag - 10 & 14) << 7) + glyphs.readUInt8());\n      dy = 0;\n    } else if (flag < 84) {\n      var b0 = flag - 20;\n      var b1 = glyphs.readUInt8();\n      dx = withSign(flag, 1 + (b0 & 0x30) + (b1 >> 4));\n      dy = withSign(flag >> 1, 1 + ((b0 & 0x0c) << 2) + (b1 & 0x0f));\n    } else if (flag < 120) {\n      var b0 = flag - 84;\n      dx = withSign(flag, 1 + (b0 / 12 << 8) + glyphs.readUInt8());\n      dy = withSign(flag >> 1, 1 + (b0 % 12 >> 2 << 8) + glyphs.readUInt8());\n    } else if (flag < 124) {\n      var b1 = glyphs.readUInt8();\n      var b2 = glyphs.readUInt8();\n      dx = withSign(flag, (b1 << 4) + (b2 >> 4));\n      dy = withSign(flag >> 1, ((b2 & 0x0f) << 8) + glyphs.readUInt8());\n    } else {\n      dx = withSign(flag, glyphs.readUInt16BE());\n      dy = withSign(flag >> 1, glyphs.readUInt16BE());\n    }\n\n    x += dx;\n    y += dy;\n    res.push(new Point(onCurve, false, x, y));\n  }\n\n  return res;\n}\n\nvar TTCHeader = new r.VersionedStruct(r.uint32, {\n  0x00010000: {\n    numFonts: r.uint32,\n    offsets: new r.Array(r.uint32, 'numFonts')\n  },\n  0x00020000: {\n    numFonts: r.uint32,\n    offsets: new r.Array(r.uint32, 'numFonts'),\n    dsigTag: r.uint32,\n    dsigLength: r.uint32,\n    dsigOffset: r.uint32\n  }\n});\n\nvar TrueTypeCollection = function () {\n  TrueTypeCollection.probe = function probe(buffer) {\n    return buffer.toString('ascii', 0, 4) === 'ttcf';\n  };\n\n  function TrueTypeCollection(stream) {\n    _classCallCheck(this, TrueTypeCollection);\n\n    this.stream = stream;\n\n    if (stream.readString(4) !== 'ttcf') {\n      throw new Error('Not a TrueType collection');\n    }\n\n    this.header = TTCHeader.decode(stream);\n  }\n\n  TrueTypeCollection.prototype.getFont = function getFont(name) {\n    for (var _iterator = this.header.offsets, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _getIterator(_iterator);;) {\n      var _ref;\n\n      if (_isArray) {\n        if (_i >= _iterator.length) break;\n        _ref = _iterator[_i++];\n      } else {\n        _i = _iterator.next();\n        if (_i.done) break;\n        _ref = _i.value;\n      }\n\n      var offset = _ref;\n      var stream = new r.DecodeStream(this.stream.buffer);\n      stream.pos = offset;\n      var font = new TTFFont(stream);\n\n      if (font.postscriptName === name) {\n        return font;\n      }\n    }\n\n    return null;\n  };\n\n  _createClass(TrueTypeCollection, [{\n    key: 'fonts',\n    get: function get() {\n      var fonts = [];\n\n      for (var _iterator2 = this.header.offsets, _isArray2 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray2 ? _iterator2 : _getIterator(_iterator2);;) {\n        var _ref2;\n\n        if (_isArray2) {\n          if (_i2 >= _iterator2.length) break;\n          _ref2 = _iterator2[_i2++];\n        } else {\n          _i2 = _iterator2.next();\n          if (_i2.done) break;\n          _ref2 = _i2.value;\n        }\n\n        var offset = _ref2;\n        var stream = new r.DecodeStream(this.stream.buffer);\n        stream.pos = offset;\n        fonts.push(new TTFFont(stream));\n      }\n\n      return fonts;\n    }\n  }]);\n\n  return TrueTypeCollection;\n}();\n\nvar DFontName = new r.String(r.uint8);\nvar DFontData = new r.Struct({\n  len: r.uint32,\n  buf: new r.Buffer('len')\n});\nvar Ref = new r.Struct({\n  id: r.uint16,\n  nameOffset: r.int16,\n  attr: r.uint8,\n  dataOffset: r.uint24,\n  handle: r.uint32\n});\nvar Type = new r.Struct({\n  name: new r.String(4),\n  maxTypeIndex: r.uint16,\n  refList: new r.Pointer(r.uint16, new r.Array(Ref, function (t) {\n    return t.maxTypeIndex + 1;\n  }), {\n    type: 'parent'\n  })\n});\nvar TypeList = new r.Struct({\n  length: r.uint16,\n  types: new r.Array(Type, function (t) {\n    return t.length + 1;\n  })\n});\nvar DFontMap = new r.Struct({\n  reserved: new r.Reserved(r.uint8, 24),\n  typeList: new r.Pointer(r.uint16, TypeList),\n  nameListOffset: new r.Pointer(r.uint16, 'void')\n});\nvar DFontHeader = new r.Struct({\n  dataOffset: r.uint32,\n  map: new r.Pointer(r.uint32, DFontMap),\n  dataLength: r.uint32,\n  mapLength: r.uint32\n});\n\nvar DFont = function () {\n  DFont.probe = function probe(buffer) {\n    var stream = new r.DecodeStream(buffer);\n\n    try {\n      var header = DFontHeader.decode(stream);\n    } catch (e) {\n      return false;\n    }\n\n    for (var _iterator = header.map.typeList.types, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _getIterator(_iterator);;) {\n      var _ref;\n\n      if (_isArray) {\n        if (_i >= _iterator.length) break;\n        _ref = _iterator[_i++];\n      } else {\n        _i = _iterator.next();\n        if (_i.done) break;\n        _ref = _i.value;\n      }\n\n      var type = _ref;\n\n      if (type.name === 'sfnt') {\n        return true;\n      }\n    }\n\n    return false;\n  };\n\n  function DFont(stream) {\n    _classCallCheck(this, DFont);\n\n    this.stream = stream;\n    this.header = DFontHeader.decode(this.stream);\n\n    for (var _iterator2 = this.header.map.typeList.types, _isArray2 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray2 ? _iterator2 : _getIterator(_iterator2);;) {\n      var _ref2;\n\n      if (_isArray2) {\n        if (_i2 >= _iterator2.length) break;\n        _ref2 = _iterator2[_i2++];\n      } else {\n        _i2 = _iterator2.next();\n        if (_i2.done) break;\n        _ref2 = _i2.value;\n      }\n\n      var type = _ref2;\n\n      for (var _iterator3 = type.refList, _isArray3 = Array.isArray(_iterator3), _i3 = 0, _iterator3 = _isArray3 ? _iterator3 : _getIterator(_iterator3);;) {\n        var _ref3;\n\n        if (_isArray3) {\n          if (_i3 >= _iterator3.length) break;\n          _ref3 = _iterator3[_i3++];\n        } else {\n          _i3 = _iterator3.next();\n          if (_i3.done) break;\n          _ref3 = _i3.value;\n        }\n\n        var ref = _ref3;\n\n        if (ref.nameOffset >= 0) {\n          this.stream.pos = ref.nameOffset + this.header.map.nameListOffset;\n          ref.name = DFontName.decode(this.stream);\n        } else {\n          ref.name = null;\n        }\n      }\n\n      if (type.name === 'sfnt') {\n        this.sfnt = type;\n      }\n    }\n  }\n\n  DFont.prototype.getFont = function getFont(name) {\n    if (!this.sfnt) {\n      return null;\n    }\n\n    for (var _iterator4 = this.sfnt.refList, _isArray4 = Array.isArray(_iterator4), _i4 = 0, _iterator4 = _isArray4 ? _iterator4 : _getIterator(_iterator4);;) {\n      var _ref4;\n\n      if (_isArray4) {\n        if (_i4 >= _iterator4.length) break;\n        _ref4 = _iterator4[_i4++];\n      } else {\n        _i4 = _iterator4.next();\n        if (_i4.done) break;\n        _ref4 = _i4.value;\n      }\n\n      var ref = _ref4;\n      var pos = this.header.dataOffset + ref.dataOffset + 4;\n      var stream = new r.DecodeStream(this.stream.buffer.slice(pos));\n      var font = new TTFFont(stream);\n\n      if (font.postscriptName === name) {\n        return font;\n      }\n    }\n\n    return null;\n  };\n\n  _createClass(DFont, [{\n    key: 'fonts',\n    get: function get() {\n      var fonts = [];\n\n      for (var _iterator5 = this.sfnt.refList, _isArray5 = Array.isArray(_iterator5), _i5 = 0, _iterator5 = _isArray5 ? _iterator5 : _getIterator(_iterator5);;) {\n        var _ref5;\n\n        if (_isArray5) {\n          if (_i5 >= _iterator5.length) break;\n          _ref5 = _iterator5[_i5++];\n        } else {\n          _i5 = _iterator5.next();\n          if (_i5.done) break;\n          _ref5 = _i5.value;\n        }\n\n        var ref = _ref5;\n        var pos = this.header.dataOffset + ref.dataOffset + 4;\n        var stream = new r.DecodeStream(this.stream.buffer.slice(pos));\n        fonts.push(new TTFFont(stream));\n      }\n\n      return fonts;\n    }\n  }]);\n\n  return DFont;\n}(); // Register font formats\n\n\nfontkit.registerFormat(TTFFont);\nfontkit.registerFormat(WOFFFont);\nfontkit.registerFormat(WOFF2Font);\nfontkit.registerFormat(TrueTypeCollection);\nfontkit.registerFormat(DFont);\nmodule.exports = fontkit;"],"sourceRoot":""}